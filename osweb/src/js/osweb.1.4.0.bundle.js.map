{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/osweb/classes/var_store.js","webpack:///./src/js/osweb/backends/clock.js","webpack:///./src/js/osweb/items/item.js","webpack:///./src/js/osweb/util/matrix.js","webpack:///./src/js/osweb/items/loop.js","webpack:///./src/js/osweb/backends/keyboard.js","webpack:///./src/js/osweb/items/sequence.js","webpack:///./src/js/osweb/items/coroutines.js","webpack:///./src/js/osweb/backends/mouse.js","webpack:///./src/js/osweb/items/generic_response.js","webpack:///./src/js/osweb/items/sketchpad.js","webpack:///./src/js/osweb/items/feedback.js","webpack:///./src/js/osweb/items/inline_script.js","webpack:///./src/js/osweb/items/inline_javascript.js","webpack:///./src/js/osweb/items/keyboard_response.js","webpack:///./src/js/osweb/items/mouse_response.js","webpack:///./src/js/osweb/items/logger.js","webpack:///./src/js/osweb/backends/sampler.js","webpack:///./src/js/osweb/items/sampler.js","webpack:///./src/js/osweb/items/synth.js","webpack:///./src/js/osweb/items/advanced_delay.js","webpack:///./src/js/osweb/items/form_html.js","webpack:///./src/js/osweb/items/form_consent.js","webpack:///./src/js/osweb/items/inline_html.js","webpack:///./src/js/osweb/items/form_multiple_choice.js","webpack:///./src/js/osweb/items/form_text_display.js","webpack:///./src/js/osweb/items/form_text_input.js","webpack:///./src/js/osweb/backends/video.js","webpack:///./src/js/osweb/items/media_player.js","webpack:///./src/js/osweb/items/notepad.js","webpack:///./src/js/osweb/items/repeat_cycle.js","webpack:///./src/js/osweb/items/reset_feedback.js","webpack:///./src/js/osweb/items/touch_response.js","webpack:///./src/js/osweb/elements/base_element.js","webpack:///./src/js/osweb/system/constants.js","webpack:///./src/js/osweb/elements/arrow.js","webpack:///./src/js/osweb/elements/circle.js","webpack:///./src/js/osweb/elements/ellipse.js","webpack:///./src/js/osweb/elements/fixdot.js","webpack:///./src/js/osweb/elements/gabor.js","webpack:///./src/js/osweb/elements/image.js","webpack:///./src/js/osweb/elements/line.js","webpack:///./src/js/osweb/elements/noise.js","webpack:///./src/js/osweb/elements/rect.js","webpack:///./src/js/osweb/elements/textline.js","webpack:///./src/js/osweb/system/debugger.js","webpack:///./src/js/osweb/system/convertor.js","webpack:///./src/js/osweb/system/events.js","webpack:///./src/js/osweb/system/parameters.js","webpack:///./src/js/osweb/system/screen.js","webpack:///./src/js/osweb/system/session.js","webpack:///./src/js/osweb/util/files.js","webpack:///./src/js/osweb/system/transfer.js","webpack:///./src/js/osweb/classes/item_stack.js","webpack:///./src/js/osweb/classes/item_store.js","webpack:///./src/js/osweb/classes/file_pool_store.js","webpack:///./src/js/osweb/classes/syntax.js","webpack:///./src/js/osweb/python/python_math.js","webpack:///./src/js/osweb/python/python_opensesame.js","webpack:///./src/js/osweb/python/python_random.js","webpack:///./src/js/osweb/python/python_string.js","webpack:///./src/js/osweb/python/python.js","webpack:///./src/js/osweb/backends/log.js","webpack:///./src/js/osweb/items/experiment.js","webpack:///./src/js/osweb/system/runner.js","webpack:///./src/js/osweb/index.js","webpack:///./src/app.js","webpack:///./src/js/osweb/backends/canvas.js","webpack:///./src/js/osweb/backends/styles.js","webpack:///./src/js/osweb/classes/canvas_handler.js","webpack:///./src/js/osweb/classes/javascript_workspace.js","webpack:///./src/js/osweb/classes/javascript_workspace_api.js","webpack:///./src/js/osweb/classes/python_workspace.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","slice","VarStore","item","parent","this","_item","_parent","_ignored_properties","variable","defaultValue","evaluate","valid","addQuotes","_bypass_proxy","syntax","eval_text","inspect","includes","variables","pairs","has","preserve","unset","Clock","experiment","_experiment","_startTime","_now","performance","now","Math","round","webkitNow","Date","getTime","ms","_runner","_events","_run","constants","RESPONSE_DURATION","Item","script","constructor","_status","STATUS_NONE","clock","count","python_workspace","_pythonWorkspace","response_store","_responseStore","_syntax","vars","STATUS_FINALIZE","_currentItem","run","response","pMs","sleep","time","line","trim","charAt","comments","fromAscii","parse_comment","parse_cmd","cmd","args","set","_debugger","addError","parse_multiline_vars","reset","lines","split","parse_variable","parse_line","STATUS_INITIALIZE","addMessage","type","_prepare_complete","unstack","srcMatrix","TypeError","values","reduce","acc","cycle","entries","val","stack","columns","keys","map","row","fullfactorial","matrix","combos","shuffleVert","grouped","cols","prev","shuffleHoriz","vals","res","sortCol","col","Error","sort","reverseRows","ReferenceError","roll","amount","column","parseInt","rollN","list","unshift","pop","weight","weightCol","Loop","description","_break_if","_cycles","_index","_keyboard","_operations","_initialized","from_string","el","_eval_args","remove_quotes","orig_matrix","cycles","repeat","skip","offset","order","break_if","source","source_file","instruction","params","Number","_pythonParser","_prepare","body","undefined","_runstatement","e","items","_items","parseFileSource","set_item_onset","src","toLowerCase","endsWith","_pool","parse","skip_empty_lines","wholeRepeats","floor","partialRepeats","allCycles","Array","remainder","k","mtrx","func","repeat_cycle","msg","apply_cycle","break_if_val","compile_cond","_eval","_complete","_itemStore","prepare","execute","Keyboard","timeOut","keyList","_keyList","_timeOut","_SYNONYM_MAP","responses","synonyms","defaults","_synonyms","button","RESPONSE_KEYBOARD","moderators","keyDownEvent","event","shiftKey","ctrlKey","altKey","visible","_renderer","view","focus","tmp","document","createElement","appendChild","removeChild","Sequence","flush_keyboard","cond","_itemStack","tokens","strip_slashes","flush","currentItem","self","Coroutines","tasks","schedule","arglist","kwdict","task","item_name","start_time","start","end_time","end","run_if","runif","taskParams","Task","sortBy","launch","active","dt","t0","running","_loop","started","_active","status","step","RUNNING","ABORTED","stopped","TIMER_BREAK","TIMER_EXIT","TIMER_ERROR","_state","setTimeout","kill","abort_on_end","state","UNINITIALISED","_coroutine","isFunction","coroutine","next","newState","done","FINISHED","Mouse","buttonList","_buttonList","_visible","synonym","show_cursor","RESPONSE_MOUSE","_mouseMoveEvent","rtTime","x","clientX","y","clientY","events","_mouse_press","buttons","_mouseDownEvent","pos","show","style","cursor","GenericResponse","_allowed_responses","_duration","_duration_func","_mouse","_responsetype","RESPONSE_NONE","_timeout","process_feedback","timeout","_timeStamp","process_response_timeout","process_response_keypress","process_response_mouseclick","allowed_responses","String","replace","filter","Boolean","duration","_get_default_from_synonym","prepare_duration_keypress","prepare_duration_mouseclick","RESPONSE_SOUND","RESPONSE_VIDEO","_final_duration","_set_config","sleep_for_duration","get_key","get_click","_sampler","wait","_video_player","rect","getBoundingClientRect","scale","min","right","left","width","bottom","top","height","center_x","center_y","cursor_x","cursor_y","retval","_start_response_interval","sri","_end_response_interval","sanitize","resp","response_bookkeeping","set_mouse_coordinates","correct","toString","total_correct","total_response_time","response_time","total_responses","accuracy","average_response_time","avg_rt","prepare_timeout","prepare_duration","prepare_allowed_responses","configure_response_objects","Sketchpad","canvas","Canvas","elements","a","b","z_index","_isClass","element","_newElementClass","_compare","backgroundColor","_styles","background_color","clear","is_shown","draw","_set_bg_color","set_sri","process_response","Feedback","reset_variables","reset_feedback","InlineScript","_prepare_run","_prepare_tree","_run_tree","_process_nodes","_parse","InlineJavaScript","workspace","_javascriptWorkspace","read_run_lines","read_prepare_lines","KeyboardResponse","_flush","correct_response","keyDownHandler","keypress","_processKeyboardEvent","addEventListener","proceed","removeEventListener","MouseResponse","resp_codes","mouseDownHandler","_processMouseEvent","touchHandler","changedTouches","Logger","logvars","auto_log","_log","write_vars","concat","audioCtx","AudioContext","webkitAudioContext","console","warn","SamplerBackend","volume","pitch","pan","fade","block","sample","cloneNode","error","onended","_audioEnded","createMediaElementSource","resume","connect","applyFilters","play","nodes","destination","gainNode","createGain","gain","setValueAtTime","currentTime","linearRampToValueAtTime","StereoPannerNode","Sampler","_sample","fade_in","stop_after","Synth","AdvancedDelay","mean","std","u","v","random","max","sqrt","log","cos","PI","jitter","jitter_mode","_random_uniform","_random_gauss","FormHTML","_widgets","_formContainer","display","_osweb","runner","_keyDownHandler","_keyUpHandler","setBackground","borderTop","borderLeft","borderRight","borderBottom","html","inherit","innerHTML","_paddedHeight","_paddedWidth","padding","margin","fontFamily","fontSize","fontWeight","textDecoration","color","boxType","label","box","labelElement","container","textAlign","append","_customForm","_fontFamily","fontStyle","_padding","join","formElements","formHTML","justifyContent","alignItems","getElementsByClassName","_cached_padding","_width","_height","FormConsent","alertify","_checkbox","checked","resumeOSWeb","onDecline","title","text","checkbox","checkboxContainer","buttonContainer","acceptButton","onclick","onAccept","declineButton","applyTheme","InlineHTML","getElementsByTagName","input","onsubmit","_submitForm","FormMultipleChoice","_boxes","form_var","_hasOkButton","options","option","elementHeight","question","_boxClicked","okButton","FormTextDisplay","FormTextInput","keyCode","_textArea","onkeypress","checkReturnPress","Video","audio","full_screen","_playing","_script","_video","_texture","Texture","from","_videoSprite","Sprite","pause","_videoEnded","onplay","_videoPlay","render","_event_handler_always","MediaPlayer","_script_executed","stop","_update","pool","event_handler","event_handler_trigger","Notepad","RepeatCycle","condition","ResetFeedback","TouchResponse","_ncol","_nrow","cell","BaseElement","sketchpad","show_if","fix_coordinates","uniform_coordinates","only_keywords","properties","_properties","xc","yc","prop","eval_properties","itemClasses","loop","sequence","feedback","inline_script","inline_javascript","inline_html","keyboard_response","mouse_response","logger","sampler","synth","coroutines","advanced_delay","form_consent","form_multiple_choice","form_text_display","form_text_input","media_player_mpy","notepad","touch_response","arrow","penwidth","x1","y1","x2","y2","styles","Styles","fill","arrow_body_width","arrow_body_length","arrow_head_width","circle","ellipse","w","h","fixdot","gabor","orient","freq","env","size","stdev","phase","color1","color2","bgmode","image","_file","file","center","noise","textline","font_family","font_size","font_bold","font_italic","font_underline","PRESSES_ONLY","RELEASES_ONLY","PRESSES_AND_RELEASES","RESPONSE_AUTOKEYBOARD","RESPONSE_AUTOMOUSE","STATUS_BUILD","STATUS_EXECUTE","TIMER_NONE","TIMER_WAIT","TIMER_PAUSE","TIMER_RESUME","TIMER_DONE","TIMER_FORM","Debugger","enabled","messageLog","errorText","context","isPlainObject","notify","_onError","url","messageText","Convertor","variabelName","substr","match","newItem","pair","parseValue","variableName","parseLine","Events","_keyDownEvent","_keyPressMode","_mouseDownHandler","_mouseMoveHandler","_mousePressMode","_mouseUpHandler","_responseGiven","_responseList","_responseType","_soundHasEnded","_statePrevious","_timeHandler","_videoHasEnded","_KEY_CODES","_KEY_SHIFTCODES","_keyDown","_keyUp","_mouseDown","_mouseMove","_mouseUp","_touchStartHandler","_touchStart","Ticker","add","_time","remove","location","_screen","_showPauseScreen","keyboardState","keyboardResponse","_convertKeyCode","indexOf","preventDefault","mouseState","mouseResponse","onEnded","_finalize","responseType","responseList","Parameters","_itemCounter","_parameters","_subject","set_subject","_setupClickScreen","_welcomeText","_updateIntroScreen","dataType","prompt","promptEnabled","_processParameters","_processParameter","_transferParameters","parameter","_exit","_prompt","_onParamConfirm","_onParamCancel","Screen","_click","_container","_fullScreen","requestFullscreen","_fullScreenChanged","_fullScreenError","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","_scaleMode","position","_currentCanvas","clientWidth","clientHeight","ar","resize","_scale_x","_scale_y","_confirm","_onFullScreenConfirm","_onFullScreenCancel","debugger","logoSrc","_introScreen","Container","screenCenter","logoPath","oswebLogo","oswebTitle","Text","versionInfo","VERSION_NUMBER","copyrightText","getFullYear","_statusText","addChild","clickHandler","_clearIntroScreen","_initialize","children","percentage","yOuter","_progressBarOuter","Graphics","lineStyle","drawRect","_progressBarInner","xOuter","hOuter","beginFill","endFill","_onPauseScreenConfirm","_onPauseScreenCancel","Session","_date","_session","_getSessionInformation","browser","codename","navigator","appCodeName","appName","version","appVersion","date","startdate","getDate","getMonth","starttime","getHours","getMinutes","getSeconds","startdateUTC","getUTCDate","getUTCMonth","getUTCFullYear","debug","parameters","pilot","taskname","taskversion","screen","availableHeight","availHeight","availableWidth","availWidth","colorDepth","outerheight","outerwidth","pixelDepth","screenX","screenY","system","os","platform","FileStreamer","chunkSize","rewind","getFileSize","fileReader","FileReader","blob","Promise","resolve","reject","onloadend","target","byteLength","progress","readAsArrayBuffer","decompress","zipfile","onProgress","fs","inflator","pako","Inflate","isEndOfFile","readBlock","err","untar","buffer","readFileAsText","inputFile","temporaryFileReader","onerror","abort","DOMException","onload","readAsText","parseUrl","str","host","getHost","origin","URL","Transfer","isString","isObject","File","_readOsexpFromFile","osScript","uri","fetch","href","remoteFile","_processScript","_readWebFonts","osexp","Blob","osexpFile","_readExpFile","message","_updateProgressBar","files","expFileIndex","findIndex","expFile","poolFiles","_processOsexpPoolItems","axios","onDownloadProgress","lengthComputable","loaded","total","test","userAgent","contents","asyncIterator","currentIndex","currentFile","folder","whole","group1","fromCharCode","ext","lastIndexOf","img","Image","getBlobUrl","ado","Audio","then","WebFont","load","google","families","urls","inactive","resultData","FormData","xhr","XMLHttpRequest","open","subject_nr","send","ItemStack","stackItem","ItemStore","className","string","form","_newItemClass","exit","itemType","suggestion","uniqueName","FilePoolStore","new_name","old_path","new_path","Syntax","isNumber","cnd","bytecode","expression","substring","ast","_run_statement","content","isNaN","in_entity","escapeBrackets","reNormal","search","unescapeBrackets","rePython","nr","add_slashes","dedented","pattern","exec","count_quotes","kwargs","parsed","startsWith","convert_if_numeric","safe_wrap","strict","allowVars","NBrackets","chartype","i1","i2","nBrackets","PythonMath","E","pi","filbert","pythonRuntime","imports","math","ceil","copysign","fabs","factorial","fmod","frexp","fsum","acos","asin","atan","atan2","hypot","sin","tan","iterable","PythonOpenSesame","_objects","close","write","var","functions","set_subject_nr","copy_sketchpad","keyboard","mouse","sometimes","xy_circle","xy_distance","xy_from_polar","xy_grid","xy_random","xy_to_polar","auto_prepare","style_args","resp_args","playback_args","osc","attack","decay","rho","phi0","pole","phi","spacing","min_dist","PythonRandom","shuffle","temporaryValue","randomIndex","PythonString","fillchar","PythonParser","python_math","python_opensesame","python_random","python_string","_classes","_function_stack","_global_return_value","_inline_script","_node","_onConsole","_stack","_statement","_variables","exp","parseFn","locations","ranges","identifier","toNumber","node","return_values","index","_set_node","_get_element_value","return_value","_set_return_value","tmp_value","operator","_set_element_value","break","arguments","callee","tmp_arguments","caller","_get_element","_get_context","global_return_value","init","update","tmp_range","consequent","alternate","returnValue","argument","declarations","id","_process_nodes_jump","_process_nodes_timeout","_array_expression","_assignment_expression","_binary_expression","_block_statement","_break_statement","_call_expression","_empty_statement","_expression_statement","_for_statement","_for_in_statement","_function_expression","_identifier","_if_statement","_literal","_logical_expression","_member_expression","_new_expression","_program","_return_statement","_unary_expression","_update_expression","_variable_declaration","_variable_declarator","_while_statement","ast_tree","Log","varList","entry","varName","onLog","_data","Experiment","_canvas","JavaScriptWorkspace","bidi","round_decimals","form_clicks","sessionid","valueOf","sound_freq","sound_sample_size","sound_channels","sound_buf_size","canvas_backend","background","foreground","pNr","subject_parity","def_str","_source","item_type","read_definition","init_display","datetime","opensesame_version","opensesame_codename","VERSION_NAME","init_clock","toUTCString","Runner","_mimetype","_name","_onFinished","_onLog","_target","_convertor","PythonWorkspace","_transfer","_setupContent","getElementById","autoDetectRenderer","antialias","transparent","resolution","confirm","fullScreen","introClick","introScreen","mimetype","onConsole","onFinished","onError","scaleMode","subject","welcomeText","_setupIntroScreen","_readSource","_build","parseScript","_clean_up","_fullScreenExit","_exitDisplay","_setupContext","OSWEB_VERSION_NAME","OSWEB_VERSION_NO","replaceAll","str1","str2","ignore","RegExp","_pySlice","osweb","printVersionInfo","getRunner","require","_font_string","_textures","sx","sy","ex","ey","bodyWidth","bodyLength","headWidth","pow","angle","_headWidth","p4","p1","p2","p3","p7","p6","doc","DOMParser","parseFromString","childNodes","some","nodeType","styleArgs","assign","textLine","fontBold","lineHeight","div","top1","top2","verticalAlign","scrollTop","ascent","descent","htmlNode","textBlock","currentStyle","elementStyle","_getStyle","nodeName","prev_height","x_pos","y_pos","rows","text_elements","text_dimensions","text_underline","attributes","textStyle","bounds","textElement","textContent","getBounds","dimension","_getTextBaseline","_parseHtmlNode","points","_arrow_shape","polygon","drawCircle","destroy","shape","clone","drawEllipse","_fill","_background_color","_color","_penwidth","_match_env","ctx","getContext","px","getImageData","_convertColorValueToRGB","rx","ry","dx","dy","ux","uy","f","amp","g","putImageData","texture","sprite","fname","rotation","path","drawImage","anchor","_convertColorValue","_fullScreenInit","moveTo","lineTo","verticles","drawPolygon","rectangle","rgb","txt","_containsHTML","element_style","visibility","adjust","_initConstants","_bidi","_font_bold","_font_family","_font_italic","_font_size","_font_underline","_html","convertedColor","_DEFAULT_COLOURS","_isInt","isInteger","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_DEFAULT_FONTS","sans","serif","mono","arabic","hebrew","hindi","_checkVal","CanvasHandler","_style","_xc","_yc","body_length","body_width","head_width","_element_style","col1","col2","vertices","VarStoreHandler","vars_proxy","Proxy","api","JavaScriptWorkspaceAPI","js","randomExt","range","pyRange","zip","pyZip","zipLongest","pyZipLongest","enumerate","pyEnumerate","pyItems","eval","_radians","_parse_pole","ox","oy","_degrees","n_col","n_row","n_err_msg","s_col","s_row","spacing_err_msg","too_close","max_try","evalString"],"mappings":"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","file":"js/osweb.1.4.0.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,3]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/** Class representing a variable store. */\r\nexport default class VarStore {\r\n  /**\r\n   * Create a variable store object for all variables.\r\n   * @param {Object} item - The item to which the var_store belongs.\r\n   * @param {Object} parent - The parent global var_store.\r\n   */\r\n  constructor (item, parent) {\r\n    // Create and set private properties.\r\n    this._item = item\r\n    this._parent = parent\r\n    this._ignored_properties = [\r\n      '_item', '_parent', '_bypass_proxy', '_ignored_properties'\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Get the value of a variable from the store (or thje parent store).\r\n   * @param {String} variable - The name of the variable.\r\n   * @param {Boolean|Number|String} defaultValue - The default value for the variable.\r\n   * @param {Object} evaluate - The parent global var_store.\r\n   * @param {Object} valid - The parent global var_store.\r\n   * @param {Boolean} addQuotes - The add quotes toggle.\r\n   * @return {Boolean|Number|String} - The value of the given variable.\r\n   */\r\n  get (variable, defaultValue, evaluate, valid, addQuotes) {\r\n    // Set the optional arguments\r\n    defaultValue = (typeof defaultValue === 'undefined') ? null : defaultValue\r\n    evaluate = (typeof evaluate === 'undefined') ? true : evaluate\r\n    valid = (typeof valid === 'undefined') ? null : valid\r\n    var value = null\r\n    // Gets an experimental variable.\r\n    if (variable in this) {\r\n      this._bypass_proxy = true // Avoid Proxy feedback loop\r\n      if (typeof this[variable] === 'string' && evaluate === true) {\r\n        value = this._item.syntax.eval_text(this[variable], null, addQuotes)\r\n      } else {\r\n        value = this[variable]\r\n      }\r\n      this._bypass_proxy = false\r\n    }\r\n    // If value is not found locally, look in experiment object.\r\n    if (value == null && this._parent && variable in this._parent) {\r\n      this._parent._bypass_proxy = true // Avoid Proxy feedback loop\r\n      if (typeof this._parent[variable] === 'string' && evaluate === true) {\r\n        value = this._item.syntax.eval_text(this._parent[variable], null, addQuotes)\r\n      } else {\r\n        value = this._parent[variable]\r\n      }\r\n      this._parent._bypass_proxy = false\r\n    }\r\n    // Return function result.\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Check if the variable is part of the variable store.\r\n   * @param {String} variable - The name of the variable.\r\n   * @return {Boolean} - True if the variable is part of the store.\r\n   */\r\n  has (variable) {\r\n    return this.inspect().includes(variable)\r\n  }\r\n\r\n  /** Create a list of all avariables available.\r\n   * @return {Array} - Array containing names of all variables.\r\n   */\r\n  inspect () {\r\n    const variables = []\r\n    for (const variable in this) {\r\n      if (this._ignored_properties.includes(variable)) continue\r\n      variables.push(variable)\r\n    }\r\n    return variables\r\n  }\r\n\r\n  /** Create a list of value/name pairs.\r\n   * @return {Array} - Array containing name and values of all variables.\r\n   */\r\n  items () {\r\n    const pairs = {}\r\n    for (const variable of this.inspect()) {\r\n      pairs[variable] = this[variable]\r\n    }\r\n    return pairs\r\n  }\r\n\r\n  /**\r\n   * Set the value of a variable in the store.\r\n   * @param {String} variable - The name of the variable.\r\n   * @value {Boolean|Number|String} - Value of the variable to set.\r\n   */\r\n  set (variable, value) {\r\n    this[variable] = value\r\n  }\r\n\r\n  /**\r\n   * Unset (remove) a variable from the store.\r\n   * @param {String} variable - The name of the variable.\r\n   */\r\n  unset (variable) {\r\n    if (this.has(variable) === true) {\r\n      delete this[variable]\r\n    }\r\n  }\r\n\r\n  /** Create a list of variable names.\r\n   * @return {Array} - Array containing namesof all variables.\r\n   */\r\n  vars () {\r\n    return this.inspect()\r\n  }\r\n\r\n  /**\r\n   * Clears all experimental variables, except those that are explicitly\r\n   * preserved.\r\n   * @param {Array} preserve - An array of variable names to preserve.\r\n   */\r\n  clear (preserve) {\r\n    preserve = (typeof preserve === 'undefined') ? [] : preserve\r\n    for (const variable of this.inspect()) {\r\n      if (preserve.includes(variable)) continue\r\n      this.unset(variable)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/** Class representing the clock system. */\r\nexport default class Clock {\r\n  /**\r\n   * Create a clock object which controls a pseudo real-time clock.\r\n   * @param {Object} experiment - The experiment  to which the clock belongs.\r\n   */\r\n  constructor (experiment) {\r\n    // Create and set private properties.\r\n    this._experiment = experiment // Parent experiment item.\r\n    this._startTime = -1 // Start time anchor of the experiment.\r\n  }\r\n\r\n  /** Initialize the clock. */\r\n  _initialize () {\r\n    // Set the absolute start time of the expeirment.\r\n    this._startTime = this._now()\r\n  }\r\n\r\n  /** Get an absolute time stamp from the system in ms.\r\n   * @return {Number} - The current absolute time in ms.\r\n   */\r\n  _now () {\r\n    // Get the current time stamp using the best available timing method.\r\n    if (window.performance.now) {\r\n      return Math.round(window.performance.now())\r\n    } else if (window.performance.webkitNow) {\r\n      return Math.round(window.performance.webkitNow())\r\n    } else {\r\n      return new Date().getTime()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sleeps (pauses) for a duration (in milliseconds).\r\n   * @param {Number} ms - The duration to wait in ms.\r\n   */\r\n  sleep (ms) {\r\n    // Sleeps (pauses) for a duration (in milliseconds).\r\n    if (this._experiment !== null) {\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(ms, constants.RESPONSE_DURATION, null)\r\n    }\r\n  }\r\n\r\n  /** Get the relative time from the start of an experiment.\r\n   * @return {Number} - The current relative time in ms.\r\n   */\r\n  time () {\r\n    // Gives the current timestamp in milliseconds.\r\n    if (this._startTime !== -1) {\r\n      return (this._now() - this._startTime)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n}\r\n","import { constants } from '../system/constants.js'\r\nimport VarStore from '../classes/var_store.js'\r\nimport Clock from '../backends/clock.js'\r\n\r\n/** Class representing an OpenSesame item. */\r\nexport default class Item {\r\n  constructor (experiment, name, script) {\r\n    // Create and set private properties.\r\n    this._parent = null\r\n    this._runner = (experiment.constructor.name === 'Runner') ? experiment : experiment._runner\r\n    this._status = constants.STATUS_NONE\r\n\r\n    // Create and set public properties.\r\n    this.clock = (experiment.constructor.name === 'Runner') ? new Clock(this) : experiment.clock\r\n    this.count = 0\r\n    this.experiment = (experiment.constructor.name === 'Runner') ? this : experiment\r\n    this.name = name\r\n    this.python_workspace = this._runner._pythonWorkspace\r\n    this.response_store = this._runner._responseStore\r\n    this.syntax = this._runner._syntax\r\n    this.vars = new VarStore(this, (experiment.constructor.name === 'Runner') ? null : this.experiment.vars)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Adjust the status of the item.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Implements the complete phase of the item.\r\n    if (this._parent !== null && this._runner._events._currentItem) {\r\n      // Return the process control to the parent of the element.\r\n      this._runner._events._currentItem = this._parent\r\n      this._runner._events._currentItem.run()\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare complete phase of an item. */\r\n  _prepare_complete () {\r\n  }\r\n\r\n  /** Implements the update phase of an item. */\r\n  _update (response) {\r\n  }\r\n\r\n  /**\r\n     * Pauses the object execution. !WARNING This function can not be implemented due the script blocking of javascript.\r\n     * @param {Number} pMs - The sleep time in milliseconds.\r\n     */\r\n  sleep (pMs) {\r\n    this.clock.sleep(pMs)\r\n  }\r\n\r\n  /**\r\n     * Returns the current time.\r\n     * @returns {Number} - The current time in ms from the start of the experiment.\r\n     */\r\n  time () {\r\n    // Returns the current time.\r\n    return this.clock.time()\r\n  }\r\n\r\n  /**\r\n     * Parses comments from a single definition line, indicated by # // or '.\r\n.    * @param {String} line - The definition line to be parsed.\r\n     * @returns {Boolean} - Return true if the commennt is succesfully parsed.\r\n     */\r\n  parse_comment (line) {\r\n    // Parses comments from a single definition line, indicated by # // or '.\r\n    line = line.trim()\r\n    if ((line.length > 0) && (line.charAt(0) === '#')) {\r\n      // Add comments to the array removing the first character.\r\n      this.comments.push(line.slice(1))\r\n      return true\r\n    } else if ((line.length > 1) && (line.charAt(0) === '/')) {\r\n      // Add comments to the array removing the first two characters.\r\n      this.comments.push(line.slice(2))\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Parses keywords  from a single definition line.\r\n     * @param {String} line - The definition line to be parsed.\r\n     * @param {Boolean} fromAscii - If true the source is ascii.\r\n     * @param {Boolean} evaluate - If true the keyword is evaluated.\r\n     * @returns {Object} - Returns the keywords found in the line.\r\n     */\r\n  parse_keyword (line, fromAscii, evaluate) {\r\n  }\r\n\r\n  /**\r\n     * Implements arbitrary line parsing, for item-specific requirements.\r\n     * @param {String} line - The definition line to be parsed.\r\n     */\r\n  parse_line (line) {\r\n  }\r\n\r\n  /**\r\n    * Reads a single variable from a single definition line.\r\n    * @param {String} line - The definition line to be parsed.\r\n    * @return {Boolean} - Return true if the variabel is succesfully parsed.\r\n    */\r\n  parse_variable (line) {\r\n    // Reads a single variable from a single definition line.\r\n    if (this.parse_comment(line)) {\r\n      return true\r\n    } else {\r\n      // Split the single line into a set of tokens.\r\n      const [cmd, args, _kwargs] = this._runner._syntax.parse_cmd(line)\r\n      if (cmd === 'set') {\r\n        if (args.length !== 2) {\r\n          this._runner._debugger.addError('Failed to parse definition: ' + line)\r\n        } else {\r\n          this.vars.set(args[0], args[1])\r\n          return true\r\n        }\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Parses multiline variables from a script\r\n   * @param {String} script - The definition script line to be parsed.\r\n   */\r\n  parse_multiline_vars (script) {\r\n    const vars = this.syntax.parse_multiline_vars(script)\r\n    for (const key in vars) {\r\n      this.vars.set(key, vars[key])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses the item from a definition string.\r\n   * @param {String} script - The definition script line to be parsed.\r\n   */\r\n  from_string (script) {\r\n    // Parses the item from a definition string.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      this.parse_multiline_vars(script)\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          this.parse_line(lines[i])\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the reset item variables method. */\r\n  reset () {\r\n  }\r\n\r\n  /** Implements the prepeare phase of an item. */\r\n  prepare () {\r\n    // Set the internal counter.\r\n    this.experiment.vars.set('count_' + this.name, this.count)\r\n    this.count++\r\n\r\n    // Set the status to initialize.\r\n    this._status = constants.STATUS_INITIALIZE\r\n\r\n    // For debugging.\r\n    this._runner._debugger.addMessage('prepare ' + this.name)\r\n\r\n    // Implements the complete phase of the item (to support blocking script in the prepare phase).\r\n    if (!(this.type === 'sequence' && this._parent.type === 'sequence')) {\r\n      if ((this._parent !== null) && (this.type !== 'feedback')) {\r\n        // Prepare cycle of parent.\r\n        this._parent._prepare_complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set a onset time stamp before running an item.\r\n     * @param {Number} time - The time to store as onset time.\r\n     */\r\n  set_item_onset (time) {\r\n    // Set a timestamp for the item's executions\r\n    time = (typeof time === 'undefined') ? this.clock.time() : time\r\n\r\n    // Add the time stamp to the variable list.\r\n    this.experiment.vars.set('time_' + this.name, time)\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    this._runner._debugger.addMessage('run ' + this.name)\r\n  }\r\n}\r\n","/**\n * Loop utility functions\n */\nimport combos from 'combos'\nimport {\n  isInteger,\n  isArray,\n  isPlainObject,\n  isString,\n  isEmpty,\n  shuffle,\n  zip,\n  zipObject,\n  fromPairs,\n  pick,\n  reverse\n} from 'lodash'\n\n/**\n * Group matrix values by their variables names\n *\n * @param {Object} srcMatrix The source matrix to transform\n * @returns {Object}\n */\nexport function unstack (srcMatrix) {\n  if (!isArray(srcMatrix)) {\n    throw new TypeError('srcMatrix should be an array')\n  }\n  return Object.values(srcMatrix).reduce((acc, cycle) => {\n    for (const [key, val] of Object.entries(cycle)) {\n      if (key in acc) {\n        acc[key].push(val)\n      } else {\n        acc[key] = [val]\n      }\n    }\n    return acc\n  }, {})\n}\n\n/**\n * Convert grouped by variable matrix back to a normal matrix\n * @param {array} srcMatrix\n * @returns {array}\n */\nexport function stack (srcMatrix) {\n  if (!isPlainObject(srcMatrix)) {\n    throw new TypeError('srcMatrix should be an object')\n  }\n  const columns = Object.keys(srcMatrix)\n  const rows = zip(...Object.values(srcMatrix))\n  return rows.map(row => zipObject(columns, row))\n}\n\n/**\n * Creates a full factorial design of all the variable values in the matrix\n * @param {array} matrix The array of cycles to fully cross\n * @returns {array}\n */\nexport function fullfactorial (matrix) {\n  const result = combos(unstack(matrix))\n  return result\n}\n\n/**\n * Shuffles the order of the rows in the matrix. If a column/variable name\n * is specified, only the rows in this column are shuffled.\n *\n * @export\n * @param {array} matrix The matrix to be shuffled\n * @param {array} columns  Array containing the variable/column to be shuffled\n * @returns {array}\n */\nexport function shuffleVert (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof (columns) === 'undefined' || (isArray(columns) && columns.length === 0)) {\n    return shuffle(matrix)\n  } else if (!isArray(columns)) {\n    throw new TypeError('Invalid argument for columns passed to shuffleVert. Expects an array containing column names')\n  } else {\n    const grouped = unstack(matrix)\n    let cols = pick(grouped, columns)\n    cols = Object.entries(cols).reduce((prev, [key, values]) => {\n      prev[key] = shuffle(values)\n      return prev\n    }, {})\n    return stack({ ...grouped, ...cols })\n  }\n}\n\n/**\n * Shuffles the matrix horizontally; shuffle the values of the columns\n * If column names are specified, only these will be shuffled\n *\n * @export\n * @param {array} matrix\n * @param {array} columns\n * @returns {array}\n */\nexport function shuffleHoriz (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof columns === 'undefined') columns = []\n  if (!isArray(columns)) {\n    throw new TypeError('Invalid argument specified to shuffleHoriz. Expects an array that optionally contains column names to shuffle')\n  }\n  return Object.values(matrix).map(row => {\n    const vars = columns.length === 0\n      ? row\n      : pick(row, columns)\n    const keys = Object.keys(vars)\n    let vals = Object.values(vars)\n    vals = shuffle(vals)\n    const res = fromPairs(zip(keys, vals))\n    return { ...row, ...res }\n  })\n}\n\n/**\n * Sorts only the specified columns of the matrix\n *\n * @export\n * @param {array} matrix\n * @param {string} col\n * @returns array\n */\nexport function sortCol (matrix, col) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (!isString(col) || col === '') {\n    throw new Error('Invalid argument specified to sortCol. Expects a column name')\n  }\n  const grouped = unstack(matrix)\n  grouped[col].sort()\n  return stack(grouped)\n}\n\n/**\n * Reverses the matrix order\n * If column names are specified, only their orders are reversed\n * @export\n * @param {array} matrix\n * @param {array} columns\n * @returns {array}\n */\nexport function reverseRows (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof columns === 'undefined') columns = []\n  if (!isArray(columns)) {\n    throw new TypeError('Invalid argument specified to reverseRows. Expects an array containing a column name')\n  }\n  if (columns.length === 0) {\n    return reverse(matrix)\n  } else {\n    const grouped = unstack(matrix)\n    let cols = pick(grouped, columns)\n    if (isEmpty(cols)) {\n      throw new ReferenceError(`one or more of ${columns} were not found in the matrix`)\n    }\n    cols = Object.entries(cols).reduce((prev, [key, values]) => {\n      prev[key] = reverse(values)\n      return prev\n    }, {})\n    return stack({ ...grouped, ...cols })\n  }\n}\n\n/**\n * Rolls the matrix with the specified distance\n *\n * @export\n * @param {array} matrix\n * @param {number} amount\n * @param {string} column\n * @returns array\n */\nexport function roll (matrix, amount, column) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  // operate on a copy of the array to preserve the original\n  matrix = [...matrix]\n\n  amount = parseInt(amount)\n  if (!isInteger(amount)) {\n    throw new TypeError(`amount needs to be an integer, was ${amount}`)\n  }\n\n  if (!column) {\n    return rollN(matrix, amount)\n  }\n\n  if (!isString(column)) {\n    throw new TypeError(`column expects a string, was ${column}`)\n  } else {\n    const grouped = unstack(matrix)\n    if (!Object.prototype.hasOwnProperty.call(grouped, column)) {\n      throw new ReferenceError(`Could not find column ${column} in matrix`)\n    }\n    grouped[column] = rollN(grouped[column], amount)\n    return stack(grouped)\n  }\n}\n\n/**\n * Roll array contents forward or backward by the specified amount\n *\n * @param {array} list\n * @param {number} amount\n * @returns {array}\n */\nfunction rollN (list, amount) {\n  if (amount > 0) {\n    for (let i = 0; i < amount; i++) {\n      list.unshift(list.pop())\n    }\n  } else {\n    for (let i = 0; i > amount; i--) {\n      list.push(list.shift())\n    }\n  }\n  return list\n}\n\n/**\n * Duplicate (or remove) rows depending on the specified weight parameter\n *\n * @param {array} matrix The matrix containing the data\n * @param {string} weightCol The colom to use for weight values\n */\nexport function weight (matrix, weightCol) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (!isString(weightCol)) {\n    throw new TypeError('Invalid argument passed to weight. Expects a column name')\n  }\n  if (!Object.prototype.hasOwnProperty.call(matrix[0], weightCol)) {\n    throw new ReferenceError(`Column '${weightCol}' not found in matrix`)\n  }\n  return matrix.reduce((result, item) => {\n    const weight = parseInt(item[weightCol])\n    if (!isInteger(weight)) {\n      throw new TypeError('Specified weight value is not an integer')\n    }\n    for (let i = 0; i < weight; i++) {\n      result.push(item)\n    }\n    return result\n  }, [])\n}\n","import {\r\n  isNumber,\r\n  isArray,\r\n  shuffle,\r\n  sortBy\r\n} from 'lodash'\r\n\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\nimport Item from './item.js'\r\n\r\nimport {\r\n  fullfactorial,\r\n  shuffleVert,\r\n  shuffleHoriz,\r\n  sortCol,\r\n  reverseRows,\r\n  roll,\r\n  weight\r\n} from '../util/matrix'\r\n\r\nimport parse from \"csv-parse/lib/sync\"\r\n\r\n\r\n/**\r\n * Class representing a sequence item.\r\n * @extends Item\r\n */\r\nexport default class Loop extends Item {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Repeatedly runs another item'\r\n    this.matrix = null\r\n\r\n    // Definition of private properties.\r\n    this._break_if = ''\r\n    this._cycles = []\r\n    this._index = 0\r\n    this._keyboard = null\r\n    this._operations = []\r\n    this._initialized = false\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    this._status = constants.STATUS_FINALIZE\r\n    super._complete()\r\n  }\r\n\r\n  /**\r\n   * Scans the provided list of argument for variables and retrieves them if found.\r\n   * The function works recursively and thus also parses elements inside arrays that are part of\r\n   * args.\r\n   *\r\n   * @param {array} args The list of arguments to parse.\r\n   * @returns {array} The parsed arguments list\r\n   */\r\n  _eval_args (args) {\r\n    if (!isArray(args)) return args\r\n    return args.map( el => {\r\n      if (isArray(el)) {\r\n        return this._eval_args(el)\r\n      } else {\r\n        return this._runner._syntax.remove_quotes(this._runner._syntax.eval_text(el))\r\n      }\r\n    })\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.orig_matrix = []\r\n    this.vars.cycles = 1\r\n    this.vars.repeat = 1\r\n    this.vars.skip = 0\r\n    this.vars.offset = 'no'\r\n    this.vars.order = 'random'\r\n    this.vars.item = ''\r\n    this.vars.break_if = 'never'\r\n    this.vars.source = 'table'\r\n    this.vars.source_file = ''\r\n    this._index = 0\r\n    this._operations = []\r\n    this._initialized = false\r\n  }\r\n\r\n  /**\r\n   * Parse a definition string and retrieve all properties of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  from_string (script) {\r\n    // Creates a loop from a definition in a string.\r\n    this.comments = []\r\n    this.variables = {}\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script != null) {\r\n      const lines = script.split('\\n')\r\n      for (let i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          const [instruction, ...params] = this.syntax.split(lines[i])\r\n\r\n          let cycle, name, value\r\n\r\n          switch (instruction) {\r\n          case 'run':\r\n            if (params.length > 0) this.vars.item = params[0]\r\n            break\r\n          case 'setcycle':\r\n            if (params.length <= 2) {\r\n              this._runner._debugger.addError(`Incorrect setcycle command in item ${this.name}`)\r\n              break\r\n            }\r\n            cycle = params[0]\r\n            name = params[1]\r\n            value = this.syntax.remove_quotes(params[2])\r\n            // Check if the value is numeric\r\n            value = isNumber(value) ? Number(value) : value\r\n            // If a python expression, convert to javascript.\r\n            if (value[0] === '=') {\r\n              // Parse the python statement.\r\n              value = this._runner._pythonParser._prepare(value.slice(1))\r\n              if (value !== null) {\r\n                value = value.body[0]\r\n              }\r\n            }\r\n            if (this.orig_matrix[cycle] === undefined) {\r\n              this.orig_matrix[cycle] = {}\r\n            }\r\n            this.orig_matrix[cycle][name] = value\r\n            break\r\n          case 'fullfactorial':\r\n            this._operations.push([fullfactorial, []])\r\n            break\r\n          case 'shuffle':\r\n            this._operations.push([shuffleVert, [params]])\r\n            break\r\n          case 'shuffle_horiz':\r\n            this._operations.push([shuffleHoriz, [params]])\r\n            break\r\n          case 'slice':\r\n            this._operations.push([(matrix, args) => matrix.slice(...args), [params]])\r\n            break\r\n          case 'sort':\r\n            this._operations.push([sortCol, [...params]])\r\n            break\r\n          case 'sortby':\r\n            this._operations.push([sortBy, [params]])\r\n            break\r\n          case 'reverse':\r\n            this._operations.push([reverseRows, [params]])\r\n            break\r\n          case 'roll':\r\n            this._operations.push([roll, [...params]])\r\n            break\r\n          case 'weight':\r\n            this._operations.push([weight, [...params]])\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prepares the variables for one single cycle within the loop.\r\n   * @param {Number} cycle -The cycle to apply.\r\n   */\r\n  apply_cycle (cycle) {\r\n    // Sets all the loop variables according to the cycle.\r\n    if (cycle in this.matrix) {\r\n      for (const variable in this.matrix[cycle]) {\r\n        // Get the value of the variable.\r\n        let value = this.matrix[cycle][variable]\r\n\r\n        // Check for python expression.\r\n        if (typeof value === 'object') {\r\n          // value contains ast tree, run the parser.\r\n          try {\r\n            // Evaluate the expression\r\n            value = this._runner._pythonParser._runstatement(value)\r\n          } catch (e) {\r\n            // Error during evaluation.\r\n            this._runner._debugger.addError(\r\n              'Failed to evaluate expression in in loop item: ' + this.name + ' (' + value + ')')\r\n          }\r\n        } else {\r\n          // Evaluate variabels potentially available in value.\r\n          value = this._runner._syntax.eval_text(value)\r\n        }\r\n        // Set the variable.\r\n        this.experiment.vars.set(variable, value)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Make sure the item to run exists.\r\n    if (this.experiment.items._items[this.vars.item] === 'undefined') {\r\n      this._runner._debugger.addError('Could not find an item which is called by loop item: ' +\r\n      this.name + ' (' + this.vars.item + ')')\r\n    }\r\n    if (this.vars.get('source') === 'file') this.parseFileSource()\r\n    this._initialized = false\r\n    super.prepare()\r\n    this.set_item_onset()\r\n  }\r\n  \r\n  /** Reads the loop table from a csv file in the file pool **/\r\n  parseFileSource () {\r\n    let src = this.vars.get('source_file')\r\n    if (!src.toLowerCase().endsWith('.csv')) {\r\n      throw 'Only csv files are supported as source files by loop items'\r\n    }\r\n    if (typeof this._runner._pool[src] === 'undefined') {\r\n      throw 'Loop item refers to non-existing source file: ' + src\r\n    }\r\n    this.orig_matrix = parse(\r\n      this._runner._pool[src].data,\r\n      {columns: true, skip_empty_lines: true}\r\n    )\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    if (!this._initialized) {\r\n      // The first step is to create an array of cycle indices (`cycles`). We\r\n      // first add the integer part of the repeats to this array, which results\r\n      // in a `cycles` array with a length that is a multiple of the original\r\n      // matrix length.\r\n      let cycles = []\r\n      const wholeRepeats = Math.floor(this.vars.get('repeat'))\r\n      for (let j = 0; j < wholeRepeats; j++) {\r\n        for (let i in this.orig_matrix) {\r\n          cycles.push(i)\r\n        }\r\n      }\r\n      // Next, we add the non-integer part of the repeats to the cycles array.\r\n      const partialRepeats = this.vars.get('repeat') - wholeRepeats\r\n      if (partialRepeats > 0) {\r\n        // Get an array of all cycles indices. (This syntax is like a range().)\r\n        // For randomly ordered loops, shuffle the order of the indices.\r\n        // This makes sure that the next step of determining the repeatcycles\r\n        // is a 'random selection without replacement'\r\n        let allCycles = [...Array(this.orig_matrix.length).keys()]\r\n        if (this.vars.order === 'random') {\r\n          allCycles = shuffle(allCycles)\r\n        }\r\n        // Add the remaining cycles to the cycles array\r\n        const remainder = Math.floor(this.orig_matrix.length * partialRepeats)\r\n        cycles = [...cycles, ...allCycles.splice(0, remainder)]\r\n      }\r\n      if (this.vars.order === 'random') {\r\n        cycles = shuffle(cycles)\r\n      }\r\n      // Create a live matrix that takes into account the repeats and the\r\n      // shuffles.\r\n      this.matrix = []\r\n      for (let k in cycles) {\r\n        this.matrix.push(this.orig_matrix[cycles[k]])\r\n      }\r\n      // Perform the operations. This may change the number of cycles, which\r\n      // is why this._cycles is only determined afterwards.\r\n      this.matrix = this._operations.reduce((mtrx, [func, args]) =>\r\n        func(mtrx, ...this._eval_args(args)), this.matrix)      \r\n      this._cycles = [... this.matrix.keys()]\r\n      this._initialized = true\r\n      this._index = null\r\n    } // end init\r\n    // Check if if the cycle must be repeated.\r\n    if (this.experiment.vars.repeat_cycle === 1 && this._index !== null) {\r\n      this._runner._debugger.msg('Repeating cycle: ' + this._index)\r\n      this._cycles.push(this._index)\r\n      if (this.vars.get('order') === 'random') {\r\n        this._cycles = shuffle(this._cycles)\r\n      }\r\n    }\r\n    // When the loop is finished\r\n    if (this._cycles.length == 0) {\r\n      this._complete()\r\n      return\r\n    }\r\n    // Prepare for the current cycle\r\n    this._index = this._cycles.shift()\r\n    this.apply_cycle(this._index)\r\n    this.experiment.vars.repeat_cycle = 0\r\n    // Process the break-if statement\r\n    const break_if_val = this.vars.get('break_if', undefined, false)\r\n    this._break_if = ['never', ''].includes(break_if_val)\r\n      ? null\r\n      : this.syntax.compile_cond(break_if_val)\r\n    if (this._break_if !== null) {\r\n      this.python_workspace['this'] = this\r\n      if (this.python_workspace._eval(this._break_if) === true) {\r\n        this._complete()\r\n        this._initialized = false\r\n        return\r\n      }\r\n    }\r\n    // Execute the item to run\r\n    if (this._runner._itemStore._items[this.vars.item].type === 'sequence') {\r\n      this._runner._itemStore.prepare(this.vars.item, this)\r\n    } else {\r\n      this._runner._itemStore.execute(this.vars.item, this)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/** Class representing a keyboard device. */\r\nexport default class Keyboard {\r\n  /**\r\n   * Create an object which represents a keyboard device.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  constructor (experiment, timeOut, keyList) {\r\n    // Create and set private properties.\r\n    this._experiment = experiment // Anchor to the experiment object.\r\n    this._keyList = (typeof keyList === 'undefined') ? [] : keyList // List of acceptable response keys.\r\n    this._timeOut = (typeof timeOut === 'undefined') ? null : timeOut // Duration in millisecond for time-out.\r\n\r\n    // Set constant properties.\r\n    this._SYNONYM_MAP = [\r\n      ['space', ' ', 'SPACE'],\r\n      ['\"', 'quotedbl', 'QUOTEDBL'],\r\n      ['!', 'exclaim', 'EXCLAIM'],\r\n      ['#', 'hash', 'HASH'],\r\n      ['$', 'dollar', 'DOLLAR'],\r\n      ['&', 'ampersand', 'AMPERSAND'],\r\n      [\"'\", 'quote', 'QUOTE'],\r\n      ['(', 'leftbracket', 'leftparen', 'LEFTBRACKET', 'LEFTPAREN'],\r\n      [')', 'rightbracket', 'rightparen', 'RIGHTBRACKET', 'RIGHTPAREN'],\r\n      ['*', 'asteriks', 'ASTERISK'],\r\n      ['+', 'plus', 'PLUS'],\r\n      [',', 'comma', 'COMMA'],\r\n      ['-', 'minus', 'MINUS'],\r\n      ['.', 'period', 'PERIOD'],\r\n      ['/', 'slash', 'SLASH'],\r\n      ['1'],\r\n      ['2'],\r\n      ['3'],\r\n      ['4'],\r\n      ['5'],\r\n      ['6'],\r\n      ['7'],\r\n      ['8'],\r\n      ['9'],\r\n      ['0'],\r\n      ['=', 'equals', 'EQUALS'],\r\n      [':', 'colon', 'COLON'],\r\n      [';', 'semicolon', 'SEMICOLON'],\r\n      ['<', 'less', 'LESS'],\r\n      ['>', 'greater', 'GREATER'],\r\n      ['?', 'question', 'QUESTION'],\r\n      ['@', 'at', 'AT'],\r\n      ['a', 'A'],\r\n      ['b', 'B'],\r\n      ['c', 'C'],\r\n      ['d', 'D'],\r\n      ['e', 'E'],\r\n      ['f', 'F'],\r\n      ['g', 'G'],\r\n      ['h', 'H'],\r\n      ['i', 'I'],\r\n      ['j', 'J'],\r\n      ['k', 'K'],\r\n      ['l', 'L'],\r\n      ['m', 'M'],\r\n      ['n', 'N'],\r\n      ['o', 'O'],\r\n      ['p', 'P'],\r\n      ['q', 'Q'],\r\n      ['r', 'R'],\r\n      ['s', 'S'],\r\n      ['t', 'T'],\r\n      ['u', 'U'],\r\n      ['v', 'V'],\r\n      ['w', 'W'],\r\n      ['x', 'X'],\r\n      ['y', 'Y'],\r\n      ['z', 'Z'],\r\n      ['kp0', 'KP0'],\r\n      ['kp1', 'KP1'],\r\n      ['kp2', 'KP2'],\r\n      ['kp3', 'KP3'],\r\n      ['kp4', 'KP4'],\r\n      ['kp5', 'KP5'],\r\n      ['kp6', 'KP6'],\r\n      ['kp7', 'KP7'],\r\n      ['kp8', 'KP8'],\r\n      ['kp9', 'KP9'],\r\n      ['kp_divide', 'KP_DIVIDE'],\r\n      ['kp_enter', 'KP_ENTER'],\r\n      ['kp_equals', 'KP_EQUALS'],\r\n      ['kp_minus', 'KP_MINUS'],\r\n      ['kp_multiply', 'KP_MULTIPLY'],\r\n      ['kp_period', 'KP_PERIOD'],\r\n      ['kp_plus', 'KP_PLUS'],\r\n      ['\\\\', 'backslash', 'BACKSLASH'],\r\n      ['^', 'power', 'caret', 'POWER', 'CARET'],\r\n      ['_', 'underscore', 'UNDERSCORE'],\r\n      ['`', 'backquote', 'BACKQUOTE'],\r\n      ['f1', 'F1', 'help', 'HELP'],\r\n      ['f2', 'F2'],\r\n      ['f3', 'F3'],\r\n      ['f4', 'F4'],\r\n      ['f5', 'F5'],\r\n      ['f6', 'F6'],\r\n      ['f7', 'F7'],\r\n      ['f8', 'F8'],\r\n      ['f9', 'F9'],\r\n      ['f10', 'F10'],\r\n      ['f11', 'F11'],\r\n      ['f12', 'F12'],\r\n      ['f13', 'F13'],\r\n      ['f14', 'F14'],\r\n      ['f15', 'F15'],\r\n      ['up', 'UP'],\r\n      ['down', 'DOWN'],\r\n      ['left', 'LEFT'],\r\n      ['right', 'RIGHT'],\r\n      ['menu', 'MENU'],\r\n      ['lshift', 'left shift', 'LSHIFT', 'LEFT SHIFT'],\r\n      ['lctrl', 'left ctrl', 'LCTRL', 'LEFT CTRL'],\r\n      ['lalt', 'left alt', 'LALT', 'LEFT ALT'],\r\n      ['rshift', 'right shift', 'RSHIFT', 'RIGHT SHIFT'],\r\n      ['rctrl', 'right ctrl', 'RCTRL', 'RIGHT CTRL'],\r\n      ['ralt', 'right alt', 'alt gr', 'RALT', 'RIGHT ALT', 'ALT GR'],\r\n      ['page up', 'pageup', 'PAGE UP', 'PAGEUP'],\r\n      ['page down', 'pagedown', 'PAGE DOWN', 'PAGEDOWN'],\r\n      ['pause', 'PAUSE'],\r\n      ['scroll lock', 'scrollock', 'SCROLL LOCK', 'SCROLLOCK'],\r\n      ['caps lock', 'capslock', 'CAPS LOCK', 'CAPSLOCK'],\r\n      ['nummlock', 'NUMMLOCK'],\r\n      ['clear', 'CLEAR'],\r\n      ['enter', 'ENTER', 'return', 'RETURN'],\r\n      ['tab', 'TAB'],\r\n      ['backspace', 'BACKSPACE'],\r\n      ['end', 'END'],\r\n      ['home', 'HOME'],\r\n      ['insert', 'INSERT'],\r\n      ['delete', 'DELETE'],\r\n      ['sysreq', 'sys req', 'SYSREQ', 'SYS REQ'],\r\n      ['break', 'BREAK'],\r\n      ['escape', 'ESCAPE'],\r\n      ['print', 'PRINT'],\r\n      ['print screen', 'PRINT SCREEN'],\r\n      ['lmeta', 'left meta', 'LMETA', 'LEFT META', 'lsuper', 'LSUPER', 'left super', 'LEFT SUPER'],\r\n      ['rmeta', 'right meta', 'RMETA', 'RIGHT META', 'rsuper', 'right super', 'RSUPER', 'RIGHT SUPER'],\r\n      // key defined below are not supported yet.\r\n      ['euro', 'EURO'],\r\n      ['first', 'FIRST'],\r\n      ['last', 'LAST'],\r\n      ['kp enter', 'KP ENTER'],\r\n      ['kp equals', 'KP EQUALS'],\r\n      ['mode', 'MODE'],\r\n      ['unknown', 'UNKNOWN'],\r\n      ['unknown key', 'UNKNOWN KEY']\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Convert all response values to their default values (remove synonyms).\r\n   * @param {Array} responses - A list of response values.\r\n   * @return {Array} - List of default values for the given responses.\r\n   */\r\n  _get_default_from_synonym (responses) {\r\n    const defaults = []\r\n    let synonyms\r\n    for (let i = 0; i < responses.length; i++) {\r\n      synonyms = this._synonyms(responses[i])\r\n      if (typeof synonyms === 'undefined') {\r\n        throw new ReferenceError(`Unknown key '${responses[i]}'`)\r\n      }\r\n      defaults.push(synonyms[0])\r\n    }\r\n    return defaults\r\n  }\r\n\r\n  /**\r\n   * Set the configuration for the keyboard backend.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  _set_config (timeOut, keyList) {\r\n    // Set the properties.\r\n    this._keyList = keyList\r\n    this._timeOut = timeOut\r\n  }\r\n\r\n  /**\r\n   * Convert a response value to its default value (remove synonym).\r\n   * @param {String} button - A response.\r\n   * @return {String|Null} - Default value of the response.\r\n   */\r\n  _synonyms (button) {\r\n    if (typeof button !== 'undefined') {\r\n      for (let i = 0; i < this._SYNONYM_MAP.length; i++) {\r\n        for (let j = 0; j < this._SYNONYM_MAP[i].length; j++) {\r\n          if (this._SYNONYM_MAP[i][j] === button) {\r\n            return this._SYNONYM_MAP[i]\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  /** Clear all pending keyboard input. */\r\n  flush () {\r\n    // Always returns false because flusihing is not possible.\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Collects a single key press.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  get_key (timeOut, keyList) {\r\n    // Collects a single key press.\r\n    this._keyList = (typeof keyList === 'undefined') ? this._keyList : keyList\r\n    this._timeOut = (typeof timeOut === 'undefined') ? this._timeOut : timeOut\r\n\r\n    if (this._experiment !== null) {\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(this._timeOut, constants.RESPONSE_KEYBOARD, this._keyList)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the moderator keys (LIST, CTRL, ALT) pressed during a response.\r\n   * @return {Array} - List of pressed moderator keys.\r\n   */\r\n  get_mods () {\r\n    var moderators = []\r\n    if (this._experiment._runner._events.keyDownEvent !== null) {\r\n      if (this._experiment._runner._events.keyDownEvent.event.shiftKey === true) {\r\n        moderators.push('shift')\r\n      }\r\n      if (this._experiment._runner._events.keyDownEvent.event.ctrlKey === true) {\r\n        moderators.push('ctrl')\r\n      }\r\n      if (this._experiment._runner._events.keyDownEvent.event.altKey === true) {\r\n        moderators.push('alt')\r\n      }\r\n    }\r\n    return moderators\r\n  }\r\n\r\n  /**\r\n   * Shows or hides a virtual keyboard.\r\n   * @param {Boolean} visible - If true the virtual keyboard is shown.\r\n   */\r\n  show_virtual_keyboard (visible) {\r\n    // Shows or hides a virtual keyboard.\r\n    if (visible === true) {\r\n      // Hack to show the virutal keyboard. ## Must be tested!\r\n      this._experiment._runner._renderer.view.focus()\r\n    } else {\r\n      // Hack to hide the virtual keyboard. ## Must be tested!\r\n      var tmp = document.createElement('input')\r\n      document.body.appendChild(tmp)\r\n      tmp.focus()\r\n      document.body.removeChild(tmp)\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a Sequence item.\r\n * @extends Item\r\n */\r\nexport default class Sequence extends Item {\r\n  /** The sequence class controls the running of a series of items. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._index = -1\r\n    this._items = null\r\n    this._keyboard = null\r\n\r\n    // Create and set public properties.\r\n    this.description = 'Runs a number of items in sequence'\r\n    this.flush_keyboard = 'yes'\r\n    this.items = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the prepare complete phase of an item. */\r\n  _prepare_complete () {\r\n    // Generate the items list for the run cycle.\r\n    if (this._index < this.items.length) {\r\n      if ((this.items[this._index].item in this._runner._itemStore._items) === false) {\r\n        this._runner._debugger.addError('Could not find a child item which is called by sequence item: ' + this.name + ' (' + this.items[this._index].item.name + ')')\r\n      } else {\r\n        // Increase the current index.\r\n        this._index++\r\n\r\n        // Add the item to the internal list.\r\n        this._items.push({\r\n          item: this.items[this._index - 1].item,\r\n          cond: this.syntax.compile_cond(this.items[this._index - 1].cond)\r\n        })\r\n\r\n        // Prepare the item.\r\n        this._runner._itemStore.prepare(this.items[this._index - 1].item, this)\r\n      }\r\n    } else {\r\n      // Prepare process is done, start execution.\r\n      this._index = 0\r\n\r\n      // Remove the prepare phase form the stack.\r\n      this._runner._itemStack.pop()\r\n\r\n      // Check if this sequence is part of a parent sequence and must jump back in the prepare phase.\r\n      if (this._parent.type === 'sequence') {\r\n        this._parent._prepare_complete()\r\n      } else {\r\n        // Execute the next cycle of the sequence itself.\r\n        this._runner._itemStore.run(this.name, this._parent)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.items = []\r\n    this.vars.flush_keyboard = 'yes'\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Parses a definition string.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          var tokens = this.syntax.split(lines[i])\r\n          if ((tokens.length > 0) && (tokens[0] === 'run')) {\r\n            var item = tokens[1]\r\n            var cond = 'always'\r\n            if (tokens.length > 2) {\r\n              cond = this.syntax.strip_slashes(\r\n                this.syntax.remove_quotes(tokens[2])\r\n              )\r\n            }\r\n            // Push the item and condition definition to the items list.\r\n            this.items.push({\r\n              item: item,\r\n              cond: cond\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Inherited.\r\n    super.prepare()\r\n\r\n    // Create a keyboard to flush responses at the start of the run phase\r\n    if (this.vars.flush_keyboard === 'yes') {\r\n      this._keyboard = new Keyboard(this.experiment)\r\n    } else {\r\n      this._keyboard = null\r\n    }\r\n\r\n    // Generate the items list for the run cycle.\r\n    this._index = 0\r\n    this._items = []\r\n\r\n    // Prepare the items.\r\n    this._prepare_complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Check if all items have been processed.\r\n    if (this._index < this._items.length) {\r\n      // Flush the keyboard at the beginning of the sequence.\r\n      if ((this._index === 0) && (this.vars.flush_keyboard === 'yes')) {\r\n        this._keyboard.flush()\r\n      }\r\n\r\n      // Increase the current index.\r\n      this._index++\r\n      const currentItem = this._items[this._index - 1]\r\n\r\n      // Set the workspace.\r\n      this._runner._pythonWorkspace.self = this\r\n\r\n      // Check if the item may run.\r\n      if (this._runner._pythonWorkspace._eval(currentItem.cond) === true) {\r\n        // run the current item of the sequence object.\r\n        this._runner._itemStore.run(currentItem.item, this)\r\n      } else {\r\n        // Execute the next cycle of the sequence itself.\r\n        this.run()\r\n      }\r\n    } else {\r\n      // sequence is finalized.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import sortBy from 'lodash/sortBy'\nimport isFunction from 'lodash/isFunction'\n\nimport Item from './item.js'\nimport { constants } from '../system/constants.js'\n\n/**\n * Class representing coroutines\n * @extends Item\n */\nexport default class Coroutines extends Item {\n  constructor (experiment, name, script) {\n    // Inherited create.\n    super(experiment, name, script)\n    // Definition of public properties.\n    this.description = 'Repeatedly runs another item'\n    // The tasks to perform\n    this.tasks = []\n    // The tasks to perform this iteration\n    this.schedule = []\n    // Process the script.\n    this.from_string(script)\n  }\n\n  from_string (script) {\n    if (script === null) return\n    for (const s of script.split('\\n')) {\n      const [cmd, arglist, kwdict] = this.experiment.syntax.parse_cmd(s)\n      if (cmd === 'set') {\n        const [variable, value] = arglist\n        this.vars[variable] = value\n      }\n      if (cmd === 'run' && arglist.length) {\n        const task = {\n          item_name: arglist.shift(),\n          start_time: kwdict.start || 0,\n          end_time: kwdict.end || 0,\n          run_if: kwdict.runif || 'always'\n        }\n        this.tasks.push(task)\n      }\n    }\n  }\n\n  prepare () {\n    this._runner._debugger.addMessage(`Preparing coroutines item '${this.name}'`)\n    this.schedule = this.tasks.reduce((result, taskParams) => {\n      const item_name = this._runner._syntax.eval_text(taskParams.item_name, this.vars)\n      const item = this._runner._itemStore._items[item_name]\n      if (!item) {\n        const msg = `Coroutines '${this.name}' - could not find item: ${item_name}`\n        this._runner._debugger.addError(msg)\n        throw new Error(msg)\n      }\n      this._runner._pythonWorkspace.self = this\n      const cond = this._runner._syntax.compile_cond(taskParams.run_if)\n      if (this._runner._pythonWorkspace._eval(cond) === true) {\n        const start_time = this._runner._syntax.eval_text(taskParams.start_time, this.vars)\n        const end_time = this._runner._syntax.eval_text(taskParams.end_time, this.vars)\n        result.push(new Task(item, item_name, start_time, end_time,\n          taskParams.item_name === this.vars.get('end_after_item')))\n      }\n      return result\n    }, [])\n    super.prepare()\n  }\n\n  run () {\n    this._runner._debugger.addMessage(`Running coroutines item '${this.name}'`)\n    super.run()\n    // Prepare all tasks\n    for (const task of this.schedule) {\n      this._runner._itemStore.prepare(task.item_name, this)\n    }\n    this.schedule = sortBy(this.schedule, 'start_time')\n    // Launch all tasks and wrap them in the coroutine helper\n    for (const task of this.schedule) {\n      this._runner._debugger.addMessage(`Launching task '${task.item_name}'`)\n      task.launch()\n    }\n\n    this.active = []\n    this.dt = 0\n    this.t0 = performance.now()\n    this.running = true\n\n    this._loop()\n  }\n\n  _loop () {\n    while (this.schedule.length > 0 && this.schedule[0].started(this.dt)) {\n      this.active.push(this.schedule.shift())\n    }\n    this.active = sortBy(this.active, 'end_time')\n    const _active = []\n    for (const task of this.active) {\n      const status = task.step()\n      if (status === task.RUNNING) {\n        _active.push(task)\n        continue\n      }\n      if (status === task.ABORTED) {\n        this.running = false\n      }\n    }\n    this.active = _active\n    while (this.active.length > 0 && this.active[0].stopped(this.dt)) {\n      this.active.shift()\n    }\n\n    this.dt = performance.now() - this.t0\n    if (this.running && this.dt < this.vars.get('duration') &&\n      ![constants.TIMER_BREAK, constants.TIMER_EXIT, constants.TIMER_ERROR]\n        .includes(this._runner._events._state)) {\n      setTimeout(this._loop.bind(this), 0) // The well-known trick to deal with JS async nature...\n    } else {\n      // Kill all remaining tasks\n      for (const task of this.active) {\n        this._runner._debugger.addMessage(`Killing task '${task.item_name}'`)\n        task.kill()\n      }\n      this._complete()\n    }\n  }\n}\n\nclass Task {\n  UNINITIALISED = 0\n  RUNNING = 1\n  FINISHED = 2\n  ABORTED = -1\n\n  constructor (item, item_name, start_time, end_time, abort_on_end) {\n    this.item = item\n    this.item_name = item_name\n    this.start_time = start_time\n    this.end_time = end_time\n    this.abort_on_end = abort_on_end\n    this.state = this.UNINITIALISED\n    this._coroutine = null\n    this.step = () => { throw new Error('Task has not been initialized') }\n  }\n\n  launch () {\n    if (!isFunction(this.item.coroutine)) {\n      throw new Error(`Item ${this.item_name} does not have correct coroutine implementation`)\n    }\n    this._coroutine = this.item.coroutine()\n    this._coroutine.next()\n    this.step = () => {\n      // console.log(`Stepping ${this.item_name}`)\n      const { value, done } = this._coroutine.next(true)\n      if (value === false) {\n        this.state = this.ABORTED\n        return this.ABORTED\n      }\n      if (done === true) {\n        let newState\n        if (this.abort_on_end) {\n          newState = this.ABORTED\n        } else {\n          newState = this.FINISHED\n        }\n        this.state = newState\n        return this.state\n      }\n      return this.state // Should be this.RUNNING\n    }\n    this.state = this.RUNNING\n  }\n\n  started (dt) {\n    return dt >= this.start_time\n  }\n\n  stopped (dt) {\n    if (dt < this.end_time) {\n      return false\n    }\n    return this.kill()\n  }\n\n  kill () {\n    const response = this._coroutine.next(false)\n    if (response.done === true) {\n      this.state = this.FINISHED\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/** Class representing a mouse device. */\r\nexport default class Mouse {\r\n  /**\r\n   * Create an object which represents a mouse device.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  constructor (experiment, timeOut, buttonList, visible) {\r\n    // Create and set public properties.\r\n    this._experiment = experiment\r\n    this._timeOut = (typeof timeOut === 'undefined') ? null : timeOut\r\n    this._buttonList = (typeof buttonList === 'undefined') ? null : buttonList\r\n    this._visible = (typeof visible === 'undefined') ? false : visible\r\n\r\n    // Set constant properties.\r\n    this._SYNONYM_MAP = [\r\n      ['1', 'left_button', 'left'],\r\n      ['2', 'middle_button', 'middle'],\r\n      ['3', 'right_button', 'right'],\r\n      ['4', 'scroll_up'],\r\n      ['5', 'scroll_down']\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Convert all response values to their default values (remove synonyms).\r\n   * @param {Array} responses - A list of response values.\r\n   * @return {Array} - List of default values for the given responses.\r\n   */\r\n  _get_default_from_synonym (responses) {\r\n    // Return the default synonym value from a response.\r\n    var defaults = []\r\n    for (var i = 0; i < responses.length; i++) {\r\n      var synonym = this._synonyms(responses[i])\r\n      defaults.push(synonym[0])\r\n    }\r\n    return defaults\r\n  }\r\n\r\n  /**\r\n   * Set the configuration for the mouse backend.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  _set_config (timeOut, buttonList, visible) {\r\n    // Set mouse properties.\r\n    this._timeOut = timeOut\r\n    this._buttonList = buttonList\r\n    this._visible = visible\r\n  }\r\n\r\n  /**\r\n   * Convert a response value to its default value (remove synonym).\r\n   * @param {String} button - A response.\r\n   * @return {String|Null} - Default value of the response or null if none.\r\n   */\r\n  _synonyms (button) {\r\n    if (typeof button !== 'undefined') {\r\n      for (var i = 0; i < this._SYNONYM_MAP.length; i++) {\r\n        for (var j = 0; j < this._SYNONYM_MAP[i].length; j++) {\r\n          if (this._SYNONYM_MAP[i][j] === button) {\r\n            return this._SYNONYM_MAP[i]\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  /** Clear all pending mouse input. */\r\n  flush () {\r\n    // Always returns false because flusihing is not possible.\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Collects a single mouse click.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  get_click (timeOut, buttonList, visible) {\r\n    // Collects a single mouse click.\r\n    this._timeOut = (typeof timeOut === 'undefined') ? this._timeOut : timeOut\r\n    this._buttonList = (typeof buttonList === 'undefined') ? this._buttonList : buttonList\r\n    this._visible = (typeof visible === 'undefined') ? this._visible : visible\r\n\r\n    if (this._experiment !== null) {\r\n      // Hide or show the mouse.\r\n      this.show_cursor(this._visible)\r\n\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(this._timeOut, constants.RESPONSE_MOUSE, this._buttonList)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Returns the current mouse position. !Warning: this methods uses the state in\r\n   *  the last known mouse move, not the current state.\r\n   *  @param {Object} - Object with time, x and y coordinate of the mouse cursor.\r\n   */\r\n  get_pos () {\r\n    // Returns the current mouse position. !Warning: this methods uses the state in the last known mouse respone, not the current state.\r\n    if (this._experiment._runner._events._mouseMoveEvent !== null) {\r\n      return {\r\n        rtTime: this._experiment._runner._events._mouseMoveEvent.rtTime,\r\n        x: this._experiment._runner._events._mouseMoveEvent.event.clientX,\r\n        y: this._experiment._runner._events._mouseMoveEvent.event.clientY\r\n      }\r\n    } else {\r\n      return {\r\n        rtTime: -1,\r\n        x: -1,\r\n        y: -1\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Returns the current mouse position. !Warning: this methods uses the state in\r\n   *  the last known mouse press, not the current state.\r\n   *  @param {Object} - Object with the state of the mouse buttons.\r\n   */\r\n  get_pressed () {\r\n    // Returns the current button state of the mouse buttons. !Warning: this methods uses the state in the last known mouse respone, not the current state.\r\n    if (this._experiment._runner.events._mouse_press !== null) {\r\n      return {\r\n        buttons: [(this._experiment._runner._events._mouseDownEvent.event.button === 0),\r\n          (this._experiment._runner._events._mouseDownEvent.event.button === 1),\r\n          (this._experiment._runner._events._mouseDownEvent.event.button === 2)\r\n        ]\r\n      }\r\n    } else {\r\n      return {\r\n        buttons: [null, null, null]\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Sets the current position of the cursor. */\r\n  set_pos (pos) {}\r\n\r\n  /**\r\n   * Shows or hides the mouse cursor.\r\n   * @param {Boolean} show - If true the mouse cursor is shown.\r\n   */\r\n  show_cursor (show) {\r\n    // Set the property\r\n    this._visible = show\r\n\r\n    // Immediately changes the visibility of the mouse cursor.\r\n    if (show === true) {\r\n      // Show the mouse cursor.\r\n      this._experiment._runner._renderer.view.style.cursor = 'default'\r\n    } else {\r\n      // Set the cursor visibility to none.\r\n      this._experiment._runner._renderer.view.style.cursor = 'none'\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\nimport Mouse from '../backends/mouse.js'\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a GeneralResponse item.\r\n * @extends Item\r\n */\r\nexport default class GenericResponse extends Item {\r\n  /** The sequence class controls the running of a serie of items. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._allowed_responses = null\r\n    this._duration = 0\r\n    this._duration_func = null\r\n    this._keyboard = null\r\n    this._mouse = null\r\n    this._responsetype = constants.RESPONSE_NONE\r\n    this._timeout = -1\r\n\r\n    // Create and set public properties.\r\n    this.process_feedback = false\r\n    this.synonyms = null\r\n  }\r\n\r\n  /** Implements the complete phase of the general response item. */\r\n  _complete () {\r\n    // Check if a timeout has occured which must be treaded as a response.\r\n    let timeout = this.vars.get('timeout')\r\n    if ((typeof timeout !== 'undefined') &&\r\n      ((this.experiment._runner._events._timeStamp - this.experiment.vars.get('time_' + this.name)) > timeout)) {\r\n      // Process the timeout none response.\r\n      this.process_response_timeout()\r\n    }\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /**\r\n     * Implements the update response phase of the general response item.\r\n     * @param {Object} response - The response object which is evaluated.\r\n     */\r\n  _update (response) {\r\n    if (response !== null) {\r\n      // Implements the update response phase of the item.\r\n      if ((this._responsetype === constants.RESPONSE_KEYBOARD) &&\r\n        (response.type === constants.RESPONSE_KEYBOARD)) {\r\n        this.process_response_keypress(response)\r\n      } else if ((this._responsetype === constants.RESPONSE_MOUSE) &&\r\n        (response.type === constants.RESPONSE_MOUSE)) {\r\n        this.process_response_mouseclick(response)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Prepare the list with allowed responses */\r\n  prepare_allowed_responses () {\r\n    // Prepare the allowed responses.\r\n    if (this.vars.get('allowed_responses') === null) {\r\n      this._allowed_responses = null\r\n    } else {\r\n      // Create a list of allowed responses that are separated by semicolons.\r\n      // Also trim any whitespace.\r\n      const allowed_responses = String(this.vars.get('allowed_responses')).split(';')\r\n        .map(item => (typeof item === 'string')\r\n          ? item.replace(/^\"(.*)\"$/g, '$1').trim()\r\n          : item).filter(Boolean)\r\n      if (this.vars.duration === 'keypress') {\r\n        // this._allowed_responses = allowed_responses;\r\n        this._allowed_responses = this._keyboard._get_default_from_synonym(allowed_responses)\r\n      } else if (this.vars.duration === 'mouseclick') {\r\n        // For mouse responses, we don't check if the allowed responses make sense.\r\n        this._allowed_responses = this._mouse._get_default_from_synonym(allowed_responses)\r\n      }\r\n\r\n      // If allowed responses are provided, the list should not be empty.\r\n      if (this._allowed_responses.length === 0) {\r\n        this.experiment._runner._debugger.addError(\r\n          'Defined responses are not valid in keyboard_response: ' +\r\n          this.name + ' (' + this.vars.get('allowed_responses') + ')')\r\n      }\r\n    }\r\n  }\r\n\r\n  // Prepare the duration of the stimulus interaction. */\r\n  prepare_duration () {\r\n    // Get duration.\r\n    this._duration = this.syntax.remove_quotes(this.vars.get('duration'))\r\n\r\n    // Prepare the duration.\r\n    if (this._duration !== null) {\r\n      if ((this._duration === 'keypress') || (this._duration === 'mouseclick') ||\r\n                (this._duration === 'sound') || (this._duration === 'video')) {\r\n        this._duration = -1\r\n        if (this.vars.duration === 'keypress') {\r\n          this.prepare_duration_keypress()\r\n          this._responsetype = constants.RESPONSE_KEYBOARD\r\n        } else if (this.vars.duration === 'mouseclick') {\r\n          this.prepare_duration_mouseclick()\r\n          this._responsetype = constants.RESPONSE_MOUSE\r\n        } else if (this.vars.duration === 'sound') {\r\n          this._responsetype = constants.RESPONSE_SOUND\r\n        } else if (this.vars.duration === 'video') {\r\n          this._responsetype = constants.RESPONSE_VIDEO\r\n        }\r\n      } else {\r\n        // Prepare a duration in milliseconds\r\n        this._duration = Number(this._duration)\r\n        if (this._duration === 0) {\r\n          this._responsetype = constants.RESPONSE_NONE\r\n        } else {\r\n          this._responsetype = constants.RESPONSE_DURATION\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Prepare the system for a keyboard duration interval. */\r\n  prepare_duration_keypress () {\r\n    // Prepare a keyboard duration.\r\n    this._keyboard = new Keyboard(this.experiment)\r\n    this._final_duration = (this._timeout !== -1) ? this._timeout : this._duration\r\n  }\r\n\r\n  /** Prepare the system for a mouseclick duration interval. */\r\n  prepare_duration_mouseclick () {\r\n    // Prepare a mouseclick duration.\r\n    this._mouse = new Mouse(this.experiment)\r\n    this._final_duration = (this._timeout !== -1) ? this._timeout : this._duration\r\n  }\r\n\r\n  /** Prepare the system for a timeout. */\r\n  prepare_timeout () {\r\n    let timeout = this.vars.get('timeout')\r\n    if (timeout === null) return\r\n    this._timeout = (typeof timeout === 'number') ? timeout : -1\r\n  }\r\n  \r\n  /** Sets duration and allowed responses on the response object. **/\r\n  configure_response_objects() {\r\n    if (this.vars.duration === 'keypress') {\r\n      this._keyboard._set_config(this._final_duration, this._allowed_responses)\r\n    } else if (this.vars.duration === 'mouseclick') {\r\n      this._mouse._set_config(this._final_duration, this._allowed_responses, false)\r\n    }\r\n  }\r\n\r\n  /** Select the type of stimulus response processing. */\r\n  process_response () {\r\n    // Start stimulus response cycle.\r\n    switch (this._responsetype) {\r\n    case constants.RESPONSE_NONE:\r\n      // Duration is 0, so complete the stimulus/response cycle.\r\n      this._status = constants.STATUS_FINALIZE\r\n      this._complete()\r\n      break\r\n    case constants.RESPONSE_DURATION:\r\n      this.sleep_for_duration()\r\n      break\r\n    case constants.RESPONSE_KEYBOARD:\r\n      this._keyboard.get_key()\r\n      break\r\n    case constants.RESPONSE_MOUSE:\r\n      this._mouse.get_click()\r\n      break\r\n    case constants.RESPONSE_SOUND:\r\n      this._sampler.wait()\r\n      break\r\n    case constants.RESPONSE_VIDEO:\r\n      this._video_player.wait()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Sets the mouse coordinates based **/\r\n  set_mouse_coordinates (clientX, clientY) {\r\n    // We need the top-left and scaling of the viewport to set the mouse\r\n    // coordinates so that 0,0 corresponds to the display center. The scaling\r\n    // needs to be taken into account also such that the viewport always has\r\n    // the same size in cursor coordinates, even if it's scaled down.\r\n    const rect = this._runner._renderer.view.getBoundingClientRect()\r\n    const scale = Math.min(\r\n      (rect.right - rect.left) / this.experiment.vars.width,\r\n      (rect.bottom - rect.top) / this.experiment.vars.height\r\n    )\r\n    const center_x = scale * this.experiment.vars.width / 2\r\n    const center_y = scale * this.experiment.vars.height / 2\r\n    this.experiment.vars.cursor_x = (clientX - center_x - rect.left) / scale\r\n    this.experiment.vars.cursor_y = (clientY - center_y - rect.top) / scale\r\n  }\r\n\r\n  /** Process a keyboard response. */\r\n  process_response_keypress (retval) {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = retval.rtTime\r\n    this.experiment.vars.response = this.syntax.sanitize(retval.resp)\r\n    this.synonyms = this._keyboard._synonyms(this.experiment.vars.response)\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** Process a mouse click response. */\r\n  process_response_mouseclick (retval) {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = retval.rtTime\r\n    this.experiment.vars.response = retval.resp\r\n    this.synonyms = this._mouse._synonyms(this.experiment.vars.response)\r\n    this.set_mouse_coordinates(retval.event.clientX, retval.event.clientY)\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** Process a time out response. */\r\n  process_response_timeout () {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = this.experiment._runner._events._timeStamp\r\n    this.experiment.vars.response = 'None'\r\n    this.synonyms = ['None', 'none']\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** General response logging after a stimulus/response. */\r\n  response_bookkeeping () {\r\n    // The respone and response_time variables are always set, for every response item\r\n    this.experiment.vars.set('response_time', this.experiment._end_response_interval - this.experiment._start_response_interval)\r\n    this.experiment.vars.set('response_' + this.name, this.experiment.vars.get('response'))\r\n    this.experiment.vars.set('response_time_' + this.name, this.experiment.vars.get('response_time'))\r\n    this.experiment._start_response_interval = null\r\n    // But correctness information is only set for dedicated response items,\r\n    // such as keyboard_response items, because otherwise we might confound the feedback\r\n    if (this.process_feedback === true) {\r\n      this.experiment.vars.correct = ''\r\n      if (this.vars.get('correct_response') !== null) {\r\n        // If a correct_response has been defined, we use it to determine accuracy etc.\r\n        if (this.synonyms !== null) {\r\n          if (this.synonyms.includes(this.syntax.remove_quotes(this.vars.get('correct_response').toString()))) {\r\n            this.experiment.vars.correct = 1\r\n            this.experiment.vars.total_correct = this.experiment.vars.total_correct + 1\r\n          } else {\r\n            this.experiment.vars.correct = 0\r\n          }\r\n        }\r\n      }\r\n      // Do some response bookkeeping\r\n      this.experiment.vars.total_response_time = this.experiment.vars.total_response_time + this.experiment.vars.response_time\r\n      this.experiment.vars.total_responses = this.experiment.vars.total_responses + 1\r\n      this.experiment.vars.accuracy = Math.round(100.0 * this.experiment.vars.total_correct / this.experiment.vars.total_responses)\r\n      this.experiment.vars.acc = this.experiment.vars.accuracy\r\n      this.experiment.vars.average_response_time = Math.round(this.experiment.vars.total_response_time / this.experiment.vars.total_responses)\r\n      this.experiment.vars.avg_rt = this.experiment.vars.average_response_time\r\n      this.experiment.vars.set('correct_' + this.name, this.experiment.vars.correct)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Sets or resets the start of the stimulus response interval.\r\n     * @param {Boolean} reset - If true reset the sri value.\r\n     */\r\n  set_sri (reset) {\r\n    // Sets the start of the response interval.\r\n    if (reset === true) {\r\n      this.sri = self.vars.get('time_' + this.name)\r\n      this.experiment._start_response_interval = this.vars.get('time_' + this.name)\r\n    }\r\n    if (!this.experiment._start_response_interval) {\r\n      this.sri = this.experiment.vars.get('time_' + this.name)\r\n    } else {\r\n      this.sri = this.experiment._start_response_interval\r\n    }\r\n  }\r\n\r\n  /** Sleep for a specified time. */\r\n  sleep_for_duration () {\r\n    // Sleep for a specified time.\r\n    this.sleep(this._duration)\r\n  }\r\n\r\n  /** Implements the prepare phase of the general response item. */\r\n  prepare () {\r\n    // Implements the prepare phase of the item.\r\n    this.prepare_timeout()\r\n    this.prepare_duration()\r\n    this.prepare_allowed_responses()\r\n    this.configure_response_objects()\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Canvas from '../backends/canvas.js'\r\n\r\n/**\r\n * Class representing a Sketchpad item.\r\n * @extends GeneralResponse\r\n */\r\nexport default class Sketchpad extends GenericResponse {\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n\r\n    // Create and set public properties.\r\n    this.canvas = new Canvas(experiment, false)\r\n    this.elements = []\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n     * Sort function used for determining the draw index (z-index) of alle elemente.\r\n     * @param {Object} a - The first object to compare.\r\n     * @param {Object} b - The second object to compare.\r\n     * @return {Number} - The result of the comparison.\r\n     */\r\n  _compare (a, b) {\r\n    // Sort function used for determining the draw index (z-index) of alle elemente.\r\n    if (a.z_index() < b.z_index()) { return 1 } else if (a.z_index() > b.z_index()) { return -1 } else { return 0 }\r\n  }\r\n\r\n  /** Implements the complete phase of the Sketchpad item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    // Resets all item variables to their default value.\r\n    this.elements = []\r\n    this.vars.duration = 'keypress'\r\n  }\r\n\r\n  /** Process a time out response. */\r\n  process_response_timeout () {\r\n    // Nothing happens\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Define and reset variables to their defaults.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      const lines = script.split('\\n')\r\n      for (let i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          const tokens = this.syntax.split(lines[i])\r\n          if ((tokens.length > 0) && (tokens[0] === 'draw')) {\r\n            if (this.experiment.items._isClass(tokens[1]) === true) {\r\n              var element = this.experiment.items._newElementClass(tokens[1], this, lines[i])\r\n              this.elements.push(element)\r\n            } else {\r\n              this.experiment._runner._debugger.addError('Failed to parse definition: ' + tokens[1])\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Sort the elements usin the z-index.\r\n      this.elements.sort(this._compare)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the background color of the canvas if it is defined in the var store\r\n   *\r\n   * @memberof Sketchpad\r\n   */\r\n  _set_bg_color () {\r\n    const backgroundColor = this.vars.get('background')\r\n    if (backgroundColor) {\r\n      this.canvas._styles.background_color = backgroundColor\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Clear the canvas.\r\n    this.canvas.clear()\r\n\r\n    // Draw the elements.\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      if (this.elements[i].is_shown() === true) {\r\n        this.elements[i].draw()\r\n      }\r\n    }\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the Sketschpad. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    this._set_bg_color()\r\n    // Set the onset and start the stimulus response process.\r\n    this.set_item_onset(this.canvas.show())\r\n    this.set_sri(false)\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    yield\r\n    this._set_bg_color()\r\n    this.set_item_onset(this.canvas.show())\r\n  }\r\n}\r\n","import Sketchpad from './sketchpad.js'\r\n\r\n/**\r\n * Class representing a feedback item.\r\n * @extends Sketchpad\r\n */\r\nexport default class Feedback extends Sketchpad {\r\n  /**\r\n   * Create a feedback which show feedback info to the subhect.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Provides feedback to the participant'\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n\r\n    // Reset feedback variables.\r\n    if (this.vars.reset_variables === 'yes') {\r\n      this.experiment.reset_feedback()\r\n    }\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    // Inherited.\r\n    super.reset()\r\n\r\n    // Reset the variables.\r\n    this.vars.reset_variables = 'yes'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    this._parent._prepare_complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.prepare()\r\n    super.run()\r\n  }\r\n}\r\n","import Item from './item.js'\r\n\r\n/**\r\n * Class representing an inline item.\r\n * @extends Item\r\n */\r\nexport default class InlineScript extends Item {\r\n  /**\r\n     * Create an inline item which executes inline python code.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Executes Python code'\r\n\r\n    // Define and set the public properties.\r\n    this._prepare_run = false\r\n    this._prepare_tree = null\r\n    this._run_tree = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Check if the parser is in pause mode and must be restarted.\r\n    if (this.experiment._runner._pythonParser._status === 1) {\r\n      // Process the current active node.\r\n      this.experiment._runner._pythonParser._process_nodes()\r\n    } else {\r\n      if (this._prepare_run === true) {\r\n        // Inherited prepare.\r\n        super.prepare()\r\n      } else {\r\n        // Inherited.\r\n        super._complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the complete script phase of an item. */\r\n  _complete_script () {\r\n    // Added for video script functionaliry.\r\n    this._complete()\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.vars._prepare = ''\r\n    this.vars._run = ''\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Compile the script code to ast trees.\r\n    this._prepare_tree = this.experiment._runner._pythonParser._parse(this.vars._prepare)\r\n    this._run_tree = this.experiment._runner._pythonParser._parse(this.vars._run)\r\n\r\n    // Execute the run code.\r\n    if (this._prepare_tree !== null) {\r\n      // Set the current item.\r\n      this.experiment._runner._events._currentItem = this\r\n\r\n      // Set the prepare run toggle.\r\n      this._prepare_run = true\r\n\r\n      // Record the onset of the current item.\r\n      this.set_item_onset()\r\n\r\n      // Start the parser\r\n      this.experiment._runner._pythonParser._run(this, this._prepare_tree)\r\n    } else {\r\n      // Inherited.\r\n      super.prepare()\r\n    }\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Set the prepare run toggle.\r\n    this._prepare_run = false\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Execute the run code.\r\n    if (this._run_tree !== null) {\r\n      // Start the parser\r\n      this.experiment._runner._pythonParser._run(this, this._run_tree)\r\n    } else {\r\n      // To prevent prepeare script from running twice.\r\n      this.experiment._runner._pythonParser._status = 0\r\n\r\n      // No script, so jump to compelte.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\n\r\n/**\r\n * Class representing an inline item.\r\n * @extends Item\r\n */\r\nexport default class InlineJavaScript extends Item {\r\n  /**\r\n     * Create an inline item which executes inline python code.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n    // Define and set the public properties.\r\n    this.description = 'Executes JavaScript code (ECMA 5.1)'\r\n    this.workspace = experiment._javascriptWorkspace\r\n    // Process the script\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.vars._prepare = ''\r\n    this.vars._run = ''\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Parses a definition string.\r\n    this.reset()\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      var read_run_lines = false\r\n      var read_prepare_lines = false\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        var tokens = this.syntax.split(lines[i])\r\n        if ((tokens !== null) && (tokens.length > 0)) {\r\n          switch (tokens[0]) {\r\n          case 'set':\r\n            this.parse_variable(lines[i])\r\n            break\r\n          case '__end__':\r\n            read_run_lines = false\r\n            read_prepare_lines = false\r\n            break\r\n          case '___prepare__':\r\n            read_prepare_lines = true\r\n            break\r\n          case '___run__':\r\n            read_run_lines = true\r\n            break\r\n          default:\r\n            if (read_run_lines === true) {\r\n              this.vars._run = this.vars._run + lines[i] + '\\n'\r\n            } else if (read_prepare_lines === true) {\r\n              this.vars._prepare = this.vars._prepare + lines[i] + '\\n'\r\n            }\r\n          }\r\n        } else {\r\n          if (read_run_lines === true) {\r\n            this.vars._run = this.vars._run + lines[i] + '\\n'\r\n          } else if (read_prepare_lines === true) {\r\n            this.vars._prepare = this.vars._prepare + lines[i] + '\\n'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    this.workspace._eval(this.vars._prepare)\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    this.set_item_onset()\r\n    this.workspace._eval(this.vars._run)\r\n    this._complete()\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\n\r\n/**\r\n * Class representing a keyboard response item.\r\n * @extends GenericResponse\r\n */\r\nexport default class KeyboardResponse extends GenericResponse {\r\n  /**\r\n     * Create a keyboard response item which waits for a keyboard response.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Collects keyboard responses'\r\n    this._flush = 'yes'\r\n    this._keyboard = new Keyboard(this.experiment)\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.process_feedback = true\r\n    this.vars.allowed_responses = null\r\n    this.vars.correct_response = null\r\n    this.vars.duration = 'keypress'\r\n    this.vars.flush = 'yes'\r\n    this.vars.timeout = 'infinite'\r\n  }\r\n\r\n  /** Implements the prepare phase of the KeyboardResponse. */\r\n  prepare () {\r\n    // Set the internal flush property.\r\n    this._flush = (this.vars.flush) ? this.vars.flush : 'yes'\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the KeyboardResponse. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Flush responses, to make sure that earlier responses are not carried over.\r\n    if (this._flush === 'yes') {\r\n      this._keyboard.flush()\r\n    }\r\n\r\n    this.set_sri()\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    const keyDownHandler = (event) => {\r\n      const keypress = this.experiment._runner._events._processKeyboardEvent(event, 1)\r\n      let allowed_responses = 'all'\r\n      if (this.vars.get('allowed_responses')) {\r\n        allowed_responses = this._keyboard._get_default_from_synonym(\r\n          this.vars.get('allowed_responses').split(';').map(key => key.trim())\r\n        )\r\n      }\r\n\r\n      if (allowed_responses === 'all' || allowed_responses.includes(keypress.resp)) {\r\n        this.response = keypress\r\n      }\r\n    }\r\n\r\n    window.addEventListener('keydown', keyDownHandler)\r\n    yield\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    this.set_sri()\r\n    let proceed = true\r\n    this.response = null\r\n    while (!this.response && proceed) {\r\n      proceed = yield true\r\n    }\r\n    window.removeEventListener('keydown', keyDownHandler)\r\n    if (this.response) this.process_response_keypress(this.response)\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Mouse from '../backends/mouse.js'\r\n\r\n/**\r\n * Class representing a mouse response item.\r\n * @extends GenericResponse\r\n */\r\nexport default class MouseResponse extends GenericResponse {\r\n  /**\r\n     * Create an mouse response item which waits for a mouse response.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Collects mouse responses'\r\n    this.resp_codes = {}\r\n    this._flush = 'yes'\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of the Sketschpad. */\r\n  _complete () {\r\n    // Hide the mouse cursor.\r\n    this._mouse.show_cursor(false)\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.process_feedback = true\r\n    this.resp_codes = {}\r\n    this.resp_codes['0'] = 'timeout'\r\n    this.resp_codes['1'] = 'left_button'\r\n    this.resp_codes['2'] = 'middle_button'\r\n    this.resp_codes['3'] = 'right_button'\r\n    this.resp_codes['4'] = 'scroll_up'\r\n    this.resp_codes['5'] = 'scroll_down'\r\n    this.vars.allowed_responses = null\r\n    this.vars.correct_response = null\r\n    this.vars.duration = 'mouseclick'\r\n    this.vars.flush = 'yes'\r\n    this.vars.show_cursor = 'yes'\r\n    this.vars.timeout = 'infinite'\r\n  }\r\n\r\n  /** Implements the prepare phase of the Sketschpad. */\r\n  prepare () {\r\n    // Set the internal flush property.\r\n    this._flush = (this.vars.flush) ? this.vars.flush : 'yes'\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the Sketschpad. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Show the cursor if defined.\r\n    if (this.vars.show_cursor === 'yes') {\r\n      this._mouse.show_cursor(true)\r\n    }\r\n\r\n    // Flush responses, to make sure that earlier responses are not carried over.\r\n    if (this._flush === 'yes') {\r\n      this._mouse.flush()\r\n    }\r\n\r\n    this.set_sri()\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    const mouseDownHandler = (event) => {\r\n      this.response = this.experiment._runner._events._processMouseEvent(event, 1)\r\n    }\r\n\r\n    const touchHandler = (event) => {\r\n      event.button = 0\r\n      event.clientX = event.changedTouches[0].clientX\r\n      event.clientY = event.changedTouches[0].clientY\r\n      this.response = this.experiment._runner._events._processMouseEvent(event, 1)\r\n    }\r\n\r\n    window.addEventListener('mousedown', mouseDownHandler)\r\n    window.addEventListener('touchstart', touchHandler)\r\n\r\n    yield\r\n    // Show the cursor if defined.\r\n    if (this.vars.show_cursor === 'yes') {\r\n      this._mouse.show_cursor(true)\r\n    }\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    this.set_sri()\r\n    let proceed = true\r\n    this.response = null\r\n    while (!this.response && proceed) {\r\n      proceed = yield true\r\n    }\r\n    window.removeEventListener('mousedown', mouseDownHandler)\r\n    window.removeEventListener('touchstart', touchHandler)\r\n    if (this.response) this.process_response_mouseclick(this.response)\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a logger item.\r\n * @extends Item\r\n */\r\nexport default class Logger extends Item {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} pExperiment - The experiment item to which the item belongs.\r\n     * @param {String} pName - The unique name of the item.\r\n     * @param {String} pScript - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Logs experimental data'\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.logvars = []\r\n    this.vars.auto_log = 'yes'\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    this.reset()\r\n    if (script !== null) {\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          var tokens = this.syntax.split(lines[i])\r\n          if ((tokens[0] === 'log') && (tokens.length > 0)) {\r\n            this.logvars.push(tokens[1])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.logvars.sort()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      this._status = constants.STATUS_FINALIZE\r\n      this.set_item_onset()\r\n      this.experiment._log.write_vars(\r\n        (this.vars.get('auto_log') === 'yes')\r\n          ? this.logvars.concat(this.experiment.vars.inspect()).sort()\r\n          : this.logvars\r\n      )\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\nlet audioCtx = null\r\ntry {\r\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n} catch (e) {\r\n  console.warn('Web Audio API is not supported in this browser')\r\n}\r\n\r\n/** Class representing a sampler. */\r\nexport default class SamplerBackend {\r\n  /**\r\n   * Create a sampler object which controls the sampler device.\r\n   * @param {Object} experiment - The experiment to which the sampler belongs.\r\n   * @param {String} source - The sound source name.\r\n   * @param {Number} volume - The volume to use when playing the sound.\r\n   * @param {Number} pitch - The pitch to use when playing the sound.\r\n   * @param {Number} pan - The pan to use when playing the sound.\r\n   * @param {String} duration - The duration of the sound.\r\n   * @param {Number} fade - The fade to use when playing the sound.\r\n   * @param {Boolean} block - If true use the sound ad a block wave.\r\n   */\r\n  constructor (experiment, source, volume, pitch, pan, duration, fade, block) {\r\n    // Create and set public properties.\r\n    this.block = (typeof block === 'undefined') ? false : block\r\n    this.duration = (typeof duration === 'undefined') ? 'sound' : duration\r\n    this.experiment = experiment\r\n    this.volume = (typeof volume === 'undefined') ? 1 : volume\r\n    this.fade = (typeof fade === 'undefined') ? 0 : fade\r\n    this.pan = (typeof pan === 'undefined') ? 0 : pan\r\n    this.pitch = (typeof pitch === 'undefined') ? 1 : pitch\r\n    try {\r\n      this.sample = source.data.cloneNode()\r\n    } catch (e) {\r\n      console.error('Could not play sound:', source)\r\n      throw e\r\n    }\r\n    this.sample.onended = () => this.experiment._runner._events._audioEnded(this)\r\n\r\n    if (audioCtx) {\r\n      this.source = audioCtx.createMediaElementSource(this.sample)\r\n    } else {\r\n      this.source = this.sample\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play a sound file.\r\n   * @param {Number} volume - The volume to use when playing the sound.\r\n   * @param {Number} pitch - The pitch to use when playing the sound.\r\n   * @param {Number} pan - The pan to use when playing the sound.\r\n   * @param {String} duration - The duration of the sound.\r\n   * @param {Number} fade - The fade to use when playing the sound.\r\n   * @param {Boolean} block - If true use the sound ad a block wave.\r\n   */\r\n  play (volume, pitch, pan, duration, fade, block) {\r\n    // Check if optional parameters are defined.\r\n    this.block = block || this.block\r\n    this.duration = typeof duration === 'undefined' ? this.duration : duration\r\n    this.volume = typeof volume === 'undefined' ? this.volume : volume\r\n    this.pitch = typeof pitch === 'undefined' ? this.pitch : pitch\r\n    this.pan = typeof pan === 'undefined' ? this.pan : pan\r\n    this.fade = typeof fade === 'undefined' ? this.fade : fade\r\n\r\n    if (audioCtx) {\r\n      if (audioCtx.state === 'suspended') audioCtx.resume()\r\n      this.source.connect(this.applyFilters())\r\n    } else {\r\n      this.source.volume = this.volume\r\n    }\r\n\r\n    this.sample.play()\r\n  }\r\n\r\n  /** Set the blocking of the sound (wait period). */\r\n  wait () {\r\n    // Set the blocking of the sound.\r\n    this.experiment._runner._events._run(this, -1, constants.RESPONSE_SOUND, [])\r\n  }\r\n\r\n  applyFilters () {\r\n    const nodes = [audioCtx.destination]\r\n\r\n    try {\r\n      const gainNode = audioCtx.createGain()\r\n      gainNode.gain.setValueAtTime(this.volume, audioCtx.currentTime)\r\n\r\n      if (this.fade) {\r\n        gainNode.gain.setValueAtTime(0, audioCtx.currentTime)\r\n        gainNode.gain.linearRampToValueAtTime(this.volume, audioCtx.currentTime + this.fade / 1000)\r\n      }\r\n\r\n      nodes.unshift(gainNode)\r\n    } catch (e) {\r\n      console.warn('Unable to apply volume or gain', e)\r\n    }\r\n\r\n    if (this.pan) {\r\n      try {\r\n        nodes.unshift(new StereoPannerNode(audioCtx, { pan: this.pan }))\r\n      } catch (e) {\r\n        console.warn('Unable to apply panning', e)\r\n      }\r\n    }\r\n\r\n    // Connect the filters creating a chain\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (nodes[i] !== audioCtx.destination) {\r\n        nodes[i].connect(nodes[i + 1])\r\n      }\r\n    }\r\n\r\n    return nodes.shift(0)\r\n  }\r\n  \r\n  onEnded () {\r\n  /**\r\n   * Clears the source tag of the sample to free up the WebMediaPlayer. See\r\n   * also: https://github.com/open-cogsci/osweb/issues/69\r\n   **/ \r\n    this.sample.src = \"\"\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport SamplerBackend from '../backends/sampler.js'\r\n\r\n/**\r\n * Class representing a sampler item.\r\n * @extends GenericResponse\r\n */\r\nexport default class Sampler extends GenericResponse {\r\n  /**\r\n     * Create a sampler  item which plays a sound.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.block = false\r\n    this.description = 'Plays a sound file in .wav or .ogg format'\r\n\r\n    // Definition of private properties.\r\n    this._sample = null\r\n    this._sampler = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.block = false\r\n    this.vars.sample = ''\r\n    this.vars.pan = 0\r\n    this.vars.pitch = 1\r\n    this.vars.fade_in = 0\r\n    this.vars.stop_after = 0\r\n    this.vars.volume = 1\r\n    this.vars.duration = 'sound'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Create the sample\r\n    if (this.vars.sample !== '') {\r\n      // Retrieve the content from the file pool.\r\n      this._sample = this._runner._pool[this.syntax.eval_text(this.vars.sample, this.vars, false)]\r\n      this._sampler = new SamplerBackend(this.experiment, this._sample)\r\n      this._sampler.volume = this.vars.get(\"volume\")\r\n      this._sampler.duration = this.vars.get(\"duration\")\r\n      this._sampler.fade = this.vars.get(\"fade\")\r\n      this._sampler.pan = this.vars.get(\"pan\")\r\n      this._sampler.pitch = this.vars.get(\"pitch\")\r\n    } else {\r\n      // Show error message.\r\n      this._runner._debugger.addError('No sample has been specified in sampler: ' + this.vars.sample)\r\n    }\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    this.set_item_onset()\r\n    this.set_sri()\r\n    this._sampler.play()\r\n    this.process_response()\r\n  }\r\n}\r\n","import Sampler from './sampler.js'\r\n\r\n/**\r\n * Class representing a synth item.\r\n * @extends Sampler\r\n */\r\nexport default class Synth extends Sampler {\r\n  /**\r\n     * Create a synth item which create a synthessised sound wave.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} Ssript - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'A basic sound synthesizer'\r\n  }\r\n}\r\n","import Item from '../items/item.js'\r\nimport {\r\n  isNumber\r\n} from 'lodash'\r\n\r\n/**\r\n * Class representing a advanced delay item.\r\n * @extends Item\r\n */\r\nexport default class AdvancedDelay extends Item {\r\n  /**\r\n   * Create an advanced delay plugin item which delays for e specific duration the experiment.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Waits for a specified duration'\r\n    this._duration = -1\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n   * Gaussian distribution function.\r\n   * @param {Number} mean - The mean value.\r\n   * @param {Number} std - The standard deviation value.\r\n   * @return {Number} - result value\r\n   */\r\n  _random_gauss (mean, std) {\r\n    let u = 0\r\n    let v = 0\r\n    while (u === 0) u = Math.random()\r\n    while (v === 0) v = Math.random()\r\n    return Math.max(0, mean + Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v) * std)\r\n  }\r\n\r\n  /**\r\n   * Uniform distribution function.\r\n   * @param {Number} mean - The mean value.\r\n   * @param {Number} stdev - The standard deviation value.\r\n   * @return {Number} - result value\r\n   */\r\n  _random_uniform (mean, jitter) {\r\n    return Math.max(0, Math.floor(mean + Math.random() * jitter - jitter / 2))\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.vars.duration = 1000\r\n    this.vars.jitter = 0\r\n    this.vars.jitter_mode = 'Uniform'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    const duration = this.vars.get('duration')\r\n    const jitter = this.vars.get('jitter')\r\n    const jitter_mode = this.vars.get('jitter_mode')\r\n    if ((!isNumber(duration)) || (duration < 0)) {\r\n      this._runner._debugger.addError('Duration should be a positive numeric value in advanced_delay ' + this.name)\r\n    }\r\n    if (jitter_mode === 'Uniform') {\r\n      this._duration = this._random_uniform(duration, jitter)\r\n    } else if (jitter_mode === 'Std. Dev.') {\r\n      this._duration = this._random_gauss(duration, jitter)\r\n    } else {\r\n      this._runner._debugger.addError('Unknown jitter mode in advanced_delay ' + this.name)\r\n    }\r\n    if (this._duration < 0) {\r\n      this._duration = 0\r\n    }\r\n    this._duration = Number(this._duration)\r\n    this.experiment.vars.set('delay_' + this.name, this._duration)\r\n    this._runner._debugger.addMessage('delay for ' + this._duration + ' ms.')\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    this.set_item_onset(this.time())\r\n    if (this._duration > 0) {\r\n      this.sleep(this._duration)\r\n    } else {\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from '../items/item.js'\n\n/**\n * Base class for implementing HTML forms. These forms briefly hide the OSWeb\n * canvas and replace it by an HTML div. When the form is finished, OSWeb is\n * re-activated.\n * @extends Item\n */\nexport default class FormHTML extends Item {\n\n  constructor (experiment, name, script) {\n    super(experiment, name, script)\n    this._widgets = []  // avoid crashes when parsing widgets command\n    this.from_string(script)\n  }\n  \n  /**\n   * Generates an array of HTML elements that are appended to the form. Should\n   * be overridden in the actual form classes.\n   * @return {!Array<Object>} - an array of HTML elements\n   **/\n  formElements() {\n      return []\n  }\n  \n  /**\n   * Gives HTML code to be used for the form. Should be overridden in the\n   * actual form classes.\n   * @return {string}\n   **/\n  formHTML() {\n    return null\n  }\n  \n  /**\n   * Hides the form container and re-enables OSWeb. Also re-enablees the event\n   * listeners.\n   **/\n  resumeOSWeb () {\n      this._formContainer.style.display = 'none'\n      this._osweb.style.display = 'block'\n      window.addEventListener('keydown', runner._events._keyDownHandler)\n      window.addEventListener('keyup', runner._events._keyUpHandler)\n      this._complete()\n  }\n  \n  /**\n   * Emulates the 'gray' which is applied to buttons.\n   **/\n  applyTheme (element, setBackground=false) {\n    if (this.vars.get('_theme') !== 'gray')\n      return\n    if (setBackground)\n      element.style.backgroundColor = '#888a85'\n    element.style.borderTop = 'solid 1px #babdb6'\n    element.style.borderLeft = 'solid 1px #555753'\n    element.style.borderRight = 'solid 1px #555753'\n    element.style.borderBottom = 'solid 1px #555753'\n  }\n  \n  /**\n   * Returns an HTML element. If inherit is specified\n   * @param {string} type - an HTML element type, such as 'div'\n   * @param {string} html - the inner HTML content\n   * @param {number} height - proportion of full height\n   * @param {number} width - proportion of full height\n   * @param {boolean} inherit - Indicates whether font style should be\n   *     inherited from the container element.\n   * @return {Object} - an HTML element\n   **/\n  element (type, html, height, width=1, inherit=true) {\n    const element = document.createElement(type)\n    if (typeof html !== \"undefined\") element.innerHTML = html\n    if (typeof height !== \"undefined\") element.style.height = this._paddedHeight * height - 40 + 'px'\n    if (typeof width !== \"undefined\")element.style.width = this._paddedWidth * width - 40 + 'px'\n    element.style.padding = '10px'\n    element.style.margin = '10px'\n    if (inherit) {\n      element.style.fontFamily = 'inherit'\n      element.style.fontSize = 'inherit'\n      element.style.fontWeight = 'inherit'\n      element.style.textDecoration = 'inherit'\n      element.style.color = 'inherit'\n      element.style.backgroundColor = 'inherit'\n    }\n    return element\n  }\n  \n  /**\n   * Builds a container div with a checkbox/ radio button and a label next to\n   * it. See element() for explanation of parameters.\n   * @param {string} boxtype - radio/ checkbox\n   * @param {string} label - a text label\n   * @param {number} height\n   * @param {number} width\n   * @param {boolean} inherit\n   * @return {!Array<Object>}\n   **/\n  checkbox (boxType, label, height, width=1, inherit=true) {\n    const box = this.element('input', null, null, null)\n    box.type = boxType\n    box.value = label\n    const labelElement = this.element('label', label, null, null)\n    const container = this.element('div', null, height, width, inherit)\n    container.style.textAlign = 'left'\n    container.append(box)\n    container.append(labelElement)\n    return [container, box]\n  }\n  \n  /**\n   * Maps the font family onto names that browsers understand.\n   * @returns {string}\n   **/\n  get _fontFamily () {\n    const fontFamily = this.vars.get('font_family')\n    if (fontFamily === 'sans')\n      return 'sans-serif'\n    if (fontFamily === 'mono')\n      return 'monospace'\n    return fontFamily\n  }\n  \n  /**\n   * Gets the padding for all four sides based on the margins variable.\n   * @returns {!Array<number>}\n   **/\n  get _padding () {\n    if (typeof this._cached_padding === \"undefined\")\n      this._cached_padding = String(this.vars.get('margins')).split(';').map(Number)\n    return this._cached_padding\n  }\n  \n  /**\n   * Gets the width that takes into account the padding\n   * @returns {number}\n   **/\n  get _paddedWidth () {\n    if (typeof this._width === \"undefined\") {\n      const [top, right, bottom, left] = this._padding\n      this._width = this.vars.get('width') - right - left\n    }\n    return this._width\n  }\n  \n  /**\n   * Gets the height that takes into account the padding\n   * @returns {number}\n   **/\n  get _paddedHeight () {\n    if (typeof this._height === \"undefined\") {\n      const [top, right, bottom, left] = this._padding\n      this._height = this.vars.get('height') - top - bottom\n    }\n    return this._height\n  }\n  \n  run () {\n    // The main container that contains the form elements\n    this._customForm = document.createElement('div')\n    this._customForm.style.color = this.vars.get('foreground')\n    this._customForm.style.fontSize = this.vars.get('font_size') + 'px'\n    this._customForm.style.fontFamily = this._fontFamily\n    if (this.vars.get('font_bold')=== 'yes')\n      this._customForm.style.fontWeight = 'bold'\n    if (this.vars.get('font_italic')=== 'yes')\n      this._customForm.style.fontStyle = 'italic'\n    if (this.vars.get('font_underline') === 'yes')\n      this._customForm.style.textDecoration = 'underline'\n    // Convert margins from '50;50;50;50' to '50px 50px 50px 50px'\n    this._customForm.style.padding = this._padding.join('px ') + 'px'\n    this._customForm.style.width = this._paddedWidth + 'px'\n    this._customForm.style.height = this._paddedHeight + 'px'\n    this._customForm.style.textAlign = 'center'\n    for (const element of this.formElements())\n      this._customForm.append(element)\n    const html = this.formHTML()\n    if (html !== null)\n      this._customForm.innerHTML = html\n    // A container that centers the form\n    this._formContainer = document.createElement('div')\n    this._formContainer.style.backgroundColor = this.vars.get('background')\n    this._formContainer.style.justifyContent = 'center'\n    this._formContainer.style.alignItems = 'center'\n    this._formContainer.style.display = 'flex'\n    this._formContainer.style.height = '100%'\n    this._formContainer.append(this._customForm)\n    this._osweb = document.getElementsByClassName('justify-content-center')[0]\n    document.body.append(this._formContainer)\n    this._osweb.style.display = 'none';\n    window.removeEventListener('keydown', runner._events._keyDownHandler)\n    window.removeEventListener('keyup', runner._events._keyUpHandler)\n  }\n}\n","import FormHTML from './form_html.js'\n\n/**\n * Class representing a form consent item.\n * @extends FormHTML\n */\nexport default class FormConsent extends FormHTML {\n\n  onDecline () {\n    alertify.error(this.vars.get('decline_message'))\n  }\n  \n  onAccept () {\n    if (this._checkbox.checked) {\n      this.resumeOSWeb()\n      return\n    }\n    this.onDecline()\n  }\n\n  formElements () {\n    const title = this.element('h1', this.vars.get('form_title'), 1 / 7)\n    const text = this.element('p', this.vars.get('form_text'), 4 / 7)\n    text.style.textAlign = 'left'\n    const [checkboxContainer, checkbox] = this.checkbox(\n      'checkbox', this.vars.get('checkbox_text'), 1 / 7)\n    this._checkbox = checkbox\n    const buttonContainer = this.element('div', null, 1 / 7)\n    const acceptButton = this.element('input', null, null, 1 / 3)\n    acceptButton.value = this.vars.get('accept_text')\n    acceptButton.type = 'button'\n    acceptButton.onclick = this.onAccept.bind(this)\n    const declineButton = this.element('input', null, null, 1 / 3)\n    declineButton.value = this.vars.get('decline_text')\n    declineButton.type = 'button'\n    declineButton.onclick = this.onDecline.bind(this)\n    buttonContainer.append(acceptButton)\n    buttonContainer.append(declineButton)\n    this.applyTheme(acceptButton, true)\n    this.applyTheme(declineButton, true)\n    return [title, text, checkboxContainer, buttonContainer]\n  }\n}\n","import FormHTML from './form_html.js'\n\n/**\n * Class representing custom HTML code\n * @extends FormHTML\n */\nexport default class InlineHTML extends FormHTML {\n\n  reset() {\n    super.reset()\n    this.vars.html = ''\n  }\n\n  /**\n   * @return {string} - the HTML content\n   **/\n  formHTML() {\n    return this.vars.html\n  }\n  \n  /**\n   * Sets experimental variables based on the name properties of input elements\n   * and then resumes OSWeb.\n   **/\n  _submitForm() {\n    for (const input of document.getElementsByTagName('input'))\n      this.experiment.vars.set(input.name, input.value)\n    this.resumeOSWeb()\n  }\n  \n  run () {\n    super.run()\n    // Disable the submit action of form elements, in case the user has added\n    // (unnecessary) form tags\n    for (const form of document.getElementsByTagName('form'))\n      form.onsubmit = (() => false)\n    // Bind input elements of type submit to the custom submit action\n    for (const input of document.getElementsByTagName('input')) {\n      if (input.type === 'submit')\n        input.onclick = this._submitForm.bind(this)\n    }\n  }\n\n}\n","import FormHTML from './form_html.js'\n\n/**\n * Class representing a form-mulitple-choice item.\n * @extends FormHTML\n */\nexport default class FormMultipleChoice extends FormHTML {\n\n  resumeOSWeb () {\n    const values = []\n    for (const box of this._boxes) {\n        if (box.checked)\n            values.push(box.value)\n    }\n    this.experiment.vars.set(\n        this.vars.form_var,\n        (values.length > 0) ? values.join(';') : 'no'\n    )\n    super.resumeOSWeb()\n  }\n  \n  _boxClicked () {\n    if (!this._hasOkButton)\n      this.resumeOSWeb()\n  }\n\n  formElements () {\n    this._hasOkButton = (this.vars.get('advance_immediately') === 'no' || boxType === 'checkbox')\n    const elements = []\n    this._boxes = []\n    // Create an array of non-empty options\n    const options = String(this.vars.get('options')).split('\\n').filter(\n        option => option .trim().length > 0)\n    const boxType = (this.vars.get('allow_multiple') === 'no') ? 'radio' : 'checkbox'\n    const elementHeight = 1 / (options.length + (this._hasOkButton ? 3 : 2))\n    const title = this.element('h1', this.vars.get('form_title'), elementHeight, 1)\n    elements.push(title)\n    const question = this.element('p', this.vars.get('question'), elementHeight, 1)\n    elements.push(question)\n    for (const option of options) {\n      const [container, box] = this.checkbox(boxType, option, elementHeight)\n      box.name = 'options'\n      box.onclick = this._boxClicked.bind(this)\n      this._boxes.push(box)\n      elements.push(container)\n    }\n    if (this._hasOkButton) {\n      const okButton = this.element('input', null, elementHeight, 1 / 3)\n      okButton.style.width = '100%'\n      this.applyTheme(okButton, true)\n      okButton.type = 'button'\n      okButton.value = this.vars.get('button_text')\n      okButton.onclick = this.resumeOSWeb.bind(this)\n      elements.push(okButton)\n    }\n    return elements\n  }\n}\n","import FormHTML from './form_html.js'\n\n/**\n * Class representing a form text display item.\n * @extends FormHTML\n */\nexport default class FormTextDisplay extends FormHTML {\n\n  formElements () {\n    const title = this.element('h1', this.vars.get('form_title'), 1 / 6)\n    const text = this.element('p', this.vars.get('form_text'), 4 / 6)\n    text.style.textAlign = 'left'\n    const okButton = this.element('input', null, 1 / 6, 1 / 3)\n    okButton.type = 'button'\n    okButton.value = this.vars.get('ok_text')\n    okButton.onclick = this.resumeOSWeb.bind(this)\n    this.applyTheme(okButton, true)\n    return [title, text, okButton]\n  }\n}\n","import FormHTML from './form_html.js'\n\n/**\n * Class representing a form text input item.\n * @extends FormHTML\n */\nexport default class FormTextInput extends FormHTML {\n\n  /**\n   * Is called when a key is pressed in the textarea, and accepts the form\n   * input when return is pressed by setting the response variable to the\n   * value of the textarea.\n   **/\n  checkReturnPress (event) {\n    if (event.keyCode !== 13)\n      return\n    this.experiment.vars.set(this.vars.form_var, this._textArea.value)\n    this.resumeOSWeb()\n  }\n\n  formElements () {\n    const title = this.element('h1', this.vars.get('form_title'), 1 / 8)\n    const question = this.element('p', this.vars.get('form_question'), 1 / 8)\n    question.style.textAlign = 'left'\n    this._textArea = this.element('textarea', null, 6 / 8)\n    this.applyTheme(this._textArea, false)\n    this._textArea.onkeypress = this.checkReturnPress.bind(this)\n    return [title, question, this._textArea]\n  }\n}\n","import { Texture, Sprite } from 'pixi.js'\nimport {\n  constants\n} from '../system/constants.js'\n\n/** Class representing a video. */\nexport default class Video {\n  /**\n   * Create a video object which controls the video device.\n   * @param {Object} experiment - The experiment to which the video belongs.\n   * @param {String} src - The video source name.\n   */\n  constructor (experiment, source) {\n    // Set class parameter properties.\n    this._experiment = experiment\n\n    // Set the class public properties.\n    this.audio = true\n    this.duration = 'keypress'\n    this.full_screen = false\n\n    // Set the class pivate properties.\n    this._playing = false\n    this._script = null\n\n    // Create the video instance\n    if (source !== null) {\n      // Set the video object.\n      this._video = source.data\n\n      // create a video texture from the video.\n      this._texture = Texture.from(source.data)\n\n      // create a new Sprite using the video texture (yes it's that easy)\n      this._videoSprite = new Sprite(this._texture)\n      this._video.pause()\n\n      // Set the event anchors.\n      this._video.onended = this._experiment._runner._events._videoEnded.bind(this)\n      this._video.onplay = this._experiment._runner._events._videoPlay.bind(this)\n    }\n  }\n\n  /** Update the video rendering. */\n  _update () {\n    if (this._playing === true) {\n      // Update the renderer.\n      this._experiment._runner._renderer.render(this._videoSprite)\n\n      // execute script.\n      if ((this._script !== null) && (this._event_handler_always === true)) {\n        // Start the parser\n        this._experiment._runner._pythonParser._run(null, this._script)\n      }\n    }\n  }\n\n  /** Play the actual video. */\n  play () {\n    // Enable the video playing.\n    this._video.play()\n\n    // Set the volume\n    this._video.volume = (this.audio === true) ? 1 : 0\n\n    // Check if the video must be scaled.\n    if (this.full_screen === true) {\n      this._videoSprite.width = this._experiment._runner._renderer.width\n      this._videoSprite.height = this._experiment._runner._renderer.height\n    }\n\n    // Render the first frame.\n    this._experiment._runner._renderer.render(this._videoSprite)\n\n    // Set the play toggle.\n    this._playing = true\n  }\n\n  /** Stop playing the video. */\n  stop () {\n    // Pause the actual sound.\n    this._video.pause()\n    this._playing = false\n  }\n\n  /** Set the blocking of the sound. */\n  wait () {\n    this._experiment._runner._events._run(-1, constants.RESPONSE_VIDEO, [])\n  }\n}\n","import Item from '../items/item.js'\nimport Video from '../backends/video.js'\n\n/**\n * Class representing a video player item.\n * @extends Item\n */\nexport default class MediaPlayer extends Item {\n  /**\n     * Create a video player plugin item which plays videos.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script)\n\n    // Define and set the public properties.\n    this.description = 'A video player'\n\n    // Define and set the private properties.\n    this._script_executed = false\n\n    // Process the script.\n    this.from_string(script)\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    if (this._script_executed === false) {\n      // Stop the video playing.\n      this._video_player.stop()\n\n      // execute script.\n      if ((this._video_player._script !== null) && (this.vars.get('event_handler_trigger') === 'on keypress')) {\n        // Set the execute toggle.\n        this._script_executed = true\n\n        // Execute the script code.\n        this._runner._pythonParser._run(this, this._video_player._script)\n      } else {\n        // Inherited.\n        super._complete()\n      }\n    } else {\n      // Inherited.\n      super._complete()\n    }\n  }\n\n  /** Implements the update phase of an item. */\n  _update (response) {\n    // Update the video canvas.\n    this._video_player._update()\n  }\n\n  /** Implements the prepare phase of an item. */\n  prepare () {\n    // Opens the video file for playback.\n    this._video = this.experiment.pool[this.vars.get('video_src')]\n    this._video_player = new Video(this.experiment, this._video)\n\n    // Set the inline code options.\n    if (this.vars.event_handler !== '') {\n      this._video_player._script = this._runner._pythonParser._parse(this.vars.event_handler)\n    }\n    this._video_player._event_handler_always = (this.vars.event_handler_trigger === 'after every frame')\n\n    // Set the audio option.\n    this._video_player.audio = (this.vars.get('playaudio') === 'yes')\n\n    // Set the full screen option (if enabled).\n    this._video_player.full_screen = (this.vars.get('resizeVideo') === 'yes')\n\n    // Adjust the duration parameter from sound to video if defined.\n    if (this.vars.duration === 'sound') {\n      this.vars.duration = 'video'\n    }\n    this._video_player.duration = this.vars.duration\n\n    // Inherited.\n    super.prepare()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Set the onset time.\n    this.set_item_onset()\n    this.set_sri()\n\n    // Start the video player.\n    this._video_player.play()\n\n    // Start response processing.\n    this.process_response()\n  }\n}\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a notepad item.\r\n * @extends Item\r\n */\r\nexport default class Notepad extends Item {\r\n  /**\r\n     * Create a notepad plugin item which only shows some text in the console.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'A simple notepad to document your experiment. This plug-in does nothing.'\r\n\r\n    // Read the item definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Complete the current cycle.\r\n    this._complete()\r\n  }\r\n}\r\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a repeat cycle item.\r\n * @extends Item\r\n */\r\nexport default class RepeatCycle extends Item {\r\n  /**\r\n     * Create a repeat cycle item which repeat a cycle within a loop.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Optionally repeat a cycle from a loop'\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Prepare the condtion for which the repeat_cycle must fire.\r\n    const condition = this.syntax.compile_cond(this.vars.get('condition'))\r\n    // Run item only one time.\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      if (this.experiment._runner._pythonWorkspace._eval(condition) === true) {\r\n        this.experiment.vars.repeat_cycle = 1\r\n      }\r\n\r\n      // Complete the current cycle.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a reset feedback item.\r\n * @extends Item\r\n */\r\nexport default class ResetFeedback extends Item {\r\n  /**\r\n     * Create a reset feedback  item which resets the feedback values.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Resets the feedback variables, such as \"avg_rt\" and \"acc\"'\r\n\r\n    // Read the item definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Run item only one time.\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      // Run the item.\r\n      this.experiment.reset_feedback()\r\n\r\n      // Complete the current cycle.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import MouseResponse from '../items/mouse_response.js'\n\n/**\n * Class representing a reset feedback item.\n * @extends Item\n */\nexport default class TouchResponse extends MouseResponse {\n  /**\n     * Create a reset feedback  item which resets the feedback values.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script)\n\n    // Define and set the public properties.\n    this.description = 'A grid-based response item, convenient for touch screens'\n  }\n\n  /** Resets all item variables to their default value. */\n  reset () {\n    super.reset()\n    this.vars.set('allowed_responses', null)\n    this.vars._ncol = 2\n    this.vars._nrow = 1\n  }\n\n  /** Implements the prepare phase of an item. */\n  prepare () {\n    // Temp hack\n    this.experiment.vars.correct = -1\n    // Inherited.\n    super.prepare()\n  }\n\n  /**\n     * Process a mouse click response.\n     * @param {Object} pRetval - The mouse response to process.\n     */\n  process_response_mouseclick (retval) {\n    this.experiment._start_response_interval = this.sri\n    this.experiment._end_response_interval = retval.rtTime\n    this.set_mouse_coordinates(retval.event.clientX, retval.event.clientY)\n    // Calulate the row, column and cell.\n    this.col = Math.floor(\n      (this.experiment.vars.cursor_x + this.experiment.vars.width / 2) /\n        (this.experiment.vars.width / this.vars._ncol)\n    )\n    this.row = Math.floor(\n      (this.experiment.vars.cursor_y + this.experiment.vars.height / 2) /\n        (this.experiment.vars.height / this.vars._nrow)\n    )\n    this.cell = this.row * this.vars._ncol + this.col + 1\n    this.experiment.vars.response = this.cell\n    this.synonyms = [this.experiment.vars.get('response').toString()]\n    this.response_bookkeeping()\n  }\n}\n","/** Class representing a general visual element. */\r\nexport default class BaseElement {\r\n  /**\r\n   * Create a log object which stores all the response data.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   * @param {Object} defaults - The default property values of the visual element.\r\n   */\r\n  constructor (sketchpad, script, defaults) {\r\n    // Set class parameter properties.\r\n    this.canvas = sketchpad.canvas\r\n    this.defaults = defaults\r\n    this.defaults.show_if = 'always'\r\n    this.defaults.z_index = 0\r\n    this.experiment = sketchpad.experiment\r\n    this.fix_coordinates = (sketchpad.vars.uniform_coordinates === 'yes')\r\n    this.name = sketchpad.name\r\n    this.only_keywords = false\r\n    this.pool = sketchpad.experiment.pool\r\n    this.properties = {}\r\n    this.sketchpad = sketchpad\r\n    this.syntax = sketchpad.syntax\r\n    this.vars = sketchpad.vars\r\n\r\n    // Set the private properties.\r\n    this._properties = null\r\n\r\n    // Read the definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n   * Parses the element from a definition string.\r\n   *\r\n   * @param {String} script The definition script line to be parsed.\r\n   * @memberof BaseElement\r\n   */\r\n  from_string (script) {\r\n    this.properties = this.sketchpad.syntax.parse_cmd(script)[2]\r\n  }\r\n\r\n  /**\r\n   * Determines the drawing order of the elements.\r\n   *\r\n   * @returns {Number}\r\n   * @memberof BaseElement\r\n   */\r\n  z_index () {\r\n    return this.properties.z_index\r\n  }\r\n\r\n  /**\r\n   * Calculate the dynamic elements within properties.\r\n   *\r\n   * @memberof BaseElement\r\n   */\r\n  eval_properties () {\r\n    // Evaluates all properties and return them.\r\n    const xc = this.experiment.vars.width / 2\r\n    const yc = this.experiment.vars.height / 2\r\n\r\n    this._properties = Object.entries(this.properties).reduce((result, [prop, val]) => {\r\n      let value = this.syntax.eval_text(val, this.vars, false)\r\n\r\n      if (['x', 'x1', 'x2'].includes(prop)) {\r\n        value = Math.round(Number(value) + xc)\r\n      }\r\n\r\n      if (['y', 'y1', 'y2'].includes(prop)) {\r\n        value = Math.round(Number(value) + yc)\r\n      }\r\n\r\n      result[prop] = value\r\n      return result\r\n    }, {})\r\n  }\r\n\r\n  /**\r\n   * Determines whether the element should be shown, based on the show-if statement.\r\n   *\r\n   * @returns {Boolean} Returns true if the element must be shown.\r\n   * @memberof BaseElement\r\n   */\r\n  is_shown () {\r\n    // Set the self of the current workspace.\r\n    this.experiment.python_workspace.self = this.sketchpad\r\n\r\n    // Determines whether the element should be shown, based on the show-if statement.\r\n    return this.experiment.python_workspace._eval(this.experiment.syntax.compile_cond(this.properties.show_if))\r\n  }\r\n\r\n  /**\r\n   * Draws the element\r\n   *\r\n   * @memberof BaseElement\r\n   */\r\n  draw () {\r\n    // Calculate the dynamic properties.\r\n    this.eval_properties()\r\n  }\r\n}\r\n","// Control elements\r\nimport Loop from '../items/loop.js'\r\nimport Sequence from '../items/sequence.js'\r\nimport Coroutines from '../items/coroutines.js'\r\n// Slides\r\nimport Sketchpad from '../items/sketchpad.js'\r\nimport Feedback from '../items/feedback.js'\r\n// Scripts\r\nimport InlineScript from '../items/inline_script.js'\r\nimport InlineJavaScript from '../items/inline_javascript.js'\r\n// Responses\r\nimport KeyboardResponse from '../items/keyboard_response.js'\r\nimport MouseResponse from '../items/mouse_response'\r\nimport Logger from '../items/logger.js'\r\n// Audio\r\nimport Sampler from '../items/sampler.js'\r\nimport Synth from '../items/synth.js'\r\n// Plugins\r\nimport AdvancedDelay from '../items/advanced_delay.js'\r\nimport FormConsent from '../items/form_consent.js'\r\nimport InlineHTML from '../items/inline_html.js'\r\nimport FormMultipleChoice from '../items/form_multiple_choice.js'\r\nimport FormTextDisplay from '../items/form_text_display.js'\r\nimport FormTextInput from '../items/form_text_input.js'\r\nimport MediaPlayer from '../items/media_player.js'\r\nimport Notepad from '../items/notepad.js'\r\nimport RepeatCycle from '../items/repeat_cycle.js'\r\nimport ResetFeedback from '../items/reset_feedback.js'\r\nimport TouchResponse from '../items/touch_response.js'\r\n// Elements\r\nimport Arrow from '../elements/arrow.js'\r\nimport Circle from '../elements/circle.js'\r\nimport Ellipse from '../elements/ellipse.js'\r\nimport Fixdot from '../elements/fixdot.js'\r\nimport Gabor from '../elements/gabor.js'\r\nimport ImageElement from '../elements/image.js' // Image is a reserved JS class\r\nimport Line from '../elements/line.js'\r\nimport Noise from '../elements/noise.js'\r\nimport Rect from '../elements/rect.js'\r\nimport TextLine from '../elements/textline.js'\r\n\r\n\r\n/**\r\n * this variable maps the string representation of each element to the corresponding\r\n * class names.\r\n * @type {Object}\r\n */\r\nexport const itemClasses = {\r\n  // Items\r\n  loop: Loop,\r\n  sequence: Sequence,\r\n  sketchpad: Sketchpad,\r\n  feedback: Feedback,\r\n  inline_script: InlineScript,\r\n  inline_javascript: InlineJavaScript,\r\n  inline_html: InlineHTML,\r\n  keyboard_response: KeyboardResponse,\r\n  mouse_response: MouseResponse,\r\n  logger: Logger,\r\n  sampler: Sampler,\r\n  synth: Synth,\r\n  coroutines: Coroutines,\r\n  advanced_delay: AdvancedDelay,\r\n  form_consent: FormConsent,\r\n  form_multiple_choice: FormMultipleChoice,\r\n  form_text_display: FormTextDisplay,\r\n  form_text_input: FormTextInput,\r\n  media_player_mpy: MediaPlayer,\r\n  notepad: Notepad,\r\n  repeat_cycle: RepeatCycle,\r\n  reset_feedback: ResetFeedback,\r\n  touch_response: TouchResponse,\r\n  // Elements\r\n  arrow: Arrow,\r\n  circle: Circle,\r\n  ellipse: Ellipse,\r\n  fixdot: Fixdot,\r\n  gabor: Gabor,\r\n  image: ImageElement,\r\n  line: Line,\r\n  noise: Noise,\r\n  rect: Rect,\r\n  textline: TextLine,\r\n}\r\n\r\nexport const constants = {\r\n  // Type of used collection mode.\r\n  PRESSES_ONLY: 1,\r\n  RELEASES_ONLY: 2,\r\n  PRESSES_AND_RELEASES: 3,\r\n\r\n  // Type of response used.\r\n  RESPONSE_NONE: 0,\r\n  RESPONSE_DURATION: 1,\r\n  RESPONSE_KEYBOARD: 2,\r\n  RESPONSE_MOUSE: 3,\r\n  RESPONSE_SOUND: 4,\r\n  RESPONSE_AUTOKEYBOARD: 5,\r\n  RESPONSE_AUTOMOUSE: 6,\r\n\r\n  // Running status of an item.\r\n  STATUS_NONE: 0,\r\n  STATUS_BUILD: 1,\r\n  STATUS_INITIALIZE: 2,\r\n  STATUS_EXECUTE: 3,\r\n  STATUS_FINALIZE: 4,\r\n\r\n  // Definition of the event loop status contstants.\r\n  TIMER_NONE: 0,\r\n  TIMER_WAIT: 1,\r\n  TIMER_EXIT: 2,\r\n  TIMER_PAUSE: 3,\r\n  TIMER_RESUME: 4,\r\n  TIMER_DONE: 5,\r\n  TIMER_BREAK: 6,\r\n  TIMER_ERROR: 7,\r\n  TIMER_FORM: 8\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Arrow extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.arrow_body_length = 0.8\r\n    defaults.arrow_body_width = 0.5\r\n    defaults.arrow_head_width = 30\r\n    defaults.fill = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x1 = null\r\n    defaults.y1 = null\r\n    defaults.x2 = null\r\n    defaults.y2 = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.background_color = this._properties.color\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the arrow element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.arrow(this._properties.x1, this._properties.y1,\r\n      this._properties.x2, this._properties.y2, this._properties.arrow_body_width,\r\n      this._properties.arrow_body_length, this._properties.arrow_head_width,\r\n      styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Circle extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.fill = 0\r\n    defaults.penwidth = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.r = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the circle element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.circle(this._properties.x, this._properties.y,\r\n      this._properties.r, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Ellipse extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    const defaults = {\r\n      fill: 1,\r\n      color: sketchpad.vars.get('foreground'),\r\n      penwidth: 1,\r\n      x: null,\r\n      y: null,\r\n      w: null,\r\n      h: null\r\n    }\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.background_color = this._properties.color\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the ellipse element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.ellipse(Number(this._properties.x),\r\n      Number(this._properties.y), Number(this._properties.w),\r\n      Number(this._properties.h), styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Fixdot extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.style = 'default'\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles(this.sketchpad)\r\n    styles.color = this._properties.color\r\n    // Draw the fixdot element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.fixdot(this._properties.x, this._properties.y,\r\n      this._properties.style, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Gabor extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.bgmode = 'avg'\r\n    defaults.color1 = 'white'\r\n    defaults.color2 = 'black'\r\n    defaults.env = 'gaussian'\r\n    defaults.freq = 1\r\n    defaults.orient = 0\r\n    defaults.phase = 0\r\n    defaults.size = 96\r\n    defaults.stdev = 12\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the gabor element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.gabor(this._properties.x, this._properties.y,\r\n      this._properties.orient, this._properties.freq, this._properties.env,\r\n      this._properties.size, this._properties.stdev, this._properties.phase,\r\n      this._properties.color1, this._properties.color2, this._properties.bgmode)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an image element.\r\n * @extends BaseElement\r\n */\r\nexport default class ImageElement extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    const defaults = {}\r\n    defaults.center = 1\r\n    defaults.file = null\r\n    defaults.scale = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n\r\n    // Set the class private properties.\r\n    this._file = null\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the image element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.image(this._properties.file, this._properties.center,\r\n      this._properties.x, this._properties.y, this._properties.scale)\r\n  }\r\n}\r\n","/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nimport BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\nexport default class Line extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x1 = null\r\n    defaults.y1 = null\r\n    defaults.x2 = null\r\n    defaults.y2 = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.color = this._properties.color\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the line element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.line(this._properties.x1, this._properties.y1,\r\n      this._properties.x2, this._properties.y2, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Noise extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color1 = 'white'\r\n    defaults.color2 = 'black'\r\n    defaults.env = 'gaussian'\r\n    defaults.size = 96\r\n    defaults.stdev = 12\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.bgmode = 'avg'\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the noise element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.noise(this._properties.x, this._properties.y,\r\n      this._properties.env, this._properties.size, this._properties.stdev,\r\n      this._properties.color1, this._properties.color2, this._properties.bgmode)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Rect extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.fill = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.w = null\r\n    defaults.h = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.fill = this._properties.fill\r\n    styles.color = this._properties.color\r\n    styles.background_color = this._properties.color\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the rectangle element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.rect(this._properties.x, this._properties.y,\r\n      this._properties.w, this._properties.h, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing a textline element.\r\n * @extends BaseElement\r\n */\r\nexport default class Textline extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.center = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.font_family = sketchpad.vars.get('font_family')\r\n    defaults.font_size = sketchpad.vars.get('font_size')\r\n    defaults.font_bold = sketchpad.vars.get('font_bold')\r\n    defaults.font_italic = sketchpad.vars.get('font_italic')\r\n    defaults.html = 'yes'\r\n    defaults.text = null\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n    const text = this._properties.text\r\n    // Create a styles object containing style information\r\n    const styles = new Styles()\r\n    styles.color = this._properties.color\r\n    styles.font_family = this._properties.font_family\r\n    styles.font_size = Number(this._properties.font_size)\r\n    styles.font_italic = (this._properties.font_italic === 'yes')\r\n    styles.font_bold = (this._properties.font_bold === 'yes')\r\n    styles.font_underline = (this._properties.font_underline === 'yes')\r\n\r\n    this.sketchpad.canvas.text(text, this._properties.center,\r\n      this._properties.x, this._properties.y, this._properties.html,\r\n      styles)\r\n  }\r\n}\r\n","import {\n  constants\n} from './constants.js'\n\nimport isFunction from 'lodash/isFunction'\nimport isPlainObject from 'lodash/isPlainObject'\n\n/** Class representing a debugger. */\nexport default class Debugger {\n  /**\n   * Create a debugger which handles errors and messahes during an session.\n   * @param {Object} runner - The runner class to which the debugger belongs.\n   */\n  constructor (runner) {\n    // Create and set private properties.\n    this._runner = runner // Parent runner attached to the debugger.\n\n    // Create and set public properties.\n    this.enabled = true // Enable the debugger.\n    this.error = false // True if an error occured.\n    this.messageLog = [] // Arraty with alle log messages.\n  }\n\n  /** Initialize the debugger object class. */\n  _initialize () {\n    // Clear the log.\n    this.messageLog = []\n  }\n\n  /** Finalize the debugger object class. */\n  _finalize () {\n    // If enabled push the messages to the javascript console.\n    if (this.enabled === true) {\n      console.log(this.messageLog)\n    }\n\n    // Clear the log.\n    this.messageLog = []\n  }\n\n  /**\n   * Show a fatal error to the user and stops the running of the experiment.\n   * @param {String} errorText - The error shown to the user.\n   */\n  addError (errorText, context = null) {\n    // Set the error flag.\n    this.error = true\n\n    // Set status of the event system to break.\n    this._runner._events.state = constants.TIMER_ERROR\n\n    // Throw the exception.\n    console.error('OSWeb has stopped running due to a fatal error.')\n    console.error(errorText)\n\n    if (isPlainObject(context)) {\n      if (context.notify === true && isFunction(this._runner._onError)) {\n        const url = context.url || null\n        this._runner._onError(errorText, url)\n      }\n    }\n  }\n\n  /**\n   * Add a message to the debugger list.\n   * @param {String} message - The message to be added to the list.\n   */\n  addMessage (messageText) {\n    // Push the error message to the log.\n    this.messageLog.push(messageText)\n\n    if (this.enabled === true) {\n      console.log(messageText)\n    }\n  }\n\n  /**\n   * Mirror function for the AddMessage method.\n   * @param {String} messageText - The message to be added to the list.\n   */\n  msg (messageText) {\n    // Push the error message to the log.\n    this.addMessage(messageText)\n  }\n}\n","import {\n  isNumber\n} from 'lodash'\n\n/** Class representing a convertor. */\nexport default class Convertor {\n  /**\n   * Create a convertor which converts an osexp script to a JSON object stucture.\n   * @param {Object} runner - The runner class to which the debugger belongs.\n   */\n  constructor (runner) {\n    // Create and set private properties.\n    this.item = null // Current item to process.\n    this.runner = runner // Parent runner attached to the debugger.\n    this.variable = null // Container for global multiline variable.\n    this.variabelName = '' // Name of a global multiline variable.\n  }\n\n  /**\n   * Strip additional quotes for value token.\n   * @param {String} value - The value to check and (optional) convert.\n   * @return {String} - The converted value.\n   */\n  parseValue (value) {\n    // Strip additional quotes.\n    if ((value.length >= 4) && (value.substr(0, 1) === '\"') && (value.substr(value.length - 1, 1) === '\"')) {\n      return value.substr(1, value.length - 2)\n    } else {\n      return value\n    }\n  }\n\n  /**\n   * Process a single line within the osexp script.\n   * @param {String} line - The string line to parse.\n   */\n  parseLine (line) {\n    // Split a line into items and process them.\n    var items = line.match(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g)\n\n    // if defined process a single line.\n    if (items !== null) {\n      // Select action on first token.\n      switch (items[0]) {\n      case 'define':\n        // Process a define statement.\n        this.item = this.runner._itemStore.newItem(items[1], items[2], '')\n        break\n      case 'draw':\n        // Create the element.\n        var element = this.runner._itemStore._newElementClass(items[1], this.item, '')\n\n        // Split the properties and process them.\n        for (var i = 2; i < items.length; i++) {\n          var pair = items[i].split('=', 2)\n          element.properties[pair[0]] = pair[1]\n        }\n\n        // Add the element to the item.\n        this.item.elements.push(element)\n        break\n      case 'run':\n        if (this.item.type === 'sequence') {\n          // Process a run statement for a sequence item.\n          this.item.items.push({\n            item: items[1],\n            cond: items[2]\n          })\n        } else {\n          // Process a run statement for a loop item.\n          this.item.vars.item = items[1]\n        }\n        break\n      case 'set':\n        // Process a set statement.\n        this.item.vars[items[1]] = this.parseValue(items[2])\n        break\n      case 'setcycle':\n        // Process a setcycle statement.\n        var value = this.parseValue(items[3])\n\n        // Convert the python expression to javascript.\n        if (value[0] === '=') {\n          // Parse the python statement.\n          value = this.runner._pythonParser._prepare(value.slice(1))\n          if (value !== null) {\n            value = value.body[0]\n          }\n        } else {\n          // Check if the value is numeric\n          value = isNumber(value) ? Number(value) : value\n        }\n\n        // Set the matrix with the proper values.\n        if (this.item.orig_matrix[items[1]] === undefined) {\n          this.item.orig_matrix[items[1]] = {}\n        }\n        this.item.orig_matrix[items[1]][items[2]] = value\n        break\n      case 'widget':\n        // Remove the widget token from the list.\n        items.shift()\n\n        // Add the element to the item.\n        this.item._widgets.push(items)\n        break\n      default:\n        // check for multiline variables.\n        if ((items[0].length > 5) && (items[0].substr(0, 2) === '__') && (items[0].substr(-2) === '__')) {\n          // Start of end of the multiline variable.\n          if (items[0] === '__end__') {\n            this.item.vars[this.variableName] = this.variable\n            this.variable = null\n          } else {\n            this.variableName = items[0].substr(2, items[0].length - 4)\n            this.variable = []\n          }\n        } else {\n          if (this.variable !== null) {\n            this.variable.push(line)\n          }\n        }\n      }\n    } else {\n      if (this.variable !== null) {\n        this.variable.push('')\n      } else {\n        // Return to default level.\n        this.item = this.runner._experiment\n      }\n    }\n  }\n\n  /** Initialize the debugger object class. */\n  parseScript (script) {\n    // Set first item.\n    this.item = this.runner._experiment\n\n    // Split the script into lines.\n    if (script !== null) {\n      // Split the script into lines.\n      var lines = script.split('\\n')\n      for (var i = 0; i < lines.length; i++) {\n        // Parse a single line\n        this.parseLine(lines[i])\n      }\n    }\n  }\n}\n","import { constants } from '../system/constants.js'\r\nimport { Ticker } from 'pixi.js'\r\n\r\n/** Class representing the event system. */\r\nexport default class Events {\r\n  /** The events class controls the running of an experiment. */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._currentItem = null // The current active item.\r\n    this._keyDownEvent = null // Container for last key event.\r\n    this._keyDownHandler = null // Key down event handler.\r\n    this._keyPressMode = constants.PRESSES_ONLY // Keyboard press mode.\r\n    this._keyUpHandler = null // Key up event handler.\r\n    this._mouseDownEvent = null // Container for last mouse event.\r\n    this._mouseDownHandler = null // Mouse down event handler.\r\n    this._mouseMoveEvent = null // Container for last mouse move event.\r\n    this._mouseMoveHandler = null // Mouse move event handler.\r\n    this._mousePressMode = constants.PRESSES_ONLY // Mouse press mode.\r\n    this._mouseUpHandler = null // Mouse up event handler.\r\n    this._runner = runner // Parent runner class.\r\n    this._responseGiven = false // Valid response toggle\r\n    this._responseList = null // Items to respond on.\r\n    this._responseType = constants.RESPONSE_NONE // Set type of response (0 = none, 1 = keyboard, 2 = mouse, 3 = sound).\r\n    this._soundHasEnded = false // Sound play is finished.\r\n    this._state = constants.TIMER_NONE // Current status of the runner.\r\n    this._statePrevious = constants.TIMER_NONE // Previous state, used when pausing experiment.\r\n    this._timeHandler = null // Timing event handler.\r\n    this._timeOut = -1 // Duration before timeout occures.\r\n    this._timeStamp = -1 // Moment of update checking.\r\n    this._videoHasEnded = false // Video play is finished.\r\n\r\n    // Definition of the conversion table to convert keycodes to OpenSesame codes.\r\n    this._KEY_CODES = [\r\n      '', '', '', '', '', '', 'help', '', 'backspace', 'tab', '', '', 'clear', 'enter', 'enter_special', '', 'shift', 'ctrl', 'alt', 'pause', // 00  .. 19\r\n      'caps', '', '', '', '', '', '', 'escape', '', '', '', '', 'space', 'page up', 'page down', 'end', 'home', 'left', 'up', 'right', // 20  .. 39\r\n      'down', 'select', 'print', 'execute', 'print screen', 'insert', 'delete', '', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', // 40  .. 59\r\n      '<', '=', '>', '?', '@', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', // 60  .. 79\r\n      'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'left meta', 'right meta', 'menu', '', '', 'kp0', 'kp1', 'kp2', 'kp3', // 80  .. 99\r\n      'kp4', 'kp5', 'kp6', 'kp7', 'kp8', 'kp9', 'kp_multiply', 'kp_plus', '', 'kp_minus', 'kp_period', 'kp_divide', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', // 100 .. 119\r\n      'f9', 'f10', 'f11', 'f12', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 120 .. 139\r\n      '', '', '', '', 'numlock', 'scrollock', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 140 .. 159\r\n      '^', '!', '\"', '#', '$', '%', '&', '_', '(', ')', '*', '+', '|', '_', '{', '}', '~', '', '', '', // 160 .. 179\r\n      '', '', '', '', '', '', ';', '=', ',', '-', '.', '/', '`', '', '', '', '', '', '', '', // 180 .. 199\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '[', // 200 .. 219\r\n      '\\\\', ']', '\\'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 220 .. 239\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' // 240 .. 255\r\n    ]\r\n\r\n    // Definition of the conversion table to convert shift keycodes to OpenSesame codes.\r\n    this._KEY_SHIFTCODES = [\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'pause', // 00  .. 19\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 20  .. 39\r\n      '', '', '', '', '', '', '', '', ')', '!', '@', '#', '$', '%', '^', '&', '*', '(', '', ':', // 40  .. 59\r\n      '', '+', '', '', '', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', // 60  .. 79\r\n      'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'y', 'z', '', '', '', '', '', '', '', '', '', '', // 80  .. 99\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 100 .. 119\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 120 .. 139\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 140 .. 159\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '_', '', '', '', '', '', '', // 160 .. 179\r\n      '', '', '', '', '', '', '', '', '<', '', '>', '?', '~', '', '', '', '', '', '', '', // 180 .. 199\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '{', // 200 .. 219\r\n      '|', '}', '\"', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 220 .. 239\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' // 240 .. 255\r\n    ]\r\n  }\r\n\r\n  /** Initialize the event system. */\r\n  _initialize () {\r\n    // Create and set the keyboard event listeners.\r\n    this._keyDownHandler = this._keyDown.bind(this)\r\n    this._keyUpHandler = this._keyUp.bind(this)\r\n    window.addEventListener('keydown', this._keyDownHandler)\r\n    window.addEventListener('keyup', this._keyUpHandler)\r\n\r\n    // Create and set the mouse event listeners.\r\n    this._mouseDownHandler = this._mouseDown.bind(this)\r\n    this._mouseMoveHandler = this._mouseMove.bind(this)\r\n    this._mouseUpHandler = this._mouseUp.bind(this)\r\n    this._touchStartHandler = this._touchStart.bind(this)\r\n    this._runner._renderer.view.addEventListener('mousedown', this._mouseDownHandler)\r\n    this._runner._renderer.view.addEventListener('mousemove', this._mouseMoveHandler)\r\n    this._runner._renderer.view.addEventListener('mouseup', this._mouseUpHandler)\r\n    this._runner._renderer.view.addEventListener('touchstart', this._touchStartHandler)\r\n\r\n    // Set the current item to the experiment object.\r\n    this._currentItem = this._runner._experiment\r\n    this._state = constants.TIMER_NONE\r\n\r\n    // Create the time handler and start the experiment.\r\n    this._timeHandler = new Ticker()\r\n    this._timeHandler.add(this._time.bind(this))\r\n    this._timeHandler.start()\r\n  }\r\n\r\n  /** Finalize the event system. */\r\n  _finalize () {\r\n    // Remove the keyboard event listeners.\r\n    window.removeEventListener('keydown', this._keyDownHandler)\r\n    window.removeEventListener('keyup', this._keyUpHandler)\r\n\r\n    // Remove the mouse event listeners.\r\n    this._runner._renderer.view.removeEventListener('mousedown', this._mouseDownHandler)\r\n    this._runner._renderer.view.removeEventListener('mousemove', this._mouseMoveHandler)\r\n    this._runner._renderer.view.removeEventListener('mouseup', this._mouseUpHandler)\r\n    this._runner._renderer.view.removeEventListener('touchstart', this._touchStartHandler)\r\n\r\n    // Stop the timing event listener.\r\n    this._timeHandler.stop()\r\n    this._timeHandler.remove(this._time)\r\n\r\n    // Clear the properties.\r\n    this._currentItem = null\r\n    this._mouseDownEvent = null\r\n    this._mouseMoveEvent = null\r\n    this._responseList = null\r\n    this._timeHandler = null\r\n  }\r\n\r\n  /**\r\n     * Convert a keyboard code to a OpenSesame code (including special characters ctrl/shift/alt).\r\n     * @param {Object} event - The keyboard event to process.\r\n     * @return {String} - The converted keyboard code.\r\n     */\r\n  _convertKeyCode (event) {\r\n    // Check for special characters\r\n    var key = ''\r\n    if ((event.shiftKey === true) && (event.keyCode !== 16)) {\r\n      // Shift key pressed with other key, so convert shift keys.\r\n      key = this._KEY_SHIFTCODES[event.keyCode]\r\n    } else if ((event.shiftKey === true) && (event.keyCode === 16)) {\r\n      // Shift code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lshift' : 'rshift'\r\n    } else if ((event.ctrlKey === true) && (event.keyCode === 17)) {\r\n      // Ctrl code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lctrl' : 'rctrl'\r\n    } else if ((event.altKey === true) && (event.keyCode === 18)) {\r\n      // Alt code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lalt' : 'ralt'\r\n    } else {\r\n      // Convert standard keycode.\r\n      key = this._KEY_CODES[event.keyCode]\r\n    }\r\n\r\n    // Return function result.\r\n    return key\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving key down events.\r\n     * @param {Object} event - system keydown event.\r\n     */\r\n  _keyDown (event) {\r\n    // Ignore events if the key was already down. This is to avoid keypresses\r\n    if (event.repeat) return\r\n    // Store the keyboard event.\r\n    this._keyDownEvent = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time()\r\n    }\r\n\r\n    // Check for esc key to pause the experiment.\r\n    if ((event.keyCode === 27) && (this._state !== constants.TIMER_PAUSE)) {\r\n      // Set system to paused.\r\n      this._statePrevious = this._state\r\n      this._state = constants.TIMER_PAUSE\r\n\r\n      // Show the pause screen.\r\n      this._runner._screen._showPauseScreen()\r\n    } else if ((this._state === constants.TIMER_WAIT) &&\r\n      ((this._keyPressMode === constants.PRESSES_ONLY) ||\r\n      (this._keyPressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processKeyboardEvent(event, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving key up events.\r\n     * @param {Object} event - system keyup event.\r\n     */\r\n  _keyUp (event) {\r\n    if (event.repeat) return\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._keyPressMode === constants.RELEASES_ONLY) ||\r\n      (this._keyPressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processKeyboardEvent(event, 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Process and convert keyboard events into response objects.\r\n     * @param {Object} event - system keyboard event.\r\n     * @param {Number} keyboardState - type of keyboard event.\r\n     */\r\n  _processKeyboardEvent (event, keyboardState) {\r\n    // Create a new keyboard response object.\r\n    const keyboardResponse = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time(),\r\n      state: keyboardState,\r\n      type: constants.RESPONSE_KEYBOARD\r\n    }\r\n\r\n    // Convert response to proper keyboard token.\r\n    keyboardResponse.resp = this._convertKeyCode(event)\r\n\r\n    // Process the response to the current object.\r\n    if ((this._responseType === constants.RESPONSE_KEYBOARD) &&\r\n      ((this._responseList === null) ||\r\n      (this._responseList.indexOf(keyboardResponse.resp) >= 0))) {\r\n      // Process the current item.\r\n      if (this._currentItem !== null) {\r\n        // Process the response.\r\n        this._currentItem._update(keyboardResponse)\r\n      }\r\n\r\n      // Set the valid response given toggle.\r\n      this._responseGiven = true\r\n    }\r\n    return keyboardResponse\r\n  }\r\n\r\n  /** Prevent the right mouse context menu from showing. */\r\n  _mouseContext (event) {\r\n    // Prevent default action.\r\n    event.preventDefault()\r\n\r\n    // Return false to prevent the context menu from pushing up.\r\n    return false\r\n  }\r\n\r\n  /** Store the last mouse move event for later use. */\r\n  _mouseMove (event) {\r\n    // Store the mouse move event and its timestamp for use in the mouse class.\r\n    this._mouseMoveEvent = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time()\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for touch start events, which for now are translated to\r\n     * moudown events.\r\n     * @param {Object} event - system touchstart event.\r\n     */\r\n  _touchStart (event) {\r\n    event.button = 0\r\n    event.clientX = event.changedTouches[0].clientX\r\n    event.clientY = event.changedTouches[0].clientY\r\n    this._mouseDown(event)\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving mouse down events.\r\n     * @param {Object} event - system mousedown event.\r\n     */\r\n  _mouseDown (event) {\r\n    // Store the mouse down event and its timestamp for use in the mouse class.\r\n    this._mouseDownEvent = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time()\r\n    }\r\n\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._mousePressMode === constants.PRESSES_ONLY) || (this._mousePressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processMouseEvent(event, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving mouse up events.\r\n     * @param {Object} event - system mouseup event.\r\n     */\r\n  _mouseUp (event) {\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._mousePressMode === constants.RELEASES_ONLY) || (this._mousePressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      this._processMouseEvent(event, 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Process and convert mouse events into response objects.\r\n     * @param {Object} event - system mouse event.\r\n     * @param {Number} mouseState - type of mouse event.\r\n     */\r\n  _processMouseEvent (event, mouseState) {\r\n    // Create a mouse response object.\r\n    var mouseResponse = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time(),\r\n      state: mouseState,\r\n      type: constants.RESPONSE_MOUSE\r\n    }\r\n\r\n    // Adjust mouse response.\r\n    mouseResponse.resp = String(event.button + 1)\r\n\r\n    // Process the response to the current object.\r\n    if ((this._responseType === constants.RESPONSE_MOUSE) && ((this._responseList === null) ||\r\n      (this._responseList.indexOf(mouseResponse.resp) >= 0))) {\r\n      // Process the response to the current object.\r\n      if (this._currentItem !== null) {\r\n        this._currentItem._update(mouseResponse)\r\n      }\r\n\r\n      // Set the valid response given toggle.\r\n      this._responseGiven = true\r\n    }\r\n    return mouseResponse\r\n  }\r\n\r\n  /**\r\n     * Event handler for sound event processing.\r\n     * @param {Object} event - sound end event.\r\n     */\r\n  _audioEnded (sampler) {\r\n    sampler.onEnded()\r\n    // If duration isequal to sound exit the sound item.\r\n    if (sampler.duration === 'sound') {\r\n      this.proceed()\r\n    }\r\n  }\r\n\r\n  /** Definition of methods for video event processing. */\r\n  _videoEnded (event) {\r\n    // If duration is set to video end respons to this.\r\n    var video = this\r\n    if (video.duration === 'video') {\r\n      video._experiment._runner._events._videoHasEnded = true\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for video play processing.\r\n     * @param {Object} event - sound end event.\r\n     */\r\n  _videoPlay (event) {\r\n  }\r\n\r\n  /**\r\n     * Event handler for experiment execution.\r\n     * @param {Object} event - system timer event.\r\n     */\r\n  _time (event) {\r\n    // Select the proper state.\r\n    switch (this._state) {\r\n    case constants.TIMER_NONE:\r\n      // Do nothing in the loop\r\n      break\r\n    case constants.TIMER_WAIT:\r\n      // Set current time stamp\r\n      this._timeStamp = this._currentItem.clock.time()\r\n\r\n      // Check if a time out occures or a valid response is given.\r\n      if (((this._timeOut === -1) && ((this._responseGiven === true) || (this._videoHasEnded === true))) ||\r\n                    ((this._timeOut > 0) && ((this._responseType === constants.RESPONSE_KEYBOARD) || (this._responseType === constants.RESPONSE_MOUSE)) && (this._responseGiven === true)) ||\r\n                    ((this._timeOut > 0) && ((this._timeStamp - this._currentItem.experiment.vars.get('time_' + this._currentItem.name)) > this._timeOut))) {\r\n        this.proceed()\r\n      } else {\r\n        // Update the current item without response.\r\n        this._currentItem._update(null)\r\n      }\r\n      break\r\n    case constants.TIMER_PAUSE:\r\n      // Do nothing in the loop\r\n      break\r\n    case constants.TIMER_RESUME:\r\n      // Do nothing in the loop\r\n      break\r\n    case constants.TIMER_BREAK:\r\n    case constants.TIMER_EXIT:\r\n      // Adjus the status.\r\n      this._state = constants.TIMER_NONE\r\n\r\n      // Exit the runner.\r\n      this._runner._finalize()\r\n      break\r\n    case constants.TIMER_FORM:\r\n      // Update the current item without response.\r\n      this._currentItem._update(null)\r\n      break\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Execute a stimulus/response wait period for a certain item.\r\n     * @param {Number} timeout - maximum time to wait for a response.\r\n     * @param {Number} responseType - type of response to wait for.\r\n     * @param {Array} responseList - list of acceptable respones.\r\n     */\r\n  _run (timeOut, responseType, responseList) {\r\n    // Set the event run|ning properties.\r\n    this._responseList = responseList\r\n    this._responseType = responseType\r\n    this._timeOut = timeOut\r\n\r\n    // Activate the event running.\r\n    this._responseGiven = false\r\n    this._soundHasEnded = false\r\n    this._state = constants.TIMER_WAIT\r\n    this._videoHasEnded = false\r\n  }\r\n\r\n  proceed () {\r\n    // Adjust the status.\r\n    this._state = constants.TIMER_NONE\r\n\r\n    // Remove the items from the general stack.\r\n    this._runner._itemStack.pop()\r\n\r\n    // Execute the post-run phase after duration is finished or response is received.\r\n    this._currentItem._complete()\r\n  }\r\n}\r\n","import { isFunction } from 'lodash'\r\n\r\n/** Class representing a parameter processor. */\r\nexport default class Parameters {\r\n  /**\r\n     * Create an session class which stores information about the client system.\r\n     * @param {Runner} runner - The runner class to which the debugger belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._itemCounter = 0 // Number of active parameter.\r\n    this._parameters = [] // All parameters to process.\r\n    this._runner = runner // Parent runner attached to the session object.\r\n  }\r\n\r\n  /** Initialize the parameters class. */\r\n  _initialize () {\r\n    // Check if subject parameter is already defined.\r\n    if (this._runner._subject !== null) {\r\n      // Set the subject number\r\n      this._runner._experiment.set_subject(this._runner._subject)\r\n\r\n      // Parameters are processed, next phase.\r\n      this._runner._screen._setupClickScreen(this._runner._welcomeText)\r\n    } else {\r\n      // Update inroscreen.\r\n      this._runner._screen._updateIntroScreen('Retrieving input parameters.')\r\n\r\n      // Set properties if defined.\r\n      var parameter = {\r\n        dataType: 'number',\r\n        defaultValue: '0',\r\n        name: 'subject_nr',\r\n        title: 'Starting the experiment',\r\n        prompt: 'Please enter the subject number',\r\n        promptEnabled: true\r\n      }\r\n\r\n      // Add the subject parameter to the parameters list.\r\n      this._parameters.push(parameter)\r\n\r\n      // Process the Parameters.\r\n      this._processParameters()\r\n    }\r\n  }\r\n\r\n  /** Process all parameters within the parameter list. */\r\n  _processParameters () {\r\n    // Process all items for which a user input is required.\r\n    if (this._itemCounter < this._parameters.length) {\r\n      // Process a  parameter.\r\n      this._processParameter(this._parameters[this._itemCounter])\r\n    } else {\r\n      // Transfer the startup info to the context.\r\n      this._transferParameters()\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Callback function for dialog when aits OK button has been clicked.\r\n     * @param {Object} parameter - The parameter to set.\r\n     * @param {String} value - The value to set.\r\n     */\r\n  _onParamConfirm (parameter, value) {\r\n    // Get the response information\r\n    parameter.response = value\r\n\r\n    // Increase the counter.\r\n    this._itemCounter++\r\n\r\n    // Continue processing.\r\n    this._processParameters()\r\n  }\r\n\r\n  /** Callback function for dialog when its cancel button has been clicked. */\r\n  _onParamCancel () {\r\n    // Exit the runner.\r\n    this._runner._exit()\r\n  }\r\n\r\n  /**\r\n     * Process a single parameter\r\n     * @param {Object} parameter - The parameter which must be processed.\r\n     */\r\n  _processParameter (parameter) {\r\n    // Check if a user request is required.\r\n    if (parameter.promptEnabled === true) {\r\n      // Use passed function that displays a prompt. This leaves the display\r\n      // of the prompt to the library or system that implements osweb.\r\n      if (isFunction(this._runner._prompt)) {\r\n        this._runner._prompt(parameter.title, parameter.prompt,\r\n          parameter.defaultValue, parameter.dataType,\r\n          this._onParamConfirm.bind(this, parameter), this._onParamCancel.bind(this))\r\n      } else {\r\n        // Fallback to the window prompt if no function has been passed.\r\n        const result = window.prompt(parameter.prompt, parameter.defaultValue)\r\n\r\n        if (result === null) {\r\n          this._onParamCancel()\r\n        } else {\r\n          this._onParamConfirm(parameter, result)\r\n        }\r\n      }\r\n    } else {\r\n      // Assign default value to the Startup item.\r\n      parameter.response = parameter.defaultValue\r\n\r\n      // Increase the counter.\r\n      this._itemCounter++\r\n\r\n      // Continue processing.\r\n      this._processParameters()\r\n    }\r\n  }\r\n\r\n  /** Transfer the startup info items to the context. */\r\n  _transferParameters () {\r\n    // Transfer the startup info items to the context.\r\n    for (var i = 0; i < this._parameters.length; i++) {\r\n      // Additional run for subject_nr\r\n      if (this._parameters[i].name === 'subject_nr') {\r\n        this._runner._experiment.set_subject(this._parameters[i].response)\r\n      } else {\r\n        this._runner._experiment.vars.set(this._parameters[i].name,\r\n          this._parameters[i].response)\r\n      }\r\n    }\r\n\r\n    // Parameters are processed, next phase.\r\n    this._runner._screen._setupClickScreen(this._runner._welcomeText)\r\n  }\r\n}\r\n","import { isFunction } from 'lodash'\r\nimport { Container, Sprite, Graphics, Text } from 'pixi.js'\r\nimport { VERSION_NUMBER } from '../index.js'\r\n\r\n/** Class representing a Screen. */\r\nexport default class Screen {\r\n  /**\r\n   * Create an introduction screen which handles the start of the experiment.\r\n   * @param {Object} runner - The runner class to which the screen belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the screen object.\r\n\r\n    // Set class properties.\r\n    this._active = true // If true the introduction screen is shown.\r\n    this._click = true // If true all is started with a mouse click.\r\n    this._container = null //  Container which holds the screen info.\r\n    this._exit = false // Exit toggle to prevent dialog when closing experiment.\r\n  }\r\n\r\n  screenCenter () {\r\n    return {\r\n      x: this._runner._renderer.width / 2,\r\n      y: this._runner._renderer.height / 2\r\n    }\r\n  }\r\n\r\n  /** Initialize the fullscreen mode if enabled. */\r\n  _fullScreenInit () {\r\n    // Check if fullscreen must be enabled.\r\n    if (this._runner._fullScreen === true) {\r\n      // Get the container element.\r\n      var element = this._runner._container\r\n\r\n      // Go full-screen\r\n      if (element.requestFullscreen) {\r\n        document.addEventListener('fullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('fullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.requestFullscreen()\r\n      } else if (element.webkitRequestFullscreen) {\r\n        document.addEventListener('webkitfullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('webkitfullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.webkitRequestFullscreen()\r\n      } else if (element.mozRequestFullScreen) {\r\n        document.addEventListener('mozfullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('mozfullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.mozRequestFullScreen()\r\n      } else if (element.msRequestFullscreen) {\r\n        document.addEventListener('MSFullscreenChange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('MSFullscreenError', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.msRequestFullscreen()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Finalize the fullscreen mode if if was enabled. */\r\n  _fullScreenExit () {\r\n    // Check if fullscreen must be enabled.\r\n    if (this._runner._fullScreen === true) {\r\n      // Set the exit toggle.\r\n      this._exit = true\r\n\r\n      // Exit the full screen mode.\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen()\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen()\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen()\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Event handler which responds to full-screen change. */\r\n  _fullScreenChanged () {\r\n    // Check if we are dropping out of full-screen.\r\n    if (document.fullscreenElement ||\r\n      document.webkitFullscreenElement ||\r\n      document.mozFullScreenElement ||\r\n      document.msFullscreenElement) {\r\n      // Scale the canvas\r\n      switch (this._runner._scaleMode) {\r\n      case 'noScale':\r\n        // Default mode, no scaling, canbas is centered on the screen.\r\n        this._runner._renderer.view.style.top = '0px'\r\n        this._runner._renderer.view.style.bottom = '0px'\r\n        this._runner._renderer.view.style.left = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.margin = 'auto'\r\n        this._runner._renderer.view.style.display = 'block'\r\n        this._runner._renderer.view.style.position = 'absolute'\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n        break\r\n      case 'showAll':\r\n        // Default mode, no scaling, canbas is centered on the screen.\r\n        this._runner._renderer.view.style.top = '0px'\r\n        this._runner._renderer.view.style.bottom = '0px'\r\n        this._runner._renderer.view.style.left = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.margin = 'auto'\r\n        this._runner._renderer.view.style.display = 'block'\r\n        this._runner._renderer.view.style.position = 'absolute'\r\n        if ((this._runner._container.clientWidth - this._runner._experiment.vars.width) >\r\n            (this._runner._container.clientHeight - this._runner._experiment.vars.height)) {\r\n          const ar = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n          this._runner._renderer.resize(Math.round(this._runner._experiment.vars.width * ar), this._runner._container.clientHeight)\r\n          this._runner._experiment._scale_x = Math.round(this._runner._experiment.vars.width * ar) / this._runner._experiment.vars.width\r\n          this._runner._experiment._scale_y = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n        } else {\r\n          const ar = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n          this._runner._renderer.resize(this._runner._container.clientWidth, Math.round(this._runner._experiment.vars.height * ar))\r\n          this._runner._experiment._scale_x = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n          this._runner._experiment._scale_y = Math.round(this._runner._experiment.vars.height * ar) / this._runner._experiment.vars.height\r\n        }\r\n        this._runner._experiment._currentCanvas._container.scale.x = this._runner._experiment._scale_x\r\n        this._runner._experiment._currentCanvas._container.scale.y = this._runner._experiment._scale_y\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n        break\r\n      case 'exactFit':\r\n        // Fit to the exact window size (cropping).\r\n        this._runner._experiment._scale_x = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n        this._runner._experiment._scale_y = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n\r\n        // Reize the current canvas.\r\n        this._runner._renderer.resize(this._runner._container.clientWidth, this._runner._container.clientHeight)\r\n        this._runner._experiment._currentCanvas._container.scale.x = this._runner._experiment._scale_x\r\n        this._runner._experiment._currentCanvas._container.scale.y = this._runner._experiment._scale_y\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n        break\r\n      }\r\n    } else {\r\n      // Check for exiting experiment.\r\n      if (this._exit === false) {\r\n        // Resclae to 1Fit to the exact window size (cropping).\r\n        this._runner._experiment._scale_x = 1\r\n        this._runner._experiment._scale_y = 1\r\n\r\n        // Fit to the exact window size (cropping).\r\n        this._runner._renderer.resize(this._runner._experiment.vars.width, this._runner._experiment.vars.height)\r\n        this._runner._experiment._currentCanvas._container.scale.x = 1\r\n        this._runner._experiment._currentCanvas._container.scale.y = 1\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n\r\n        // Open Sesame is running, request subject to continue of to stop.\r\n        if (isFunction(this._runner._confirm)) {\r\n          this._runner._confirm('Leaving full-screen mode, pausing experiment.',\r\n            'Please press ok the resume the experiment otherwise cancel to stop.',\r\n            this._onFullScreenConfirm.bind(this), this._onFullScreenCancel.bind(this))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Event handler which responds to full-screen change errors. */\r\n  _fullScreenError () {\r\n    // Show error message.\r\n    this._runner.debugger.addError('Could not start full-screen mode, experiment stopped.')\r\n  }\r\n\r\n  /** Event handler to respond to dialog ok conmfirmation. */\r\n  _onFullScreenConfirm () {\r\n    // Get the container element.\r\n    var element = this._runner._container\r\n    // Go full-screen\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen()\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen()\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen()\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen()\r\n    }\r\n  }\r\n\r\n  /** Event handler to respond to dialog cancel confirmation. */\r\n  _onFullScreenCancel () {\r\n    // Exit the experiment.\r\n    this._runner._finalize()\r\n  }\r\n\r\n  /** Set the introscreen elements. */\r\n  _setupIntroScreen ( logoSrc ) {\r\n    // Check if introscreen is used.\r\n    if (this._active === true) {\r\n      // Define introscreen elements.\r\n      this._introScreen = new Container()\r\n\r\n      const center = this.screenCenter()\r\n\r\n      const logoPath = (typeof logoSrc === 'undefined') ? 'img/opensesame.png' : logoSrc\r\n\r\n      const oswebLogo = Sprite.from(logoPath)\r\n      const oswebTitle = new Text('OSWeb', {\r\n        fontFamily: 'Arial',\r\n        fontSize: 26,\r\n        fill: '#FFFFFF'\r\n      })\r\n      const versionInfo = new Text(VERSION_NUMBER, {\r\n        fontFamily: 'Arial',\r\n        fontSize: 16,\r\n        fill: '#FFFFFF'\r\n      })\r\n\r\n      const copyrightText = new Text(\r\n        `Copyright Jaap Bos, Daniel Schreij & Sebastiaan Mathot, 2016 - ${(new Date()).getFullYear()}`,\r\n        {\r\n          fontFamily: 'Arial',\r\n          fontSize: 12,\r\n          fill: '#FFFFFF'\r\n        }\r\n      )\r\n\r\n      oswebLogo.width = oswebLogo.height = 150\r\n\r\n      oswebLogo.position.set(center.x - oswebLogo.width / 2, 50)\r\n      oswebTitle.position.set(center.x - oswebTitle.width / 2, 215)\r\n      versionInfo.position.set(center.x - versionInfo.width / 2, 250)\r\n      copyrightText.position.set(\r\n        center.x - copyrightText.width / 2,\r\n        center.y * 2 - copyrightText.height * 2\r\n      )\r\n\r\n      this._statusText = new Text('', {\r\n        fontFamily: 'Arial',\r\n        fontSize: 18,\r\n        fill: '#FFFFFF'\r\n      })\r\n      this._statusText.position.set(\r\n        center.x - this._statusText.width / 2,\r\n        center.y\r\n      )\r\n      this._introScreen.addChild(oswebLogo, oswebTitle,\r\n        versionInfo, copyrightText, this._statusText)\r\n\r\n      // Show the introduction screen.\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /** Check if the experiment must be clicked to start. */\r\n  _setupClickScreen (text) {\r\n    // Check if the experiment must be clicked to start.\r\n    if (this._click === true) {\r\n      // Update inroscreen.\r\n      if ((typeof text === \"undefined\") || (text.length === 0)) {\r\n        text = `\r\n    Your participation in this experiment should be anonymous.\r\n        Never provide any personal or sensitive information\r\n            (e.g. credit card or social security numbers).\r\n\r\n                    Click here with the mouse to begin.`\r\n      }\r\n      this._updateIntroScreen(text)\r\n\r\n      // Setup the mouse click response handler.\r\n      var clickHandler = function (event) {\r\n        // Remove the handler.\r\n        this._runner._renderer.view.removeEventListener('click', clickHandler)\r\n        this._runner._renderer.view.removeEventListener('touchstart', clickHandler)\r\n\r\n        // Finalize the introscreen elements.\r\n        this._clearIntroScreen()\r\n\r\n        // Start the task.\r\n        this._runner._initialize()\r\n      }.bind(this)\r\n\r\n      // Set the temporary mouse click.\r\n      this._runner._renderer.view.addEventListener('click', clickHandler, false)\r\n      this._runner._renderer.view.addEventListener('touchstart', clickHandler, false)\r\n    } else {\r\n      // Finalize the introscreen elements.\r\n      this._clearIntroScreen()\r\n\r\n      // Start the runner.\r\n      this._runner._initialize()\r\n    }\r\n  }\r\n\r\n  /** Clear the introscreen elements. */\r\n  _clearIntroScreen () {\r\n    // Update the introscreen elements.\r\n    if (this._active === true) {\r\n      // Clear the stage by temoving al the child elements.\r\n      for (var i = this._introScreen.children.length - 1; i >= 0; i--) {\r\n        this._introScreen.removeChild(this._introScreen.children[i])\r\n      }\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the progress bar used when loading the file pool.\r\n   * @param {Number} percentage - The percentage (0-100) of the progress bar.\r\n   */\r\n  _updateProgressBar (percentage) {\r\n    const center = this.screenCenter()\r\n\r\n    const xOuter = 200\r\n    const wOuter = 400\r\n    const hOuter = 20\r\n    const yOuter = center.y + 2 * hOuter\r\n\r\n    if (this._active === true) {\r\n      // Select the stage.\r\n      switch (percentage) {\r\n      case -1:\r\n        this._progressBarOuter = new Graphics()\r\n        this._progressBarOuter.lineStyle(1, 0xFFFFFF, 1)\r\n        this._progressBarOuter.drawRect(xOuter, yOuter, wOuter, hOuter)\r\n        this._progressBarOuter.x = 0\r\n        this._progressBarOuter.y = 0\r\n        this._progressBarInner = new Graphics()\r\n        this._progressBarInner.lineStyle(1, 0xFFFFFF, 1)\r\n        this._progressBarInner.drawRect(xOuter + 2, yOuter + 2, 1, hOuter - 4)\r\n        this._progressBarInner.x = 0\r\n        this._progressBarInner.y = 0\r\n        this._introScreen.addChild(this._progressBarInner)\r\n        this._introScreen.addChild(this._progressBarOuter)\r\n        this._runner._renderer.render(this._introScreen)\r\n        break\r\n      case 100:\r\n        this._introScreen.removeChild(this._progressBarInner)\r\n        this._introScreen.removeChild(this._progressBarOuter)\r\n        this._runner._renderer.render(this._introScreen)\r\n        break\r\n      default:\r\n        this._progressBarOuter.beginFill(0xFFFFFF)\r\n        this._progressBarOuter.drawRect(xOuter + 2, yOuter + 2, Math.round(percentage * (wOuter - 4)), hOuter - 4)\r\n        this._progressBarOuter.endFill()\r\n        this._runner._renderer.render(this._introScreen)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the introscreen elements.\r\n   * @param {String} text - The text which must be updated.\r\n   */\r\n  _updateIntroScreen (text) {\r\n    // Update the introscreen elements.\r\n    if (this._active === true) {\r\n      const center = this.screenCenter()\r\n      this._statusText.text = text\r\n      this._statusText.position.set(\r\n        center.x - this._statusText.width / 2,\r\n        center.y\r\n      )\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /** Show the pause screen. */\r\n  _showPauseScreen () {\r\n    // Open Sesame is running, request subject to continue of to stop.\r\n    if (isFunction(this._runner._confirm)) {\r\n      this._runner._confirm('Esc key pressed, pausing experiment.',\r\n        'Please press ok the resume the experiment otherwise cancel to stop.',\r\n        this._onPauseScreenConfirm.bind(this), this._onPauseScreenCancel.bind(this))\r\n    }\r\n  }\r\n\r\n  /** Event handler to respond to dialog ok conmfirmation. */\r\n  _onPauseScreenConfirm () {\r\n    // Restore the old state.\r\n    this._runner._events._state = this._runner._events._statePrevious\r\n  }\r\n\r\n  /** Event handler to respond to dialog cancel confirmation. */\r\n  _onPauseScreenCancel () {\r\n    // Exit the experiment.\r\n    this._runner._finalize()\r\n  }\r\n}\r\n","/** Class representing a client session information collector. */\r\nexport default class Session {\r\n  /**\r\n     * Create an session object which stores information about the client system.\r\n     * @param {Object} runner - The runner class to which the session belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._date = null // Date information container.\r\n    this._runner = runner // Parent runner attached to the session object.\r\n    this._session = null // Session information container.\r\n  }\r\n\r\n  /** Initialize the session. */\r\n  _initialize () {\r\n    // Update the loader text.\r\n    this._runner._screen._updateIntroScreen('Retrieving session information.')\r\n\r\n    // Get the session information.\r\n    this._getSessionInformation()\r\n  }\r\n\r\n  /** Retrieve session information from the client. */\r\n  _getSessionInformation () {\r\n    // Get the session information from the client system.\r\n    this._date = new Date()\r\n    this._session = {\r\n      browser: {\r\n        codename: navigator.appCodeName,\r\n        name: navigator.appName,\r\n        version: navigator.appVersion\r\n      },\r\n      date: {\r\n        startdate: ('0' + this._date.getDate()).slice(-2) + '-' + ('0' + this._date.getMonth()).slice(-2) + '-' + ('0' + this._date.getFullYear()).slice(-2),\r\n        starttime: ('0' + this._date.getHours()).slice(-2) + ':' + ('0' + this._date.getMinutes()).slice(-2) + ':' + ('0' + this._date.getSeconds()).slice(-2),\r\n        startdateUTC: ('0' + this._date.getUTCDate()).slice(-2) + '-' + ('0' + this._date.getUTCMonth()).slice(-2) + '-' + ('0' + this._date.getUTCFullYear()).slice(-2)\r\n      },\r\n      experiment: {\r\n        debug: 0,\r\n        parameters: 0,\r\n        pilot: 0,\r\n        taskname: 0,\r\n        taskversion: 0\r\n      },\r\n      screen: {\r\n        availableHeight: screen.availHeight,\r\n        availableWidth: screen.availWidth,\r\n        colorDepth: screen.colorDepth,\r\n        height: screen.height,\r\n        outerheight: window.outerheight,\r\n        outerwidth: window.outerwidth,\r\n        pixelDepth: screen.pixelDepth,\r\n        screenX: window.screenX,\r\n        screenY: window.screenY,\r\n        width: screen.width\r\n      },\r\n      system: {\r\n        os: navigator.platform\r\n      }\r\n    }\r\n  }\r\n}\r\n","import pako from 'pako'\nimport isFunction from 'lodash/isFunction'\nimport untar from 'js-untar'\n\n/**\n * FileStreamer makes it possible to asynchronously stream a file to another reader\n *\n * @class FileStreamer\n */\nclass FileStreamer {\n  constructor (file, chunkSize = 64 * 1024) {\n    this.file = file\n    this.offset = 0\n    this.chunkSize = chunkSize // bytes\n    this.rewind()\n  }\n\n  rewind () {\n    this.offset = 0\n  }\n\n  isEndOfFile () {\n    return this.offset >= this.getFileSize()\n  }\n\n  readBlock () {\n    const fileReader = new FileReader()\n    const blob = this.file.slice(this.offset, this.offset + this.chunkSize)\n\n    return new Promise((resolve, reject) => {\n      fileReader.onloadend = (event) => {\n        const target = (event.target)\n        if (target.error) {\n          return reject(target.error)\n        }\n\n        this.offset += target.result.byteLength\n\n        resolve({\n          data: target.result,\n          progress: Math.min(this.offset / this.file.size, 1)\n        })\n      }\n\n      fileReader.readAsArrayBuffer(blob)\n    })\n  }\n\n  getFileSize () {\n    return this.file.size\n  }\n}\n\n/**\n * Decompresses a cpmpressed experiment file\n *\n * @export\n * @param {File} zipfile The file to extract\n * @param {function} onProgress Function to be called during extraction progress. Receives proportion complete\n * @returns array of Files\n */\nexport async function decompress (zipfile, onProgress) {\n  const fs = new FileStreamer(zipfile)\n  const inflator = new pako.Inflate()\n  let block\n\n  while (!fs.isEndOfFile()) {\n    block = await fs.readBlock()\n    inflator.push(block.data, fs.isEndOfFile())\n    if (inflator.err) {\n      throw inflator.msg\n    }\n    if (isFunction(onProgress)) onProgress(block.progress)\n  }\n  return untar(inflator.result.buffer)\n}\n\n/**\n * Converts a File/Blob to a string representation\n *\n * @export\n * @param {File} inputFile The file to convert\n * @returns string\n */\nexport function readFileAsText (inputFile) {\n  const temporaryFileReader = new FileReader()\n\n  return new Promise((resolve, reject) => {\n    temporaryFileReader.onerror = () => {\n      temporaryFileReader.abort()\n      reject(new DOMException('Problem parsing input file.'))\n    }\n\n    temporaryFileReader.onload = () => {\n      resolve(temporaryFileReader.result)\n    }\n    temporaryFileReader.readAsText(inputFile)\n  })\n}\n\n/**\n * Returns current host as detected by browser\n *\n * @returns String\n */\nfunction getHost () {\n  return window.location.origin !== 'null' ? window.location.origin : 'http://nodejs.test'\n}\n\n/**\n * Checks if the passed string contains a valid URL\n *\n * @export\n * @param {String} str The string to check\n * @returns boolean\n */\nexport function parseUrl (str) {\n  try {\n    const host = getHost()\n    return new URL(str, host)\n  } catch (e) {\n    return false\n  }\n}\n","import WebFont from 'webfontloader'\r\nimport {\r\n  decompress,\r\n  readFileAsText,\r\n  parseUrl\r\n} from '../util/files'\r\nimport isString from 'lodash/isString'\r\nimport isObject from 'lodash/isObject'\r\nimport axios from 'axios'\r\n\r\n/** Class representing a information stream processor. */\r\nexport default class Transfer {\r\n  /**\r\n   * Create a transfer object used for streaming information.\r\n   * @param {Object} runner - The runner class to which the transfer belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._runner = runner // Parent runner attached to the transfer object.\r\n  }\r\n\r\n  /**\r\n   * Read an osexp file.\r\n   * @param {Object|String} source - A file object or a String containing the experiment or a download URL.\r\n   */\r\n  async _readSource (source) {\r\n    // Check type of object.\r\n    if (!isString(source) && (!isObject(source) || source.constructor !== File)) {\r\n      throw new Error('No osexp source file defined.')\r\n    }\r\n\r\n    // This var will hold the OS script after parsing\r\n    let osScript\r\n\r\n    if (source.constructor === File) {\r\n      // Source is a local file.\r\n      try {\r\n        osScript = await this._readOsexpFromFile(source)\r\n      } catch (e) {\r\n        throw new Error(`Could not read local osexp, ${e}`)\r\n      }\r\n    } else if (isString(source)) {\r\n      // Check if the source string is an URL\r\n      const uri = parseUrl(source)\r\n\r\n      if (uri !== false) {\r\n        // Attempt to download and load the remote experiment\r\n        try {\r\n          const remoteFile = await this.fetch(uri.href)\r\n          osScript = await this._readOsexpFromFile(remoteFile)\r\n        } catch (e) {\r\n          throw new Error(`Could not read remote osexp, ${e}`)\r\n        }\r\n      } else {\r\n        try {\r\n          osScript = this._processScript(source)\r\n        } catch (e) {\r\n          throw new Error(`Could not read source string, ${e}\\n\\n${source}`)\r\n        }\r\n      }\r\n    }\r\n    // Read in and generate the webfonts\r\n    await this._readWebFonts()\r\n\r\n    return osScript\r\n  }\r\n\r\n  /**\r\n   * Reads in an osexp from a string\r\n   *\r\n   * @param {File|String} osexpFile The osexp to parse, can be a string or a File containing a string\r\n   * @returns boolean\r\n   * @memberof Transfer\r\n   */\r\n  async _readExpFile (osexp) {\r\n    if ([File, Blob].includes(osexp.constructor)) {\r\n      osexp = await readFileAsText(osexp)\r\n    }\r\n    return this._processScript(osexp)\r\n  }\r\n\r\n  /**\r\n   * Reading and extracting an osexp file from a file location.\r\n   * @param {Object} file - A file object containing the experiment.\r\n   */\r\n  async _readOsexpFromFile (osexpFile) {\r\n    try {\r\n      return await this._readExpFile(osexpFile)\r\n    } catch (e) {\r\n      this._runner._debugger.addMessage(`Could not read osexp file as plain text: ${e.message}.\\nFile is probably binary`)\r\n    }\r\n    // Reading and extracting an osexp file from a file location.\r\n    const files = await decompress(\r\n      osexpFile,\r\n      (progress) => this._runner._screen._updateProgressBar(progress)\r\n    )\r\n\r\n    // Find the script in the array of extracted files. Throw an error if it isn't found.\r\n    const expFileIndex = files.findIndex((item) => item.name === 'script.opensesame')\r\n    if (expFileIndex === -1) throw new Error('Could not locate experiment script')\r\n    // Pop the script out of the file array and proccess it\r\n    const expFile = files.splice(expFileIndex, 1)[0]\r\n    const script = await this._readExpFile(expFile.blob)\r\n\r\n    // According to the zlib convention followed by the pako library we use to decompress\r\n    // the osexp file, files have a type of 0, so filter these out.\r\n    const poolFiles = files.filter(\r\n      (item) => item.type === '0'\r\n    )\r\n    // Process the file pool items\r\n    await this._processOsexpPoolItems(poolFiles)\r\n    return script\r\n  }\r\n\r\n  /**\r\n   * Reads an osexp file from a remote server, if its type is indicated to be\r\n   * 'text/plain' (opposed to being zipped)\r\n   * @param  {string} url The url at which the osexp can be found\r\n   * @return {void}\r\n   */\r\n  async fetch (url) {\r\n    const response = await axios.get(url, {\r\n      responseType: 'blob',\r\n      onDownloadProgress: (event) => {\r\n        if (event.lengthComputable) {\r\n          this._runner._screen._updateProgressBar(event.loaded / event.total)\r\n        }\r\n      }\r\n    })\r\n    let res\r\n    if (/Edge/.test(navigator.userAgent)) {\r\n      res = new Blob([response.data])\r\n      res.name = 'downloaded.osexp'\r\n    } else {\r\n      res = new File([response.data], 'downloaded.osexp')\r\n    }\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * Process an osexp script\r\n   * @param  {string} contents - The script contents\r\n   * @return {boolean} - True if script was successfully processed, false otherwise\r\n   */\r\n  _processScript (contents) {\r\n    if (contents.substr(0, 3) !== '---') {\r\n      throw new Error('Specified script file is not valid OpenSesame script')\r\n    }\r\n\r\n    // Disable the progressbar.\r\n    this._runner._screen._updateProgressBar(100)\r\n    // Set the script paramter.\r\n    // this._runner._script = contents\r\n    return contents\r\n  }\r\n\r\n  /**\r\n   * Asynchronously iterate over file pool files and generate items for them.\r\n   *\r\n   * @param {array} poolFiles The array containing file pool files\r\n   * @returns void\r\n   * @memberof Transfer\r\n   */\r\n  async _processOsexpPoolItems (poolFiles) {\r\n    // Async iterator that handles each file in the poolFiles array\r\n    const asyncIterator = {\r\n      currentIndex: 0,\r\n      next () { // All the action happens here\r\n        const currentFile = poolFiles[this.currentIndex]\r\n\r\n        // If currentFile is undefined, then the array has been depleted and all\r\n        // files have been processed. This ends the async iteration properly\r\n        if (!currentFile) {\r\n          return {\r\n            value: undefined,\r\n            done: true\r\n          }\r\n        }\r\n\r\n        // Generate the item.\r\n        const item = {\r\n          data: null,\r\n          folder: currentFile.name.match(/(.*)[/\\\\]/)[1] || '',\r\n          name: currentFile.name.replace(/^.*[\\\\/]/, '').replace(\r\n            /U\\+([0-9A-F]{4})/g, (whole, group1) => {\r\n              // Parse encoded characters back to their unicode counterparts\r\n              return String.fromCharCode(parseInt(group1, 16))\r\n            }\r\n          ),\r\n          size: currentFile.size,\r\n          type: 'undefined'\r\n        }\r\n\r\n        // Determine the file type and generate the appropriate osweb item\r\n        const ext = currentFile.name.substr(currentFile.name.lastIndexOf('.') + 1)\r\n        if (['jpg', 'jpeg', 'png', 'bmp'].includes(ext.toLowerCase())) {\r\n          // Create a new file pool mage item.\r\n          const img = new Image()\r\n          img.src = currentFile.getBlobUrl()\r\n          item.data = img\r\n          item.type = 'image'\r\n        } else if (['wav', 'ogg'].includes(ext.toLowerCase())) {\r\n          const ado = new Audio()\r\n          ado.src = currentFile.getBlobUrl()\r\n          item.data = ado\r\n          item.type = 'sound'\r\n        } else if (['ogv', 'mp4', 'm4v'].includes(ext.toLowerCase())) {\r\n          const ado = document.createElement('VIDEO')\r\n          ado.src = currentFile.getBlobUrl()\r\n          item.data = ado\r\n          item.type = 'video'\r\n        } else if (['csv','txt','md'].includes(ext.toLowerCase())) {\r\n          console.log('.csv')\r\n          item.type = 'text'\r\n          currentFile.blob.text().then(text => (item.data = text))\r\n        }\r\n        // Increment the counter.\r\n        this.currentIndex++\r\n\r\n        return {\r\n          value: item,\r\n          done: false\r\n        }\r\n      },\r\n      // for-await calls this on whatever it's passed, so\r\n      // iterators tend to return themselves.\r\n      [Symbol.asyncIterator] () {\r\n        return this\r\n      }\r\n    }\r\n\r\n    // Iterate over the file pool items\r\n    for await (const item of asyncIterator) {\r\n      // Add the item to the virtual pool.\r\n      this._runner._pool.add(item)\r\n\r\n      // Update the progress bar.\r\n      this._runner._screen._updateProgressBar(asyncIterator.currentIndex / poolFiles.length)\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Read in webfonts\r\n   *\r\n   * @returns Promise\r\n   * @memberof Transfer\r\n   */\r\n  async _readWebFonts () {\r\n    // Update the introscreen\r\n    this._runner._screen._updateProgressBar(100)\r\n    this._runner._screen._updateIntroScreen('Retrieving required webfonts.')\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Load the required fonts using webfont.\r\n      WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Droid Serif', 'Droid Sans Mono'],\r\n          urls: ['//fonts.googleapis.com/css?family=Droid Sans',\r\n            '//fonts.googleapis.com/css?family=Droid Serif',\r\n            '//fonts.googleapis.com/css?family=Droid Sans Mono'\r\n          ]\r\n        },\r\n        active: () => resolve(),\r\n        inactive: () => reject(new Error('Could not load webfonts'))\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Writing experiment result data to a location.\r\n   * @param {String} target - An addres to store result data.\r\n   * @param {Object} resultData - The result data itself to store.\r\n   */\r\n  _writeDataFile (target, resultData) {\r\n    // Check if the target and resultData are defined.\r\n    if ((target !== null) && (resultData !== null)) {\r\n      // Add the data as a form element.\r\n      var data = new FormData()\r\n      data.append('data', resultData.toString())\r\n\r\n      // Create the request.\r\n      var xhr = new XMLHttpRequest()\r\n      xhr.open('post', target + '?file=subject-' + this._runner._experiment.vars.subject_nr, true)\r\n\r\n      // Send the actual data.\r\n      return xhr.send(data)\r\n    }\r\n  }\r\n}\r\n","/** Class representing an item stack. */\r\nexport default class ItemStack {\r\n  /**\r\n   * Create an stack array for running items.\r\n   * @param {Object} runner - The runner to which the item stack belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._items = [] // Container for all items.\r\n    this._runner = runner // Parent runner attached to the item stack class.\r\n  }\r\n\r\n  /** Clear the entire item stack. */\r\n  clear () {\r\n    // Clears the stack.\r\n    this._items = []\r\n  }\r\n\r\n  /**\r\n   * Push a new item onto the item stack.\r\n   * @param {Object} item - The item to add to the item stack.\r\n   * @param {String} phase - The phase in which the stack exists.\r\n   */\r\n  push (item, phase) {\r\n    // Create the stack item.\r\n    const stackItem = {\r\n      item: item,\r\n      phase: phase\r\n    }\r\n\r\n    // Push the item onto the stack.\r\n    this._items.push(stackItem)\r\n  }\r\n\r\n  /**\r\n   * Pops the last item from the stack.\r\n   * @return {Object} - The last added item from the stack.\r\n   */\r\n  pop () {\r\n    // Pops the last item from the stack.\r\n    return this._items.pop()\r\n  }\r\n}\r\n","// This itemClasses variable is a temporary solution. We should think of a simpler\r\n// method of converting string names (e.g. keyboard_response) to the associated\r\n// class names (e.g. KeyboardResponse), without relying on eval.\r\nimport {\r\n  itemClasses\r\n} from '../system/constants.js'\r\n\r\n/** Class representing an item store. */\r\nexport default class ItemStore {\r\n  /**\r\n   * Create an item store for all OpenSesame items.\r\n   * @param {Object} runner - The runner to which the item store belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set the class private properties.\r\n    this._items = {} // All the unique items in the item store.\r\n    this._runner = runner // Parent runner attached to the item store.\r\n  }\r\n\r\n  /** Clear all the items in the store. */\r\n  _clean_up () {\r\n    // Clear the items.\r\n    this._items = {}\r\n  }\r\n\r\n  /**\r\n   * Checks of the classname is defined within the osweb namespace.\r\n   * @param {String} className - name of the class to check.\r\n   * @return {Boolean} - True if the class is valid within the opsweb context.\r\n   */\r\n  _isClass (className) {\r\n    // Return true if the classname is found in the item classes.\r\n    return (className in itemClasses)\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame element to a sketchpad item.\r\n   * @param {String} type -type of the element to be created.\r\n   * @param {Object} sketchpad - sketchpad item to which the item belongs.\r\n   * @param {String} script - string definition of the ites.\r\n   * @return {Object} - The item which wass created.\r\n   */\r\n  _newElementClass (type, sketchpad, string) {\r\n    // Create the element.\r\n    var element = new itemClasses[type](sketchpad, string)\r\n\r\n    // Return the element\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame item to the experiment.\r\n   * @param {String} type -type of the item to be created.\r\n   * @param {Object} experiment - experiment item to which the item belongs.\r\n   * @param {String} name - name of the item to be created.\r\n   * @param {String} script - string definition of the ites.\r\n   * @return {Object} - The item which was created.\r\n   */\r\n  _newItemClass (type, experiment, name, script) {\r\n    // Create the element.\r\n    var element = new itemClasses[type](experiment, name, script)\r\n\r\n    // Set the type of the item.\r\n    element.type = type\r\n\r\n    // Return the element\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame widget to the experiment.\r\n   * @param {String} type -type of the widget to be created.\r\n   * @param {Object} form - form to which the widget belongs.\r\n   * @param {String} variables - variabled belonging to the widget.\r\n   * @return {Object} - The widget which was created.\r\n   */\r\n  _newWidgetClass (type, form, variables) {\r\n    // Create the widget.\r\n    var widget = new itemClasses[type + '_widget'](form, variables)\r\n\r\n    // Return the element\r\n    return widget\r\n  }\r\n\r\n  /**\r\n   * Executes the prepare and the run phase of an item.\r\n   * @param {String} name - name of the item to prepare and run\r\n   * @param {String} parent - parent of the item.\r\n   */\r\n  execute (name, parent) {\r\n    // Prepare the item.\r\n    this.prepare(name, parent)\r\n    // Remove the prepare phase call of the item from the stack\r\n    this._runner._itemStack.pop()\r\n    // Run the item.\r\n    this.run(name, parent)\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the items in the store.\r\n   * @return {Array} - An array containing all the items.\r\n   */\r\n  items () {\r\n    // Create a list o keys.\r\n    var items = []\r\n    for (var key in this._items) {\r\n      items.push([key, this._items[key]])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return items\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the names of the items in the store.\r\n   * @return {Array} - An array containing all the names.\r\n   */\r\n  keys () {\r\n    // Create a list o keys.\r\n    var keys = []\r\n    for (var key in this._items) {\r\n      keys.push(key)\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return keys\r\n  }\r\n\r\n  /**\r\n   * Create a new OpenSesame item and add it to the item store.\r\n   * @param {String} type - type of item to add.\r\n   * @param {String} name - unique name of the item to add.\r\n   * @param {String} script - script containing definitions of the item.\r\n   */\r\n  newItem (type, name, script) {\r\n    // Check if the element is part of the osweb name space\r\n    if (this._isClass(type) === true) {\r\n      // Add the new item as property of items.\r\n      this._items[name] = this._newItemClass(type, this._runner._experiment, name, script)\r\n\r\n      return this._items[name]\r\n    } else {\r\n      // Unknown class definition, show error message.\r\n      this._runner._debugger.addError('The item \"' + type + '\" is not yet supported by osweb', {\r\n        notify: true,\r\n        url: 'https://osdoc.cogsci.nl/manual/osweb/osweb/#supported-functionality'\r\n      })\r\n      this._runner.exit()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes the prepare phase of an item, and updates the item stack.\r\n   * @param {String} name - name of the item to prepare.\r\n   * @param {String} parent - parent of the item.\r\n   */\r\n  prepare (name, parent) {\r\n    // Add item to the stack.\r\n    this._runner._itemStack.push(name, 'prepare')\r\n\r\n    // Prepare the item.\r\n    this._items[name]._parent = parent\r\n    this._items[name].prepare()\r\n  }\r\n\r\n  /**\r\n   * Executes the run phase of an item, and updates the item stack.\r\n   * @param {String} name - name of the item to run.\r\n   * @param {String} pParent - parent of the item.\r\n   */\r\n  run (name, parent) {\r\n    // Set the current and its parent item.\r\n    this._runner._events._currentItem = this._items[name]\r\n    this._runner._events._currentItem._parent = parent\r\n\r\n    // Executes the run phase of an item, and updates the item stack.\r\n    this._runner._itemStack.push(name, 'run')\r\n    this._items[name].run()\r\n  }\r\n\r\n  /**\r\n   * Create a valid name for an item within the OpenSesame context.\r\n   * @param {String} itemType - type of the item for which a name must be build.\r\n   * @param {String} suggestion - An suggestion how to build up the name.\r\n   * @return {String} - A valid string name for the given item.\r\n   */\r\n  valid_name (itemType, suggestion) {\r\n    // Check the optional parameters.\r\n    suggestion = (typeof suggestion === 'undefined') ? null : suggestion\r\n\r\n    let name\r\n    if (suggestion === null) {\r\n      name = 'new_' + itemType\r\n    } else {\r\n      name = this._runner._experiment.syntax.sanitize(suggestion, true, false)\r\n    }\r\n\r\n    // Create a unique name.\r\n    var i = 1\r\n    var uniqueName = name\r\n    while (Object.prototype.hasOwnProperty.call(this._items, uniqueName) === true) {\r\n      uniqueName = name + '_' + String(i)\r\n      i++\r\n    }\r\n\r\n    // Return function result\r\n    return uniqueName\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the values (items) in the store.\r\n   * @return {Array} - An array containing all the items.\r\n   */\r\n  values () {\r\n    // Create a list o keys.\r\n    var values = []\r\n    for (var key in this._items) {\r\n      values.push(this._items[key])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return values\r\n  }\r\n}\r\n","/** Class representing a file pool. */\r\nexport default class FilePoolStore {\r\n  /**\r\n   * Create a file store object for all stimuli files.\r\n   * @param {Object} runner - The runner to which the file store belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._items = [] // Container for all pool items.\r\n    this._runner = runner // Parent runner attached to the file pool.\r\n  }\r\n\r\n  /** Clear all the items in the store. */\r\n  _clean_up () {\r\n    // Clear the items.\r\n    this._items = []\r\n  }\r\n\r\n  /**\r\n   * General function for adding an item to the pool.\r\n   * @param {Object} item - The item which is added to the pool.\r\n   */\r\n  add (item, new_name) {\r\n    // Check parameter new_name.\r\n    new_name = (typeof new_name === 'undefined') ? null : new_name\r\n\r\n    // Set the new name of the item.\r\n    if (new_name !== null) {\r\n      item.name = new_name\r\n    }\r\n\r\n    // Add the item to the pool.\r\n    this._items.push(item)\r\n\r\n    // Link the item as property\r\n    this[item.name] = item\r\n  }\r\n\r\n  /**\r\n   * Should return the fallback folder bunt osweb this is not functional.\r\n   * @return {null} - always null due to the nature of osweb.\r\n   */\r\n  fallback_folder () {\r\n    // Always returns null because this function is not possible.\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the files in the store.\r\n   * @return {Array} - An array containing all the files.\r\n   */\r\n  files () {\r\n    // Create a list o keys.\r\n    var files = []\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      files.push(this._items[i])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return files\r\n  }\r\n\r\n  /**\r\n   * Renames a file in the pool folder.\r\n   * @param {String} old_path - The olod file name.\r\n   * @param {String} new_path - The new file name.\r\n   */\r\n  rename (old_path, new_path) {\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      // Check for the old_name.\r\n      if (this._items[i].name === old_path) {\r\n        // Set the new property name.\r\n        this[new_path] = this._items[i]\r\n\r\n        // Remove the old property name.\r\n        delete this[old_path]\r\n\r\n        // Set the new name.\r\n        this._items[i].name = new_path\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates and returns the total size in bytes of all thje fioles.\r\n   * @return {Number} - The size of all files in bytes.\r\n   */\r\n  size () {\r\n    // Create a list of keys.\r\n    var size = 0\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      size = size + this._items[i].size\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return size\r\n  }\r\n}\r\n","import {\r\n  isNumber,\r\n  toNumber,\r\n  isObject,\r\n  isString\r\n} from 'lodash'\r\n\r\n/** Class representing a syntax checker. */\r\nexport default class Syntax {\r\n  /**\r\n   * Create a syntax checker within OpenSesame.\r\n   * @param {Object} runner - The runner to which the syntax checker belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._runner = runner // Parent runner attached to the syntax class.\r\n    this.isNumber = isNumber // attach lodash function to class;\r\n  }\r\n\r\n  /**\r\n   * Compile a os condition for further processing.\r\n   * @param {String} cnd - The condition to compile.\r\n   * @param {Boolean} bytecode - The condition is converted to a python AST tree.\r\n   * @return {String} - The compiled condition.\r\n   */\r\n  compile_cond (cnd, bytecode) {\r\n    // Check for conditional paramters.\r\n    bytecode = (typeof bytecode === 'undefined') ? true : bytecode\r\n\r\n    if (cnd.toLowerCase() === 'always') {\r\n      return true\r\n    } else if (cnd.toLowerCase() === 'never') {\r\n      return false\r\n    } else {\r\n      if (cnd[0] === '=') {\r\n        cnd = cnd.substr(1)\r\n      } else {\r\n        cnd = this.remove_quotes(cnd)\r\n        // Scan for literals (strings, ßnumbers, etc).\r\n        cnd = cnd.replace(/(?!(?:and|or|not)\\b)(?:\".*?\"|'.*?'|\\[(?:\\w+?|=.+)\\]|\\b\\w+\\b)/g, (match, offset, string) => {\r\n          if (string[offset] === '[' && string[offset + match.length - 1] === ']') {\r\n            // Check if match is a variable.\r\n            if (string[offset - 1] === '\\\\' && string[offset - 2] !== '\\\\') {\r\n              // Check if the current match is escaped, and simpl\\w+?|=.+y return it untouched if so.\r\n              return `\"${match}\"`\r\n            }\r\n            // Check if the variable contains a Python expression\r\n            if (match[1] === '=') {\r\n              const expression = match.substring(2, match.length - 1)\r\n              const ast = this._runner._pythonParser._parse(expression)\r\n              return this._runner._pythonParser._run_statement(ast)\r\n            }\r\n\r\n            // Return the var. notation otherwise\r\n            const content = match.substring(1, match.length - 1)\r\n            return `var.${content}`\r\n          } else if (['\"', '\\''].includes(string[offset]) &&\r\n            string[offset] === string[offset + match.length - 1]) {\r\n            // Check if match is between quotes. Don't do anything then\r\n            return match\r\n          } else if (!Number.isNaN(Number(match))) {\r\n            return Number(match)\r\n          } else {\r\n            return `\"${match}\"`\r\n          }\r\n        })\r\n\r\n        // Handle operators.\r\n        cnd = cnd.replace(/([^!<>=\\-+*])(=)([^=])/g, '$1==$3')\r\n      }\r\n    }\r\n    if (bytecode === true) {\r\n      return this._runner._pythonParser._parse(cnd)\r\n    } else {\r\n      return cnd\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts a string to a float or integer if possible.\r\n   * @param {String|Number} value -The variable to convert to a number.\r\n   * @return {String|Number} - An number or float if variable could be converted, original value otherwise.\r\n   */\r\n  convert_if_numeric (value) {\r\n    var result = Number(value)\r\n    return Number.isNaN(result) ? value : result\r\n  }\r\n\r\n  /**\r\n   * Counts the quotes occuring inside the provided string.\r\n   * @param {String} line - The string line to count the quotes in.\r\n   * @return {Number} - The number of quotes counted.\r\n   */\r\n  count_quotes (line) {\r\n    var res = 0\r\n    var in_entity = false\r\n    for (var i = 0; i < line.length; i++) {\r\n      if ((line[i] === '\\\\' && !in_entity) || in_entity) { // reverse the flag\r\n        in_entity = !in_entity\r\n      } else if (line[i] === '\"' && !in_entity) { // an unescaped \"\r\n        res += 1\r\n      }\r\n    }\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * Evaluate a given text with optional variable definitions.\r\n   * @param {Boolean|Number|Object|String} txt - The text to evaluate.\r\n   * @param {Object} vars - The variables used for evaluation.\r\n   * @param {Boolean} addQuotes - The add quotes toggle.\r\n   * @return {Boolean|Number|Object|String} - The result of the evaluated text.\r\n   */\r\n  eval_text (text, vars, addQuotes = false) {\r\n    // if pTxt is an object then it is a parsed python expression.\r\n    if (isObject(text)) return this._runner._pythonParser._run_statement(text)\r\n    // if pTxt is already a number simply return it\r\n    if (isNumber(text)) return text\r\n    // Try to convert text to a number. If this succeeds return it.\r\n    if ((text !== '') && !isNaN(toNumber(text))) return toNumber(text)\r\n    text = this.escapeBrackets(text)\r\n    // First, parse the regular variables. These should be parsed recursively\r\n    // to allow for [[nested]variables].\r\n    const reNormal = /\\[(?!=)(\\w+?)\\]/g\r\n    while (text.search(reNormal) >= 0) {\r\n      text = text.replace(reNormal, (match, content, offset, string) => {\r\n        content = this.unescapeBrackets(content)\r\n        let value\r\n        try {\r\n          if ((typeof vars === 'undefined') || (vars === null) || (typeof vars[content] === 'undefined')) {\r\n            value = this._runner._experiment.vars[content]\r\n          } else {\r\n            value = vars[content]\r\n          }\r\n          // Value could still be an expression, so evaluate again\r\n          if (typeof value === 'undefined') {\r\n            throw new ReferenceError(`Variable '${content}' not present in var store`)\r\n          }\r\n          if (isString(value)) {\r\n            if (value !== '') {\r\n              value = this.eval_text(value, vars, addQuotes)\r\n            }\r\n          }\r\n        } catch (err) {\r\n          this._runner._debugger.addError(`Could not resolve variable '${content}': ${err.message}`)\r\n          throw err\r\n        }\r\n        if (addQuotes === true) {\r\n          // Temporary hack for string types.\r\n          return isString(value) ? `\"${value}\"` : value\r\n        }\r\n        return value\r\n      })\r\n    }\r\n    // Next, parse the inline-Python defintions. Those should only be parsed\r\n    // once, not recursively, because they may contain literal [brackets]\r\n    const rePython = /\\[=(.+?)\\]/g\r\n    text = text.replace(rePython, (match, content, offset, string) => {\r\n        // Check if contents of [] start with an =. In this case they should be\r\n        // evaluated as a Python statement\r\n        content = this.unescapeBrackets(content)\r\n        const ast = this._runner._pythonParser._parse(content)\r\n        return this._runner._pythonParser._run_statement(ast)\r\n    })    \r\n    // Try to convert the result to a number again. If this succeeds return it.\r\n    if (text !== '') {\r\n      const nr = toNumber(text)\r\n      if (!isNaN(nr)) return nr\r\n    }\r\n    // Check if content has additional quotes\r\n    return this.strip_slashes(this.unescapeBrackets(text))\r\n  }\r\n\r\n  /**\r\n   * Wraps and escapes a text so that it can safely be embedded in a\r\n        command string. For example:\r\n        He said: \"hi\"\r\n        would become:\r\n        \"He said: \\\"hi\\\"\"\r\n   * @param  {string} s The string to wrap\r\n   * @return {string}   The wrapped string\r\n   */\r\n  safe_wrap (s) {\r\n    // If s is a number, return untouched.\r\n    if (!isNumber(s)) {\r\n      // see if there are any non-alphanumeric characters.\r\n      // Wrap the value in quotes if so.\r\n      if (/[^a-z0-9_]/i.test(s)) {\r\n        s = '\"' + this.add_slashes(s) + '\"'\r\n      }\r\n    } else {\r\n      s = Number(s)\r\n    }\r\n    return s\r\n  }\r\n\r\n  /**\r\n   * Add escape slashes to the given string\r\n   * @param  {string} str The string to escape.\r\n   * @return {string}     The escaped string.\r\n   */\r\n  add_slashes (str) {\r\n    return str.replace(/\\\\/g, '\\\\\\\\')\r\n      // eslint-disable-next-line no-control-regex\r\n      .replace(/\\u0008/g, '\\\\b')\r\n      .replace(/\\t/g, '\\\\t')\r\n      .replace(/\\n/g, '\\\\n')\r\n      .replace(/\\f/g, '\\\\f')\r\n      .replace(/\\r/g, '\\\\r')\r\n      .replace(/'/g, '\\\\\\'')\r\n      .replace(/\"/g, '\\\\\"')\r\n  }\r\n\r\n  /**\r\n   * Strip escape slashes from the given string.\r\n   * @param {String} line - The string to strip from escape backslashes\r\n   * @return {String} - The stripped string.\r\n   */\r\n  strip_slashes (line) {\r\n    // Negative lookbehinds require ECMA2018, therefore we fall\r\n    // back to a more clunky technique\r\n    // return line.replace(/(?<!\\\\)\\\\(?=['\"\\\\])/mg, '')\r\n    return line.replace(/\\\\(?=['\"])/mg, '').replace(/\\\\\\\\/mg, '\\\\')\r\n  }\r\n  \r\n  /**\r\n   * Removes tab indentation from a script, if all lines are indented by a\r\n   * single tab.\r\n   * @param {String} script - A script\r\n   * @return {String} - A dedented script\r\n   */\r\n  dedent (script) {\r\n    const lines = script.split('\\n')\r\n    let dedented = []\r\n    for (const line of lines) {\r\n      if (line[0] !== '\\t') {\r\n        return script\r\n      }\r\n      dedented.push(line.slice(1))\r\n    }\r\n    return dedented.join('\\n')\r\n  }\r\n  \r\n  /**\r\n   * Extracts all multineline variable definitions from an OpenSesame script\r\n   * @param {String} script - The OpenSesame script of an item\r\n   * @return {Array} - An array of key, value mappings\r\n   */\r\n  parse_multiline_vars (script) {\r\n    const pattern = /__(\\w+)__\\n(.*?)\\n__end__/gms\r\n    let match\r\n    let vars = []\r\n    while ((match = pattern.exec(script)) !== null) {\r\n      vars[match[1]] = match[2]\r\n    }\r\n    return vars\r\n  }\r\n\r\n  /**\r\n   * Parses an instruction line of OpenSesame script\r\n   * @param {String} line - The line to parse\r\n   * @return {Array} - An array with command, list of arguments and an object with keyword arguments.\r\n   */\r\n  parse_cmd (line) {\r\n    // Check if quoted strings are properly closed.\r\n    if (this.count_quotes(line) % 2 !== 0) {\r\n      // Unequal number of quotes detected. Can't be right.\r\n      this._runner._debugger.addError('Invalid script definition, parsing error: ' + \" '\" + line + \"'\")\r\n    }\r\n\r\n    // Split the string line.\r\n    var tokens = this.split(line)\r\n    var cmd = tokens.shift()\r\n    var args = []\r\n    var kwargs = {}\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n      var value = tokens[i]\r\n      // Monster regex, splits into key/value pair.\r\n      let parsed = value.split(/(?:(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"))|(?:(\\w+)=(?:(?:(-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)|(\\w+))|(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")))/gm).filter(Boolean)\r\n      // This is a horrifying hack to deal with the fact that the regular\r\n      // expression above is not unicode-safe. This means that a single\r\n      // unquoted word is not seen as a word when it doesn't consist of ascii\r\n      // characters (e.g. text=λάθος). See also:\r\n      // - https://github.com/open-cogsci/osweb/issues/49\r\n      if (parsed.length === 1 && parsed[0].startsWith('text=')) {\r\n        parsed = ['text', parsed[0].slice(5)]\r\n      }\r\n      // parsed will have length 1 if the variable has no keyword, and will be\r\n      // of length 2 (split over the = symbol) if the variable had a keyword\r\n      if (parsed.length < 2) {\r\n        args.push(this.convert_if_numeric(this.sanitize(parsed[0])))\r\n      } else {\r\n        kwargs[parsed[0]] = this.convert_if_numeric(this.sanitize(parsed[1]))\r\n      }\r\n    }\r\n    return [cmd, args, kwargs]\r\n  }\r\n\r\n  create_cmd (cmd, args, kwargs) {\r\n    var result = cmd\r\n    if (typeof (args) !== 'undefined' && args instanceof Array && args.length > 0) {\r\n      for (var i = 0; i < args.length; i++) {\r\n        result += ' ' + this.safe_wrap(args[i])\r\n      }\r\n    }\r\n    if (typeof (kwargs) !== 'undefined' && args instanceof Object) {\r\n      for (var key in kwargs) {\r\n        result += ' ' + key + '=' + this.safe_wrap(kwargs[key])\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Remove additional quotes from a string line.\r\n   * @param {String} line - The string width additional quotes.\r\n   * @return {String} - Updated string.\r\n   */\r\n  remove_quotes (line) {\r\n    if (line === '\"\"') {\r\n      return ''\r\n    } else if ((line[0] === '\"') && (line[line.length - 1] === '\"')) {\r\n      return line.slice(1, line.length - 1)\r\n    } else if ((line[0] === \"'\") && (line[line.length - 1] === \"'\")) {\r\n      return line.slice(1, line.length - 1)\r\n    } else {\r\n      return line\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove invalid characters (notably quotes) from the string.\r\n   * @param {String} line - The string to restrecut.\r\n   * @param {Boolean} strict - If true use strict conversion (not implemented yet).\r\n   * @param {Boolean} allowVars -If true allow variable definitions in the string (not implemented yet).\r\n   * @return {String} - The restructured string.\r\n   */\r\n  sanitize (line, strict, allowVars) {\r\n    // Replace quotes.\r\n    line = line.replace(/^\"(.+(?=\"$))\"$/, '$1')\r\n\r\n    // Replace slashes and return result.\r\n    return this.strip_slashes(line)\r\n  }\r\n\r\n  /**\r\n   * Return an array with tokens ignoring whitespaces within.\r\n   * @param {String} line - line the line to split in tokens\r\n   * @return {Array} - The list of tokens\r\n   */\r\n  split (line) {\r\n    var result = line.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g)\r\n    return (result !== null) ? result : []\r\n  }\r\n\r\n  /**\r\n   * Replaces all escaped brackets by a placeholder string of the format\r\n   * `%%OPEN:1:%%`\r\n   * @param {String} text - The text to escape.\r\n   * @return {String} - The escaped text.\r\n   */\r\n  escapeBrackets (text) {\r\n    const result = text.replace(/\\\\+[[\\]]/g, (match, content, offset, str) => {\r\n      const NBrackets = match.length - 1\r\n      if (NBrackets % 2 === 1) {\r\n        const chartype = match[match.length - 1] === '[' ? 'OPEN' : 'CLOSE'\r\n        return `%%${chartype}:${NBrackets}:%%`\r\n      }\r\n      return match\r\n    })\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Replaces all placeholder strings by escaped brackets.\r\n   * `%%OPEN:1:%%`\r\n   * @param {String} text - The text to unescape.\r\n   * @return {String} - The unescaped text.\r\n   */\r\n  unescapeBrackets (text) {\r\n    const result = text.replace(/%%(OPEN|CLOSE):\\d+:%%/g, (match, content, offset, str) => {\r\n      const chartype = match.substr(2, 4) === 'OPEN' ? '[' : ']'\r\n      const i1 = match.indexOf(':') + 1\r\n      const i2 = match.lastIndexOf(':')\r\n      const nBrackets = parseInt(match.substr(i1, i2 - i1))\r\n      return Array(nBrackets).join('\\\\') + chartype\r\n    })\r\n    return result\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\n\r\n/** Class implementing a python math library. */\r\nexport default class PythonMath {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n\r\n    // Set class properties.\r\n    this.e = Math.E\r\n    this.pi = Math.PI\r\n  }\r\n\r\n  /** Initialization phase of the python_math class. */\r\n  _initialize () {\r\n    // Insert math library methods into the python interpreter.\r\n    filbert.pythonRuntime.imports.math = {}\r\n    filbert.pythonRuntime.imports.math.ceil = this.ceil\r\n    filbert.pythonRuntime.imports.math.copysign = this.copysign\r\n    filbert.pythonRuntime.imports.math.fabs = this.fabs\r\n    filbert.pythonRuntime.imports.math.factorial = this.factorial\r\n    filbert.pythonRuntime.imports.math.floor = this.floor\r\n    filbert.pythonRuntime.imports.math.fmod = this.fmod\r\n    filbert.pythonRuntime.imports.math.frexp = this.frexp\r\n    filbert.pythonRuntime.imports.math.fsum = this.fsum\r\n    filbert.pythonRuntime.imports.math.acos = this.acos\r\n    filbert.pythonRuntime.imports.math.asin = this.asin\r\n    filbert.pythonRuntime.imports.math.atan = this.atan\r\n    filbert.pythonRuntime.imports.math.atan2 = this.atan2\r\n    filbert.pythonRuntime.imports.math.cos = this.cos\r\n    filbert.pythonRuntime.imports.math.hypot = this.hypot\r\n    filbert.pythonRuntime.imports.math.sin = this.sin\r\n    filbert.pythonRuntime.imports.math.tan = this.tan\r\n    filbert.pythonRuntime.imports.math.e = this.e\r\n    filbert.pythonRuntime.imports.math.pi = this.pi\r\n  }\r\n\r\n  /** Import 'ceil' function for osweb script. */\r\n  ceil (x) {\r\n  }\r\n\r\n  /** Import 'copysign' function for osweb script. */\r\n  copysign (x, y) {\r\n  }\r\n\r\n  /** Import 'fabs' function for osweb script. */\r\n  fabs (x) {\r\n  }\r\n\r\n  /** Import 'factorial' function for osweb script. */\r\n  factorial (x) {\r\n  }\r\n\r\n  /** Import 'floor' function for osweb script. */\r\n  floor (x) {\r\n    return Math.floor(x)\r\n  }\r\n\r\n  /** Import 'fmod' function for osweb script. */\r\n  fmod (x, y) {\r\n  }\r\n\r\n  /** Import 'frexp' function for osweb script. */\r\n  frexp (x) {\r\n  }\r\n\r\n  /** Import 'fsum' function for osweb script. */\r\n  fsum (iterable) {\r\n  }\r\n\r\n  /** Import 'acos' function for osweb script. */\r\n  acos (x) {\r\n    return Math.acos(x)\r\n  }\r\n\r\n  /** Import 'asin' function for osweb script. */\r\n  asin (x) {\r\n    return Math.asin(x)\r\n  }\r\n\r\n  /** Import 'atan' function for osweb script. */\r\n  atan (x) {\r\n    return Math.atan(x)\r\n  }\r\n\r\n  /** Import 'atan2' function for osweb script. */\r\n  atan2 (y, x) {\r\n    return Math.atan2(y, x)\r\n  }\r\n\r\n  /** Import 'cos' function for osweb script. */\r\n  cos (x) {\r\n    return Math.cos(x)\r\n  }\r\n\r\n  /** Import 'hypot' function for osweb script. */\r\n  hypot (x, y) {\r\n  }\r\n\r\n  /** Import 'sin' function for osweb script. */\r\n  sin (x) {\r\n    return Math.sin(x)\r\n  }\r\n\r\n  /** Import 'tan' function for osweb script. */\r\n  tan (x) {\r\n    return Math.tan(x)\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\nimport Canvas from '../backends/canvas.js'\r\n\r\n/** Class implementing a python opensesame library. */\r\nexport default class PythonOpenSesame {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n  }\r\n\r\n  /** Initialization phase of the python_library class. */\r\n  _initialize () {\r\n    this._objects = {}\r\n\r\n    // Insert clock class into the python interpreter.\r\n    filbert.pythonRuntime.imports.clock = {}\r\n    filbert.pythonRuntime.imports.clock.sleep = this._runner._experiment.clock.sleep\r\n    filbert.pythonRuntime.imports.clock.time = this._runner._experiment.clock.time\r\n\r\n    // Insert log class into the python interpreter.\r\n    filbert.pythonRuntime.imports.log = {}\r\n    filbert.pythonRuntime.imports.log.close = this._runner._experiment._log.close\r\n    filbert.pythonRuntime.imports.log.open = this._runner._experiment._log.open\r\n    filbert.pythonRuntime.imports.log.write = this._runner._experiment._log.write\r\n    filbert.pythonRuntime.imports.log.write_vars = this._runner._experiment._log.write_vars\r\n\r\n    // Insert var class into the python interpreter.\r\n    filbert.pythonRuntime.imports.var = this._runner._experiment.vars\r\n    filbert.pythonRuntime.imports.var.get = this._runner._experiment.vars.get\r\n    filbert.pythonRuntime.imports.var.has = this._runner._experiment.vars.has\r\n    filbert.pythonRuntime.imports.var.set = this._runner._experiment.vars.set\r\n    filbert.pythonRuntime.imports.var.unset = this._runner._experiment.vars.unset\r\n\r\n    // Insert general opensesame methods into the python interpreter.\r\n    filbert.pythonRuntime.functions.reset_feedback = this._runner._experiment.reset_feedback\r\n    filbert.pythonRuntime.functions.set_subject_nr = this._runner._experiment.set_subject\r\n    filbert.pythonRuntime.functions.canvas = this.canvas\r\n    filbert.pythonRuntime.functions.copy_sketchpad = this.copy_sketchpad\r\n    filbert.pythonRuntime.functions.keyboard = this.keyboard\r\n    filbert.pythonRuntime.functions.mouse = this.mouse\r\n    filbert.pythonRuntime.functions.pause = this.pause\r\n    filbert.pythonRuntime.functions.set_subject_nr = this.set_subject_nr\r\n    filbert.pythonRuntime.functions.sometimes = this.sometimes\r\n    filbert.pythonRuntime.functions.synth = this.synth\r\n    filbert.pythonRuntime.functions.xy_circle = this.xy_circle\r\n    filbert.pythonRuntime.functions.xy_distance = this.xy_distance\r\n    filbert.pythonRuntime.functions.xy_from_polar = this.xy_from_polar\r\n    filbert.pythonRuntime.functions.xy_grid = this.xy_grid\r\n    filbert.pythonRuntime.functions.xy_random = this.xy_random\r\n    filbert.pythonRuntime.functions.xy_to_polar = this.xy_to_polar\r\n  }\r\n\r\n  /** Import 'canvas' function for osweb script. */\r\n  canvas (auto_prepare, style_args) {\r\n    return new Canvas(this._runner._experiment, auto_prepare, style_args)\r\n  }\r\n\r\n  /** Import 'copy_sketchpad' function for osweb script. */\r\n  copy_sketchpad (name) {\r\n  }\r\n\r\n  /** Import 'keyboard' function for osweb script. */\r\n  keyboard (resp_args) {\r\n  }\r\n\r\n  /** Import 'mouse' function for osweb script. */\r\n  mouse (resp_args) {\r\n  }\r\n\r\n  /** Import 'pause' function for osweb script. */\r\n  pause (test) {\r\n  }\r\n\r\n  /** Import 'sampler' function for osweb script. */\r\n  sampler (src, playback_args) {\r\n  }\r\n\r\n  /** Import 'set_response' function for osweb script. */\r\n  set_response (response, response_time, correct) {\r\n  }\r\n\r\n  /** Import 'sometimes' function for osweb script. */\r\n  sometimes (p) {\r\n  }\r\n\r\n  /** Import 'synth' function for osweb script. */\r\n  synth (osc, freq, length, attack, decay) {\r\n  }\r\n\r\n  /** Import 'xy_circle' function for osweb script. */\r\n  xy_circle (n, rho, phi0, pole) {\r\n  }\r\n\r\n  /** Import 'xy_distance' function for osweb script. */\r\n  xy_distance (x1, y1, x2, y2) {\r\n  }\r\n\r\n  /** Import 'xy_from_polar' function for osweb script. */\r\n  xy_from_polar (rho, phi, pole) {\r\n  }\r\n\r\n  /** Import 'xy_grid' function for osweb script. */\r\n  xy_grid (n, spacing, pole) {\r\n  }\r\n\r\n  /** Import 'xy_random' function for osweb script. */\r\n  xy_random (n, width, height, min_dist, pole) {\r\n  }\r\n\r\n  /** Import 'xy_to_polar' function for osweb script. */\r\n  xy_to_polar (x, y, pole) {\r\n  }\r\n}\r\n","import filbert from 'filbert'\n\n/** Class implementing a python random library. */\nexport default class PythonRandom {\n  /**\n     * Create a python AST runner.\n     * @param {Object} runner - The runner to which the library belongs.\n     */\n  constructor (runner) {\n    // Set class parameter properties.\n    this._runner = runner // Parent runner attached to the library.\n  }\n\n  /** Initialization phase of the python_library class. */\n  _initialize () {\n    // Insert math library methods into the python interpreter.\n    filbert.pythonRuntime.imports.random = {}\n    filbert.pythonRuntime.imports.random.random = this.random\n    filbert.pythonRuntime.imports.random.shuffle = this.shuffle\n  }\n\n  /** Import 'Random' function for osweb script. */\n  random () {\n    return Math.random()\n  }\n\n  /** Import 'Shuffle' function for osweb script. */\n  shuffle (x, random) {\n    // Fisher-Yates (aka Knuth) Shuffle.\n    var currentIndex = x.length; var temporaryValue; var randomIndex\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = x[currentIndex]\n      x[currentIndex] = x[randomIndex]\n      x[randomIndex] = temporaryValue\n    }\n    return x\n  }\n}\n","/** Class implementing a python string library. */\r\nexport default class PythonString {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n  }\r\n\r\n  /** Initialization phase of the python_library class. */\r\n  _initialize () {\r\n  }\r\n\r\n  /** Import 'capitalize' function for osweb script. */\r\n  capitalize () {\r\n  }\r\n\r\n  /** Import 'center' function for osweb script. */\r\n  center (width, fillchar) {\r\n  }\r\n\r\n  /** Import 'upper' function for osweb script. */\r\n  upper () {\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\nimport PythonMath from './python_math.js'\r\nimport PythonOpenSesame from './python_opensesame.js'\r\nimport PythonRandom from './python_random.js'\r\nimport PythonString from './python_string.js'\r\nimport toNumber from 'lodash/toNumber'\r\n\r\n/** Class implementing a python AST interpreter. */\r\nexport default class PythonParser {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the AST object belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the AST object.\r\n\r\n    // Set class properties.\r\n    this.python_math = new PythonMath(this._runner)\r\n    this.python_opensesame = new PythonOpenSesame(this._runner)\r\n    this.python_random = new PythonRandom(this._runner)\r\n    this.python_string = new PythonString(this._runner)\r\n\r\n    // Definition of private properties.\r\n    this._classes = {} // Accessible classes within the script code.\r\n    this._function_stack = [] // Function call stack.\r\n    this._global_return_value = null // Global return value for blocking calls.\r\n    this._inline_script = null // Parent inline_script item.\r\n    this._node = null // Current active node.\r\n    this._onConsole = null\r\n    this._stack = 0 // Stack counter (hack to precent stack overflow).\r\n    this._statement = null // process one statement or an script.\r\n    this._status = 0 // Status of the walker.\r\n    this._variables = {} // Object containing all global objects and variables.\r\n  }\r\n\r\n  /** Initialization phase of the python class. */\r\n  _initialize () {\r\n    // Set the python variable connections with opensesame.\r\n    this._variables.clock = this._runner._experiment.clock\r\n    this._variables.exp = this._runner._experiment\r\n    this._variables.items = this._runner._itemStore\r\n    this._variables.pool = this._runner._pool\r\n    this._variables.var = this._runner._experiment.vars\r\n\r\n    // Set the console handler.\r\n    if (this._runner._onConsole !== null) {\r\n      this._onConsole = this._runner._onConsole\r\n    }\r\n\r\n    // Initialize internal libraries to the interpreter.\r\n    this.python_math._initialize()\r\n    this.python_opensesame._initialize()\r\n    this.python_random._initialize()\r\n    this.python_string._initialize()\r\n  }\r\n\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {String} script - Parse a python script using the filbert library.\r\n     */\r\n  _parse (script) {\r\n    // Check if the script exists.\r\n    if (script !== '\"\"') {\r\n      var locations = false\r\n      var parseFn = filbert.parse\r\n      var ranges = false\r\n\r\n      // Try to parse the script.\r\n      try {\r\n        var code = script\r\n        var ast = parseFn(code, {\r\n          locations: locations,\r\n          ranges: ranges\r\n        })\r\n        return ast\r\n      } catch (e) {\r\n        this._runner._debugger.addError('Script parsing error: ' + e.message)\r\n        return null\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get the context part of a identifier (before the dot '.').\r\n     * @param {String} identifier - Full name of the identifier.\r\n     */\r\n  _get_context (identifier) {\r\n    // Split the identifer\r\n    var items = identifier.value.split('.')\r\n\r\n    if ((items[0] === '__pythonRuntime') && (items[1] === 'imports')) {\r\n      return this._variables[items[2]]\r\n    } else {\r\n      // Return the object context\r\n      if (this._variables[items[0]] !== undefined) {\r\n        return this._variables[items[0]]\r\n      } else {\r\n        return window[items[0]]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get an element form a library of the variable container.\r\n     * @param {String} element - Full name of the element to retrieve.\r\n     * @return {Object} - The given element found in the context.\r\n     */\r\n  _get_element (element) {\r\n    // Split the identifier name space.\r\n    var items = element.value.split('.')\r\n\r\n    // Check if the identifier is part of the internal scope.\r\n    if (items[0] === '__pythonRuntime') {\r\n      // Check if the identifier is part of the import scope.\r\n      if (items[1] === 'imports') {\r\n        var import_lib = filbert.pythonRuntime.imports[items[2]]\r\n        const value = import_lib[items[3]]\r\n        // Attempt to convert the value to a number,\r\n        // if this fails return the original value\r\n        return isNaN(toNumber(value)) ? value : toNumber(value)\r\n      } else {\r\n        var default_lib = filbert.pythonRuntime[items[1]]\r\n        return default_lib[items[2]]\r\n      }\r\n    } else {\r\n      // No internal scope, check if it is defined in the global scope\r\n      if (this._variables[items[0]] !== undefined) {\r\n        if (items.length === 1) {\r\n          return this._variables[items[0]]\r\n        } else {\r\n          return this._variables[items[0]][items[1]]\r\n        }\r\n      } else {\r\n        if (window[items[0]] !== undefined) {\r\n          if (items.length === 1) {\r\n            return window[items[0]]\r\n          } else {\r\n            return window[items[0]][items[1]]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get the value of an element form a library of the variable container.\r\n     * @param {String} element - Full name of the element to retrieve.\r\n     * @return {Boolean|Number|Object|String} - The value of the given element.\r\n     */\r\n  _get_element_value (element) {\r\n    switch (element.type) {\r\n    case 'identifier':\r\n      // Split the identifier name space.\r\n      var items = element.value.split('.')\r\n\r\n      // Set the element value in the global scope.\r\n      if (items.length === 1) {\r\n        if (this._variables[items[0]] !== undefined) {\r\n          return this._variables[items[0]]\r\n        } else {\r\n          return window[items[0]]\r\n        }\r\n      } else {\r\n        if (items[0].indexOf('__filbertRight') !== -1) {\r\n          if (items[1].indexOf('__filbertIndex') !== -1) {\r\n            var container = this._variables[items[0]]\r\n            var index = this._variables[items[1]]\r\n            return container[index]\r\n          } else {\r\n            if (this._variables[items[0]] !== undefined) {\r\n              return this._variables[items[0]][items[1]]\r\n            } else {\r\n              return window[items[0]][items[1]]\r\n            }\r\n          }\r\n        } else if (items[0] === '__pythonRuntime') {\r\n          if (items[1] === 'imports') {\r\n            const import_lib = filbert.pythonRuntime.imports[items[2]]\r\n            const value = import_lib[items[3]]\r\n            // Attempt to convert the value to a number,\r\n            // if this fails return the original value\r\n            return isNaN(toNumber(value)) ? value : toNumber(value)\r\n          } else {\r\n            var default_lib = filbert.pythonRuntime[items[1]]\r\n            return default_lib[items[2]]\r\n          }\r\n        } else {\r\n          if (this._variables[items[0]] !== undefined) {\r\n            return this._variables[items[0]][items[1]]\r\n          } else {\r\n            return window[items[0]][items[1]]\r\n          }\r\n        }\r\n      }\r\n    case 'literal':\r\n      // return the value of the literal.\r\n      return element.value\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set the value of an element.\r\n     * @param {String} element - Full name of the element to set.\r\n     * @param {Boolean|Number|Object|String} value - The value for the given element.\r\n     */\r\n  _set_element_value (element, value) {\r\n    // Split the identifier name space.\r\n    var items = element.value.split('.')\r\n\r\n    // Set the element value in the global scope.\r\n    if (items.length === 1) {\r\n      if (window[items[0]] !== undefined) {\r\n        window[items[0]] = value\r\n      } else {\r\n        this._variables[items[0]] = value\r\n      }\r\n    } else {\r\n      if (window[items[0]] !== undefined) {\r\n        window[items[0]][items[1]] = value\r\n      } else {\r\n        this._variables[items[0]][items[1]] = value\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set the given node to the current node.\r\n     * @param {Object} node - The node to set as current node.\r\n     */\r\n  _set_node (node) {\r\n    // Set the current node as the parent node\r\n    node.parent = this._node\r\n\r\n    // Set the new node as the current node.\r\n    this._node = node\r\n  }\r\n\r\n  /**\r\n     * Set the return value of a node.\r\n     * @param {Boolean|Number|Object|String} value - The return value for the processed node.\r\n     */\r\n  _set_return_value (value) {\r\n    // Create or acces the return_values array.\r\n    this._node.parent.return_values = (typeof this._node.parent.return_values === 'undefined') ? [] : this._node.parent.return_values\r\n\r\n    // Push the value.\r\n    this._node.parent.return_values.push(value)\r\n  }\r\n\r\n  /** Process an AST array expression. */\r\n  _array_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.elements.length) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.elements[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Redefine the return values.\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        this._node.return_values[i] = this._get_element_value(this._node.return_values[i])\r\n      }\r\n      var return_value = { type: 'literal', value: this._node.return_values }\r\n\r\n      // Set the return value.\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST assignment expression. */\r\n  _assignment_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // process id.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process init.\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // define variables\r\n      var tmp_value\r\n\r\n      // Select binary operator.\r\n      switch (this._node.operator) {\r\n      case '=':\r\n        // Process the init value.\r\n        this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      case '-=':\r\n        tmp_value = this._get_element_value(this._node.return_values[0])\r\n        this._set_element_value(this._node.return_values[0], tmp_value - this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      case '/=':\r\n        tmp_value = this._get_element_value(this._node.return_values[0])\r\n        this._set_element_value(this._node.return_values[0], tmp_value / this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      case '%=':\r\n        tmp_value = this._get_element_value(this._node.return_values[0])\r\n        this._set_element_value(this._node.return_values[0], tmp_value % this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      }\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST binary expression. */\r\n  _binary_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process property\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // define variables.\r\n      var left = this._get_element_value(this._node.return_values[0])\r\n      var right = this._get_element_value(this._node.return_values[1])\r\n      var return_value = { type: 'literal' }\r\n\r\n      // Select binary operator.\r\n      switch (this._node.operator) {\r\n      case '-':\r\n        return_value.value = left - right\r\n        break\r\n      case '/':\r\n        return_value.value = left / right\r\n        break\r\n      case '==':\r\n        return_value.value = (left === right)\r\n        break\r\n      case '!=':\r\n        return_value.value = (left !== right)\r\n        break\r\n      case '>':\r\n        return_value.value = (left > right)\r\n        break\r\n      case '<':\r\n        return_value.value = (left < right)\r\n        break\r\n      case '>=':\r\n        return_value.value = (left >= right)\r\n        break\r\n      case '<=':\r\n        return_value.value = (left <= right)\r\n        break\r\n      case '%':\r\n        if ((typeof left === 'number') && (typeof right === 'number')) {\r\n          return_value.value = left % right\r\n        } else {\r\n          return_value.value = left.replace(/%s/g, right)\r\n        }\r\n        break\r\n      case 'instanceof':\r\n        return_value.value = left instanceof right\r\n        break\r\n      }\r\n\r\n      // Set the return value.\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST block statement. */\r\n  _block_statement () {\r\n    // Initialize node specific properties.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if ((this._node.index < this._node.body.length) && (this._node.break === false)) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.body[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Reset node index and return to the parent node.\r\n      if (this._node.break === true) {\r\n        this._node.break = false\r\n        this._node.parent.break = true\r\n      }\r\n\r\n      this._node.index = 0\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST break statement. */\r\n  _break_statement () {\r\n    // Set break flag for parent element.\r\n    this._node.parent.break = true\r\n\r\n    // Return to the parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST call expression. */\r\n  _call_expression () {\r\n    // Initialize status properties.\r\n    this._node.arguments = (typeof this._node.arguments === 'undefined') ? [] : this._node.arguments\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process arguments and caller.\r\n      if (this._node.index < this._node.arguments.length) {\r\n        // Set current node to next node in list.\r\n        this._node.index++\r\n        this._set_node(this._node.arguments[this._node.index - 1])\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Set parent node.\r\n        this._node.status = 1\r\n        this._set_node(this._node.callee)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 1:\r\n      // Get the first return value, which is the name of the caller element.\r\n      var return_value = this._node.return_values.pop()\r\n\r\n      // Get the arguments used on the caller element.\r\n      var tmp_arguments = []\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        tmp_arguments.push(this._get_element_value(this._node.return_values[i]))\r\n      }\r\n\r\n      var caller = this._get_element(return_value)\r\n      var context = this._get_context(return_value)\r\n\r\n      if ((return_value.value === 'sleep') || (return_value.value === '__pythonRuntime.imports.clock.sleep')) {\r\n        // Adjust the status to special.\r\n        this._node.status = 2\r\n\r\n        // Check the context.\r\n        if (typeof context === 'undefined') {\r\n          context = this\r\n        }\r\n\r\n        // Execute the blocking call.\r\n        caller.apply(context, tmp_arguments)\r\n      } else {\r\n        // Check the context.\r\n        if (typeof context === 'undefined') {\r\n          context = this\r\n        }\r\n\r\n        // Execute the call, check first for internal function call.\r\n        if (this._node.callee.type === 'FunctionExpression') {\r\n          return_value = { type: 'literal', value: caller }\r\n        } else {\r\n          return_value = { type: 'literal', value: caller.apply(context, tmp_arguments) }\r\n        }\r\n\r\n        // Set the return value.\r\n        this._set_return_value(return_value)\r\n\r\n        // Reset node index and return to the parent node.\r\n        this._node.index = 0\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 2:\r\n      // Special state used when calling a blocking method (sleep, clock.sleep, keyboard.get_key(), mouse.get_click).\r\n      this._set_return_value(this.global_return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST empty statment. */\r\n  _empty_statement () {\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n\r\n    // Return to the node processessor.\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST expression statement. */\r\n  _expression_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.expression)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Set parent node.\r\n      this._node.status = 0\r\n      this._node = this._node.parent\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST for statement. */\r\n  _for_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.init)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process object.\r\n      this._node.status = 2\r\n      this._set_node(this._node.test)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Check if the test node has returned true.\r\n      if (this._node.return_values[0].value === true) {\r\n        // Process object.\r\n        this._node.status = 3\r\n        this._node.return_values = []\r\n        this._set_node(this._node.body)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Range has ended.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 3:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.update)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST for in statement. */\r\n  _for_in_statement () {\r\n    // Initialize status property.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process object.\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Retrieve the range on which the loop travels.\r\n      var tmp_range = this._get_element_value(this._node.return_values[1])\r\n\r\n      // Execute the range.\r\n      if (this._node.index < tmp_range.length) {\r\n        // Set the value of the range.\r\n        this._set_element_value(this._node.return_values[0], tmp_range[this._node.index])\r\n\r\n        // Increase the index.\r\n        this._node.index++\r\n\r\n        // Execute the body.\r\n        this._set_node(this._node.body)\r\n        this._process_nodes()\r\n      } else {\r\n        this._node.index = 0\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST function expression. */\r\n  _function_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process defaults.\r\n      this._node.status = 1\r\n      this._set_node(this._node.body)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Remove the last return value from the global function stack.\r\n      var return_value = this._function_stack.pop()\r\n\r\n      // Set the return value\r\n      this._set_return_value(return_value)\r\n\r\n      // Set parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST identifier. */\r\n  _identifier () {\r\n    // Retrieve the identifier information.\r\n    const return_value = { type: 'identifier', value: this._node.name }\r\n\r\n    // Set the return value.\r\n    this._set_return_value(return_value)\r\n\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST if statement. */\r\n  _if_statement () {\r\n    // Initialize status property.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.test)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Check if expression is true.\r\n      if (this._node.return_values[0].value === true) {\r\n        this._node.status = 2\r\n        this._set_node(this._node.consequent)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      } else if (this._node.alternate !== null) {\r\n        this._node.status = 2\r\n        this._set_node(this._node.alternate)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      } else {\r\n        this._node.status = 2\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 2:\r\n      // Set parent node.\r\n      if (this._node.break === true) {\r\n        this._node.break = false\r\n        this._node.parent.break = true\r\n      }\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST literal. */\r\n  _literal () {\r\n    // Retrieve the identifier information.\r\n    var return_value = { type: 'literal', value: this._node.value }\r\n\r\n    // Set the return value.\r\n    this._set_return_value(return_value)\r\n\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST logical expression. */\r\n  _logical_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process property\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // define variables.\r\n      var left = this._get_element_value(this._node.return_values[0])\r\n      var right = this._get_element_value(this._node.return_values[1])\r\n      var return_value = { type: 'literal' }\r\n\r\n      // Select binary operator.\r\n      switch (this._node.operator) {\r\n      case '&&':\r\n        return_value.value = left && right\r\n        break\r\n      case '||':\r\n        return_value.value = left || right\r\n        break\r\n      }\r\n\r\n      // Set the return value.\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST member expression */\r\n  _member_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.object)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process property\r\n      this._node.status = 2\r\n      this._set_node(this._node.property)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Build the combing return value.\r\n      var return_value = { type: 'identifier', value: this._node.return_values[0].value + '.' + this._node.return_values[1].value }\r\n\r\n      // Set the return value\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST new expression. */\r\n  _new_expression () {\r\n    // Initialize status properties.\r\n    this._node.arguments = (typeof this._node.arguments === 'undefined') ? [] : this._node.arguments\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Process arguments and caller.\r\n      if (this._node.index < this._node.arguments.length) {\r\n        // Set current node to next node in list.\r\n        this._node.index++\r\n        this._set_node(this._node.arguments[this._node.index - 1])\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Set parent node.\r\n        this._node.status = 1\r\n        this._set_node(this._node.callee)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      }\r\n    } else {\r\n      // Get the caller and context element.\r\n      let returnValue = this._node.return_values.pop()\r\n      var caller = this._get_element(returnValue)\r\n      var context = this._get_context(returnValue)\r\n\r\n      // Create the aruments array.\r\n      var tmp_arguments = []\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        tmp_arguments.push(this._get_element_value(this._node.return_values[i]))\r\n      }\r\n\r\n      // Execute the call.\r\n      returnValue = { type: 'literal', value: caller.apply(context, tmp_arguments) }\r\n\r\n      // Set the return value\r\n      this._set_return_value(returnValue)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST program. */\r\n  _program () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.body.length) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.body[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Change status and end the running process.\r\n      this._node.index = 0\r\n      this._status = 2\r\n\r\n      // Complete the inline item.\r\n      if (this._inline_script !== null) {\r\n        this._inline_script._complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Process an AST return statement. */\r\n  _return_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    let returnValue\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Set return value.\r\n      returnValue = { type: 'identifier', value: this._node.return_values[0].value }\r\n\r\n      // Set the return value\r\n      this._function_stack.push(returnValue)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST unary expression. */\r\n  _unary_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      var return_value = { type: 'literal' }\r\n\r\n      // process the operator.\r\n      switch (this._node.operator) {\r\n      case '!' :\r\n        return_value.value = !(this._node.return_values[0].value)\r\n        break\r\n      case '-' :\r\n        return_value.value = -(this._node.return_values[0].value)\r\n        break\r\n      }\r\n\r\n      // Set the return value\r\n      this._set_return_value(return_value)\r\n\r\n      // Return to the node processessor.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST update expression. */\r\n  _update_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Process the init value.\r\n      switch (this._node.operator) {\r\n      case '++' :\r\n        this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[0]) + 1)\r\n        break\r\n      }\r\n\r\n      // Return to the node processessor.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST variable declaration. */\r\n  _variable_declaration () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.declarations.length) {\r\n      // Set current node to next node in list.\r\n      this._node.index++\r\n      this._set_node(this._node.declarations[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST variable declarator. */\r\n  _variable_declarator () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // process id.\r\n      this._node.status = 1\r\n      this._set_node(this._node.id)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process init.\r\n      this._node.status = 2\r\n      this._set_node(this._node.init)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Process the init value.\r\n      this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[1]))\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST while statement. */\r\n  _while_statement () {\r\n    // Initialize status property.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Check for the break flag.\r\n      if (this._node.break === true) {\r\n        this._node.break = false\r\n        // Set parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      } else {\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.test)\r\n\r\n        // Return to the node processeor.\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 1:\r\n      // Check if expression is true.\r\n      if (this._node.return_values[0].value === true) {\r\n        // Reset the test\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n\r\n        // execute the body.\r\n        this._set_node(this._node.body)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Set parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process all AST nodes. */\r\n  _process_nodes () {\r\n    // Select type of processing.\r\n    if (this._statement === null) {\r\n      // Script processing.\r\n      this._process_nodes_jump()\r\n    } else {\r\n      if (this._node === this._statement) {\r\n        // Return the result value of the expression.\r\n        return (this._node.body[0].return_values[0].value)\r\n      } else {\r\n        // Statement processing.\r\n        this._process_nodes_timeout()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Process a single AST nodes (timeout is for non-blocking) */\r\n  _process_nodes_jump () {\r\n    // Increase the stack counter.\r\n    this._stack++\r\n    if (this._stack > 500) {\r\n      // Clear the stack.\r\n      this._stack = 0\r\n\r\n      // Process nodes with a timeout (this is a hack for clearing the browser cache.\r\n      setTimeout(function () {\r\n        this._process_nodes_timeout()\r\n      }.bind(this), 1)\r\n    } else {\r\n      // Process the nodes without a timeout.\r\n      this._process_nodes_timeout()\r\n    }\r\n  }\r\n\r\n  /** Process a single AST nodes (timeout is for non-blocking) */\r\n  _process_nodes_timeout () {\r\n    // Select the type of node to process\r\n    switch (this._node.type) {\r\n    case 'ArrayExpression':\r\n      this._array_expression()\r\n      break\r\n    case 'AssignmentExpression':\r\n      this._assignment_expression()\r\n      break\r\n    case 'BinaryExpression':\r\n      this._binary_expression()\r\n      break\r\n    case 'BlockStatement':\r\n      this._block_statement()\r\n      break\r\n    case 'BreakStatement':\r\n      this._break_statement()\r\n      break\r\n    case 'CallExpression':\r\n      this._call_expression()\r\n      break\r\n    case 'EmptyStatement':\r\n      this._empty_statement()\r\n      break\r\n    case 'ExpressionStatement':\r\n      this._expression_statement()\r\n      break\r\n    case 'ForStatement':\r\n      this._for_statement()\r\n      break\r\n    case 'ForInStatement':\r\n      this._for_in_statement()\r\n      break\r\n    case 'FunctionExpression':\r\n      this._function_expression()\r\n      break\r\n    case 'Identifier':\r\n      this._identifier()\r\n      break\r\n    case 'IfStatement':\r\n      this._if_statement()\r\n      break\r\n    case 'Literal':\r\n      this._literal()\r\n      break\r\n    case 'LogicalExpression':\r\n      this._logical_expression()\r\n      break\r\n    case 'MemberExpression':\r\n      this._member_expression()\r\n      break\r\n    case 'NewExpression':\r\n      this._new_expression()\r\n      break\r\n    case 'Program':\r\n      this._program()\r\n      break\r\n    case 'ReturnStatement':\r\n      this._return_statement()\r\n      break\r\n    case 'UnaryExpression':\r\n      this._unary_expression()\r\n      break\r\n    case 'UpdateExpression':\r\n      this._update_expression()\r\n      break\r\n    case 'VariableDeclaration':\r\n      this._variable_declaration()\r\n      break\r\n    case 'VariableDeclarator':\r\n      this._variable_declarator()\r\n      break\r\n    case 'WhileStatement':\r\n      this._while_statement()\r\n      break\r\n    default:\r\n      this._runner._debugger.addError('Invalid node type to process: ' + this._node.type)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Run a single line python AST statement.\r\n     * @param {Object} ast_tree - The AST tree to run.\r\n     * @return {Boolean|Number|Object|String} - The result value of the AST evaluation.\r\n     */\r\n  _run_statement (ast_tree) {\r\n    this._node = ast_tree.body[0]\r\n    this._node.parent = ast_tree\r\n    this._statement = ast_tree\r\n\r\n    // Adjust status of partser to running and start the process.\r\n    this._status = 1\r\n\r\n    // Process the nodes.\r\n    this._process_nodes()\r\n\r\n    // Return the result value of the expression.\r\n    let returnValue\r\n    if (ast_tree.body[0].return_values[0].type === 'identifier') {\r\n      returnValue = this._get_element_value(ast_tree.body[0].return_values[0])\r\n    } else {\r\n      returnValue = ast_tree.body[0].return_values[0].value\r\n    }\r\n\r\n    // Clear the return value container for next cycle.\r\n    ast_tree.body[0].return_values = []\r\n\r\n    // Retur value of the statement.\r\n    return returnValue\r\n  }\r\n\r\n  /**\r\n     * Run an AST python script.\r\n     * @param {Object} inline_script - The Inline Script item to which the AST tree belongs.\r\n     * @param {Object} ast_tree - The AST tree to run.\r\n     */\r\n  _run (inline_script, ast_tree) {\r\n    // Set the inline item.\r\n    this._inline_script = inline_script\r\n\r\n    // set the self parameter.\r\n    this._variables.self = inline_script\r\n\r\n    // Set the first node and its parent.\r\n    this._node = ast_tree\r\n    this._node.parent = null\r\n    this._statement = null\r\n\r\n    // Adjust status of partser to running and start the process.\r\n    this._status = 1\r\n    this._process_nodes()\r\n  }\r\n}\r\n","import isFunction from 'lodash/isFunction'\r\n\r\n/** Class representing a data logger. */\r\nexport default class Log {\r\n  /**\r\n   * Create a log object which stores all the response data.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   */\r\n  constructor (experiment) {\r\n    this._experiment = experiment // Anchor to the experiment object.\r\n  }\r\n\r\n  /**\r\n   * Write one signle line to the message log.\r\n   * @param {Array} varList - Array with variables to write to the log.\r\n   */\r\n  write_vars (varList) {\r\n    const entry = {}\r\n    for (const varName of varList) {\r\n      const value = this._experiment.vars.get(varName, 'NA', false)\r\n      if (isFunction(value)) continue\r\n      entry[varName] = value\r\n    }\r\n    if (isFunction(this._experiment.onLog)) {\r\n      this._experiment.onLog(entry)\r\n    }\r\n    this._experiment._runner._data.push(entry)\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport JavaScriptWorkspace from '../classes/javascript_workspace.js'\r\nimport Canvas from '../backends/canvas.js'\r\nimport Log from '../backends/log'\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\nimport {\r\n  VERSION_NAME,\r\n  VERSION_NUMBER\r\n} from '../index.js'\r\n\r\n/**\r\n * Class representing an Experiment item.\r\n * @extends Item\r\n */\r\nexport default class Experiment extends Item {\r\n  /** The experiment class defines the starting point for an experiment. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._canvas = new Canvas(this)\r\n    this._currentCanvas = this._canvas\r\n    this._log = new Log(this)\r\n    this._scale_x = 1 // Scaling of the canvas for fullscreen mode.\r\n    this._scale_y = 1 // Scaling of the canvas for fullscreen mode.\r\n    this._javascriptWorkspace = new JavaScriptWorkspace(this)\r\n\r\n    // Create and set public properties.\r\n    this.debug = this._runner._debugger.enabled\r\n    this.items = this._runner._itemStore\r\n    this.pool = this._runner._pool\r\n\r\n    // Set default variables\r\n    this.vars.start = 'experiment'\r\n    this.vars.title = 'My Experiment'\r\n    this.vars.bidi = 'no'\r\n    this.vars.round_decimals = 2\r\n    this.vars.form_clicks = 'no'\r\n    this.vars.uniform_coordinates = 'no'\r\n    this.vars.sessionid = new Date().valueOf() + Math.floor(Math.random() * 100000)\r\n\r\n    // Sound parameters.\r\n    this.vars.sound_freq = 48000\r\n    this.vars.sound_sample_size = -16\r\n    this.vars.sound_channels = 2\r\n    this.vars.sound_buf_size = 1024\r\n\r\n    // Default backend\r\n    this.vars.canvas_backend = 'xpyriment'\r\n\r\n    // Display parameters.\r\n    this.vars.width = 1024\r\n    this.vars.height = 768\r\n    this.vars.background = 0x000000\r\n    this.vars.foreground = 0xFFFFFF\r\n    this.vars.penwidth = 1\r\n\r\n    // Font parameters.\r\n    this.vars.font_size = 18\r\n    this.vars.font_family = 'mono'\r\n    this.vars.font_italic = 'no'\r\n    this.vars.font_bold = 'no'\r\n    this.vars.font_underline = 'no'\r\n  }\r\n\r\n  /** Resets the feedback variables (acc, avg_rt, etc.). */\r\n  reset_feedback () {\r\n    this.vars.total_responses = 0\r\n    this.vars.total_correct = 0\r\n    this.vars.total_response_time = 0\r\n    this.vars.avg_rt = 'undefined'\r\n    this.vars.average_response_time = 'undefined'\r\n    this.vars.accuracy = 'undefined'\r\n    this.vars.acc = 'undefined'\r\n  }\r\n\r\n  /**\r\n    * Sets the subject number and parity (even/ odd).\r\n    * @param  {Number} pNr - The subject number to be used.\r\n    */\r\n  set_subject (pNr) {\r\n    // Sets the subject number and parity (even/ odd).\r\n    this.vars.subject_nr = pNr\r\n    if ((pNr % 2) === 0) {\r\n      this.vars.subject_parity = 'even'\r\n    } else {\r\n      this.vars.subject_parity = 'odd'\r\n    }\r\n  }\r\n\r\n  /**\r\n    * Extracts a the definition of a single item from the string.\r\n    * @param {String} script - The script to read the definition form.\r\n    * @return {String} - The definition found from the script.\r\n    */\r\n  read_definition (script) {\r\n    // Extracts a the definition of a single item from the string.\r\n    var line = script.shift()\r\n    var def_str = ''\r\n    while ((line !== null) && (line.length > 0) && (line.charAt(0) === '\\t')) {\r\n      def_str = def_str + line.substring(1) + '\\n'\r\n      line = script.shift()\r\n    }\r\n    return def_str\r\n  }\r\n\r\n  /**\r\n   * Construct the experiment object from OpenSesame script.\r\n   * @param {String} script - The opensesame script contents\r\n   */\r\n  from_string (script) {\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      this._source = script.split('\\n')\r\n      var l = this._source.shift()\r\n      while (l != null) {\r\n        // Set the processing of the next line.\r\n        const get_next = true\r\n        // eslint-disable-next-line no-unused-vars\r\n        let cmd, args, kwargs\r\n        try {\r\n          // Split the single line into a set of tokens.\r\n          [cmd, args, kwargs] = this._runner._syntax.parse_cmd(l)\r\n        } catch (e) {\r\n          this._runner._debugger.addError('Failed to parse script. Maybe it contains illegal characters or unclosed quotes: ' + e.message)\r\n        }\r\n\r\n        if ((cmd !== null) && (args.length > 0)) {\r\n          // Try to parse the line as variable (or comment)\r\n          if (this.parse_variable(l) === false) {\r\n            if (cmd === 'define') {\r\n              if (args.length === 2) {\r\n                // Get the type, name and definition string of an item.\r\n                var item_type = args[0]\r\n                var item_name = this._runner._syntax.sanitize(args[1])\r\n                var def_str = this.read_definition(this._source)\r\n                this._runner._itemStore.newItem(item_type, item_name, def_str)\r\n              } else {\r\n                this._runner._debugger.addError('Failed to parse definition: ' + l)\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Get the next line.\r\n        if (get_next === true) {\r\n          l = this._source.shift()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Initializes the clock backend. */\r\n  init_clock () {\r\n    // Initializes the clock backend.\r\n    this.clock._initialize()\r\n  }\r\n\r\n  /** Initializes the canvas backend. */\r\n  init_display () {\r\n    // Initializes the canvas backend.\r\n    this._canvas.init_display(this)\r\n  }\r\n\r\n  /** Event handler for external data retrieval. */\r\n  onLog (data) {\r\n    // Function to be overwritten by external handler\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Runs the experiment.\r\n    switch (this._status) {\r\n    case constants.STATUS_INITIALIZE:\r\n      // Adjust the status of the item.\r\n      this._status = constants.STATUS_FINALIZE\r\n\r\n      // Save the date and time, and the version of OpenSesame\r\n      this.vars.datetime = new Date().toString()\r\n      this.vars.opensesame_version = VERSION_NUMBER\r\n      this.vars.opensesame_codename = VERSION_NAME\r\n      this.init_clock()\r\n      this.init_display()\r\n      this.reset_feedback()\r\n\r\n      // Add closing message to debug system.\r\n      this._runner._debugger.addMessage('experiment.run(): experiment started at ' + new Date().toUTCString())\r\n\r\n      if (this._runner._itemStore._items[this.vars.start] !== null) {\r\n        this._runner._itemStack.clear()\r\n        this._runner._itemStore.prepare(this.vars.start, this)\r\n      } else {\r\n        this._runner._debugger.addError('Could not find the item that is the entry point of the experiment: ' + this.vars.start)\r\n      }\r\n      break\r\n    case constants.STATUS_FINALIZE:\r\n      // Add closing message to debug system.\r\n      this._runner._debugger.addMessage('experiment.run(): experiment finished at ' + new Date().toUTCString())\r\n\r\n      // Complete the run process.\r\n      this.end()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Ends an experiment. */\r\n  end () {\r\n    this._runner._finalize()\r\n  }\r\n}\r\n","import { autoDetectRenderer } from 'pixi.js'\r\nimport {\r\n  constants\r\n} from './constants.js'\r\nimport Debugger from './debugger.js'\r\nimport Convertor from './convertor.js'\r\nimport Events from './events.js'\r\nimport Parameters from './parameters.js'\r\nimport Screen from './screen.js'\r\nimport Session from './session.js'\r\nimport Transfer from './transfer.js'\r\nimport ItemStack from '../classes/item_stack.js'\r\nimport ItemStore from '../classes/item_store.js'\r\nimport PythonWorkspace from '../classes/python_workspace.js'\r\nimport FilePoolStore from '../classes/file_pool_store.js'\r\nimport Syntax from '../classes/syntax.js'\r\nimport PythonParser from '../python/python.js'\r\nimport Experiment from '../items/experiment.js'\r\n\r\n/** Class representing the Runner. */\r\nexport default class Runner {\r\n  /** Create a runner which runs an experiment. */\r\n  constructor (content) {\r\n    // Create and set private properties.\r\n    this._confirm = null // Optionale confirm dialog function.\r\n    this._container = null // HTML: The container (div) element.\r\n    this._data = [] // Experiment result data.\r\n    this._experiment = null // The experiment container.\r\n    this._fullScreen = false // Full screen toggle mode.\r\n    this._mimetype = null // Distinction between text and binanry files.\r\n    this._name = 'noname.exp' // Name of the experiment which is run.\r\n    this._onConsole = null // Event handler for processing print messages.\r\n    this._onFinished = null // Event handler for finishing the experiment.\r\n    this._onLog = null // Event handler to call when logger is encountered.\r\n    this._onError = null // Event handler to call when an error is encountered.\r\n    this._prompt = null // Optional prompt dialog function.\r\n    this._renderer = null // PIXI: The visual stimuli renderer.\r\n    this._scaleMode = 'noScale' // Scale type used for full screen mode.\r\n    this._script = null // Container for the experiment script.\r\n    this._source = null // Link to the source experiment file.\r\n    this._subject = null // If defined containing the subject number.\r\n    this._target = null // Link to the target location for the data.\r\n\r\n    // Create and set private class properties.\r\n    this._debugger = new Debugger(this) // Internal error system.\r\n    this._convertor = new Convertor(this)\r\n    this._events = new Events(this) // The event processor.\r\n    this._itemStack = new ItemStack(this) // The global item stack.\r\n    this._itemStore = new ItemStore(this) // The global item store.\r\n    this._parameters = new Parameters(this) // Parameter processor.\r\n    this._pool = new FilePoolStore(this) // The virtual file pool store.\r\n    this._pythonParser = new PythonParser(this) // Python parser\r\n    this._pythonWorkspace = new PythonWorkspace(this) // Python workspace.\r\n    this._screen = new Screen(this) // Introduction screen renderer.\r\n    this._session = new Session(this) // Session information container.\r\n    this._syntax = new Syntax(this) // The script syntax checker.\r\n    this._transfer = new Transfer(this) // File transfer system.\r\n\r\n    // Create the content container.\r\n    this._setupContent(content)\r\n  }\r\n\r\n  /**\r\n   * Setup the content container which shows all the visual output.\r\n   * @param {String|Object} content - The content (div element) in which the experiment is projected.\r\n   */\r\n  _setupContent (content) {\r\n    // Check if the experiment container is defined.\r\n    if (typeof content !== 'undefined') {\r\n      // Get the div element from the DOM element tree\r\n      this._container = (typeof content === 'string') ? document.getElementById(content) : content\r\n\r\n      // Create and set the experiment canvas.\r\n      this._renderer = autoDetectRenderer(800, 600, {\r\n        antialias: true,\r\n        transparent: false,\r\n        resolution: 1\r\n      })\r\n      this._renderer.backgroundColor = 0x000000\r\n\r\n      // Append the canvas to the container.\r\n      this._container.appendChild(this._renderer.view)\r\n    } else {\r\n      // Show error message.\r\n      this._debugger.addError('No content parameter specified.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup the context from which the experiment is created.\r\n   * @param {Object} context - An JSON object containing information about the experiment.\r\n   */\r\n  async _setupContext (context) {\r\n    // Check if the script parameter is defined.\r\n    if (typeof context !== 'undefined') {\r\n      // Initialize the context parameters.\r\n      // Use ES6 destructuring to determine values and set default ones if\r\n      // required.\r\n      ({\r\n        confirm: this._confirm = null,\r\n        debug: this._debugger.enabled = false,\r\n        fullScreen: this._fullScreen = false,\r\n        introClick: this._screen._click = true,\r\n        introScreen: this._screen._active = true,\r\n        mimetype: this._mimetype = null,\r\n        name: this._name = 'noname.exp',\r\n        onConsole: this._onConsole = null,\r\n        onFinished: this._onFinished = null,\r\n        onLog: this._onLog = null,\r\n        onError: this._onError = null,\r\n        prompt: this._prompt = null,\r\n        scaleMode: this._scaleMode = 'noScale',\r\n        source: this._source = null,\r\n        subject: this._subject = null,\r\n        target: this._target = null,\r\n        welcomeText: this._welcomeText = null\r\n      } = context)\r\n\r\n      // Set up the introscreen.\r\n      this._screen._setupIntroScreen()\r\n\r\n      this._screen._updateIntroScreen('Loading experiment.')\r\n      this._screen._updateProgressBar(-1)\r\n\r\n      // Load the script file, using the source parameter.\r\n      try {\r\n        this._script = await this._transfer._readSource(this._source)\r\n      } catch (e) {\r\n        this._debugger.addError(`Error reading osexp: ${e}`)\r\n        this._exit()\r\n        return\r\n      }\r\n\r\n      // Update the introscreen\r\n      this._screen._updateIntroScreen('Building experiment structure.')\r\n\r\n      // Continue the experiment build.\r\n      this._build()\r\n\r\n      // Initialize the parameters class and request user input.\r\n      this._parameters._initialize()\r\n    } else {\r\n      // Show error message.\r\n      this.debugger.addError('No context parameter specified.')\r\n    }\r\n  }\r\n\r\n  /** Build the experiment system. */\r\n  _build () {\r\n    // Create the experiment item.\r\n    this._experiment = new Experiment(this, this._name, this._script)\r\n    this._convertor.parseScript(this._script)\r\n    this._experiment.from_string(this._script)\r\n\r\n    // Set the onlog event handler (if defined).\r\n    if (this._onLog) {\r\n      this._experiment.onLog = this._onLog\r\n    }\r\n  }\r\n\r\n  /** initialize the runner. */\r\n  _initialize () {\r\n    // Initialize the helper classes.\r\n    this._debugger._initialize()\r\n    this._events._initialize()\r\n    this._pythonParser._initialize()\r\n    this._session._initialize()\r\n\r\n    // Prepare and run the experiment item.\r\n    this._experiment.prepare()\r\n    this._experiment.run()\r\n  }\r\n\r\n  /** finalize the runner. */\r\n  _finalize () {\r\n    // Finalize the event system.\r\n    this._events._finalize()\r\n\r\n    // Finalize the debugger.\r\n    this._debugger._finalize()\r\n\r\n    // Clear the item store and file pool.\r\n    this._itemStore._clean_up()\r\n    this._pool._clean_up()\r\n\r\n    // Exit the runner.\r\n    this._exit()\r\n  }\r\n\r\n  /** Exit the experiment environment and execute the optional callback. */\r\n  _exit () {\r\n    // Leave the full screen mode\r\n    this._screen._fullScreenExit()\r\n\r\n    // Reset te size of the container and the canvas.\r\n    this._experiment._canvas._exitDisplay()\r\n\r\n    // Clear the experiment item.\r\n    this._experiment = null\r\n\r\n    // Check if a callback function is defined.\r\n    if (this._onFinished) {\r\n      // Execute callback function.\r\n      this._onFinished(this._data, this._session._session)\r\n    }\r\n  }\r\n\r\n  /** Exit a running experiment. */\r\n  exit () {\r\n    // Set state of the event system to break.\r\n    this._events._state = constants.TIMER_BREAK\r\n  }\r\n\r\n  /** Run an experiment */\r\n  run (context) {\r\n    // Build the experiment.\r\n    this._setupContext(context)\r\n  }\r\n}\r\n","/* eslint-disable no-undef */\n/* eslint-disable no-extend-native */\n/*\n * OsWeb\n *\n * An experiment research tool written in Javascript (ES2016) and HTML to be\n * used in Qualtrics or other web-based tools. Based upon OpenSesame.\n *\n * Author: drs. J. Bos, D. Schreij & S. Mathot\n *\n * Copyright (c) University of Groningen\n * Faculty of Behavioural and Social Sciences\n * Technical Support Service\n *\n */\n\nimport Runner from './system/runner.js'\n\nexport const VERSION_NAME = OSWEB_VERSION_NAME\nexport const VERSION_NUMBER = OSWEB_VERSION_NO\n\n// Add replaceAll function to string prototype\n// eslint-disable-next-line no-extend-native\nString.prototype.replaceAll = function (str1, str2, ignore) {\n  return this.replace(\n    new RegExp(\n      str1.replace(/([/,!\\\\^${}[]\\(\\)\\.\\*\\+\\?\\|<>-&])/g, '\\\\$&'),\n      (ignore ? 'gi' : 'g')),\n    (typeof (str2) === 'string') ? str2.replace(/\\$/g, '$$$$') : str2)\n}\n\n// Add _pySlide function to string prototype (HACK for the filbert interpreter).\nString.prototype._pySlice = function (start, end, step) {\n  if (end !== null) {\n    return this.slice(start, end)\n  } else {\n    return this.slice(start)\n  }\n}\n\n// Create the osweb library container.\nconst osweb = {\n  printVersionInfo: function () {\n    // Show library name and library version number in the console.\n    console.log(`${VERSION_NAME} v${VERSION_NUMBER}`)\n  },\n  getRunner: function (target) {\n    return new Runner(target)\n  }\n}\n\nexport default osweb\n","/* This is the entry script for the webpack builder\nThis script ties all needed modules or files together and provides the\ncorrect setting for the webpack-devserver\n*/\nimport './scss/osweb.scss'\nimport osweb from './js/osweb/index.js'\n\nif (typeof window !== 'undefined') {\n  window.alertify = require('alertifyjs')\n  require('alertifyjs/build/css/alertify.css')\n  require('alertifyjs/build/css/themes/default.css')\n  window.osweb = osweb\n  window.osweb.printVersionInfo()\n}\n\nif (module.hot) {\n  module.hot.accept()\n}\n","import { Container, Graphics, Sprite, Text, Texture } from 'pixi.js'\nimport Styles from './styles.js'\n\n/** Class representing a drawing canvas. */\nexport default class Canvas {\n  /**\n   * Create a canvas object which is used to show all visual stimuli.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   * @param {Boolean} auto_prepare - If true the canvas is prepared after drawing.\n   * @param {Object} style_args - Optional styling argument for the canvas.\n   */\n  constructor (experiment, auto_prepare) {\n    // Create and set public properties.\n    this.auto_prepare = (typeof auto_prepare === 'undefined') ? true : auto_prepare // Set autoprepare toggle (not supported yet).\n    this.experiment = experiment // Anchor to the experiment object.\n\n    // Create and set private properties.\n    this._container = new Container() // Create the container which represents the canvas.\n    this._font_string = 'bold 18px Courier New' // Default font definition string.\n    this._height = this.experiment._runner._renderer.height // Height of the HTML canvas used for drawing.\n    this._styles = new Styles() // The style container.\n    this._width = this.experiment._runner._renderer.width // Width of the HTML canvas used for drawing.\n    this._textures = []\n  }\n\n  /**\n   * Calculate the coordinates for the arraw shape.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Number} bodyWidth - The width of the element body.\n   * @param {Number} bodyLength - The height of the element body.\n   * @param {Number} headWidth - The width of the element head.\n   * @return {Array} - The coordinates defining the arrow element.\n   */\n  _arrow_shape (sx, sy, ex, ey, bodyWidth, bodyLength, headWidth) {\n    // Length\n    var d = Math.sqrt(Math.pow(ey - sy, 2) + Math.pow(sx - ex, 2))\n    var angle = Math.atan2(ey - sy, ex - sx)\n    var _headWidth = (1 - bodyWidth) / 2.0\n    bodyWidth = bodyWidth / 2.0\n\n    // calculate coordinates\n    var p4 = [ex, ey]\n    var p1 = [sx + bodyWidth * headWidth * Math.cos(angle - Math.PI / 2), sy + bodyWidth * headWidth * Math.sin(angle - Math.PI / 2)]\n    var p2 = [p1[0] + bodyLength * Math.cos(angle) * d, p1[1] + bodyLength * Math.sin(angle) * d]\n    var p3 = [p2[0] + _headWidth * headWidth * Math.cos(angle - Math.PI / 2), p2[1] + _headWidth * headWidth * Math.sin(angle - Math.PI / 2)]\n    var p7 = [sx + bodyWidth * headWidth * Math.cos(angle + Math.PI / 2), sy + bodyWidth * headWidth * Math.sin(angle + Math.PI / 2)]\n    var p6 = [p7[0] + bodyLength * Math.cos(angle) * d, p7[1] + bodyLength * Math.sin(angle) * d]\n    var p5 = [p6[0] + _headWidth * headWidth * Math.cos(angle + Math.PI / 2), p6[1] + _headWidth * headWidth * Math.sin(angle + Math.PI / 2)]\n\n    return [p1, p2, p3, p4, p5, p6, p7]\n  }\n\n  /**\n   * Checks if the supplied string contains HTML markup.\n   * @param {String} str - The string to check.\n   * @return {Boolean} - True if HTML markup was found, false if not.\n   */\n  _containsHTML (str) {\n    let doc\n    try {\n      doc = new DOMParser().parseFromString(str, 'text/html')\n      return Array.from(doc.childNodes).some(node => node.nodeType === 1)\n    } catch (e) {\n      console.error('Could not parse DOM: ' + e.message)\n    }\n  }\n\n  /** Exit the display and return to default settings. */\n  _exitDisplay () {\n    // Clear container.\n    this.clear()\n\n    // Set the cursor visibility to default (visible).\n    this.experiment._runner._renderer.view.style.cursor = 'default'\n\n    //  Set the renderer dimensions.\n    this.experiment._runner._renderer.resize(800, 600)\n\n    // Clear the renderer.\n    this.experiment._runner._renderer.backgroundColor = 0x000000\n    this.experiment._runner._renderer.clear()\n    this.experiment._runner._renderer.render(this._container)\n\n    try {\n      document.body.style.backgroundColor = '#FFFFFF'\n    } catch (e) {\n      console.log('Could not reset body color to white', e)\n    }\n  }\n\n  /**\n   * Checks if addiotional style is defined otherwise use default.\n   * @param {Object} styleArgs - The additional style.\n   * @return {Object} - returns a style object.\n   */\n  _getStyle (styleArgs) {\n    // Check if the supplied style does exist.\n    if (typeof (styleArgs) === 'undefined') {\n      return this._styles\n    } else {\n      const styles = new Styles()\n      // Shorter notation: (but keeping old code in comments if this does not work as expected)\n      Object.assign(styles, styleArgs)\n      // styles._background_color = (typeof (styleArgs._background_color) !== 'undefined') ? styleArgs._background_color : 0x000000\n      // styles._bidi = (typeof (styleArgs._bidi) !== 'undefined') ? styleArgs._bidi : false\n      // styles._color = (typeof (styleArgs._color) !== 'undefined') ? styleArgs._color : 0xffffff\n      // styles._fill = (typeof (styleArgs._fill) !== 'undefined') ? styleArgs._fill : false\n      // styles._font_bold = (typeof (styleArgs._font_bold) !== 'undefined') ? styleArgs._font_bold : true\n      // styles._font_family = (typeof (styleArgs._font_family) !== 'undefined') ? styleArgs._font_family : 'Arial'\n      // styles._font_italic = (typeof (styleArgs._font_italic) !== 'undefined') ? styleArgs._font_italic : false\n      // styles._font_size = (typeof (styleArgs._font_size) !== 'undefined') ? styleArgs._font_size : 24\n      // styles._font_underline = (typeof (styleArgs._font_underline) !== 'undefined') ? styleArgs._font_underline : false\n      // styles._penwidth = (typeof (styleArgs._penwidth) !== 'undefined') ? styleArgs._penwidth : 1\n      return styles\n    }\n  }\n\n  /**\n   * Calculates the height, ascent en descent in pixels for the given font.\n   * @param {String} textLine The line of text.\n   * @param {String} fontFamily The font family to use.\n   * @param {Number} fontSize The size of the font.\n   * @return {Object} object containing the height, ascent en descent of the text.\n   */\n  _getTextBaseline (textLine, fontFamily, fontSize, fontBold) {\n    // Create the text element.\n    const text = document.createElement('span')\n    text.style.fontFamily = fontFamily || 'Arial'\n    text.style.fontWeight = (fontBold === true) ? 'bold' : 'normal'\n    text.style.fontSize = String(fontSize) + 'px'\n    text.innerHTML = textLine\n    // Create the calculation div.\n    const block = document.createElement('div')\n    block.style.display = 'inline-block'\n    block.style.lineHeight = 'normal'\n    // block.style.width = '1px'\n    // block.style.height = '0px'\n    // Create the container div.\n    const div = document.createElement('div')\n    div.append(text, block)\n    document.body.appendChild(div)\n\n    // Set the variables.\n    const result = {}\n    let rect\n    let top1\n    let top2\n\n    // Calculate the ascent\n    block.style.verticalAlign = 'baseline'\n    rect = block.getBoundingClientRect()\n    top1 = rect.top + document.body.scrollTop\n    rect = text.getBoundingClientRect()\n    top2 = rect.top + document.body.scrollTop\n    result.ascent = Math.round(top1 - top2)\n\n    // Calculate the descent and the heigt.\n    block.style.verticalAlign = 'bottom'\n    rect = block.getBoundingClientRect()\n    top1 = rect.top + document.body.scrollTop\n    rect = text.getBoundingClientRect()\n    top2 = rect.top + document.body.scrollTop\n    result.height = Math.round(top1 - top2)\n    result.descent = result.height - result.ascent\n\n    document.body.removeChild(div)\n\n    // Return the result.\n    return result\n  }\n\n  /**\n   * Returns the correct envelop setting to use.\n   * @param {String} env - Envelop parameter.\n   * @return {String} - The envelop type to use.\n   */\n  _match_env (env) {\n    if (['c', 'circular', 'round'].includes(env)) {\n      return 'c'\n    } else if (['g', 'gaussian', 'gauss', 'normal', 'rect', 'square'].includes(env)) {\n      return 'g'\n    } else if (['rectangular', 'rectangle'].includes(env)) {\n      return 'r'\n    } else if (['l', 'linear', 'lin', 'ln'].includes(env)) {\n      return 'l'\n    } else {\n      return 'g'\n    }\n  }\n\n  /**\n   * Parse recursively a HTML based text area and returns a set of text elements.\n   * @param {Object} htmlNode - The html node to process.\n   * @param {Object} textBlock - Object containing the translated text block.\n   * @param {Object} currentStyle - Object containing the current style to use.\n   */\n  _parseHtmlNode (htmlNode, textBlock, currentStyle) {\n    // Create a style for the current leven\n    var elementStyle = this._getStyle(currentStyle)\n\n    // Process the node content itself.\n    switch (htmlNode.nodeType) {\n    case 1:\n      // Select the proper html tag\n      switch (htmlNode.nodeName) {\n      case 'B':\n        // Process bold tag.\n        elementStyle.font_bold = true\n        break\n      case 'BR':\n        // Process break tag, get the total width of the line.\n        textBlock.row.height = (textBlock.row.height > 0) ? textBlock.row.height : textBlock.prev_height\n        textBlock.row.width = (textBlock.x_pos > textBlock.row.width) ? textBlock.x_pos : textBlock.row.width\n        textBlock.width = (textBlock.width > textBlock.row.width) ? textBlock.width : textBlock.row.width\n        textBlock.y_pos = textBlock.y_pos + textBlock.row.height\n        textBlock.x_pos = 4\n        textBlock.height = textBlock.height + textBlock.row.height\n        // new row with elements.\n        textBlock.rows.push(textBlock.row)\n        textBlock.row = {\n          ascent: 0,\n          width: 0,\n          height: 0,\n          text_elements: [],\n          text_dimensions: [],\n          text_underline: []\n        }\n        break\n      case 'I':\n        // Process italic tag.\n        elementStyle.font_italic = true\n        break\n      case 'SPAN':\n        // Get the style tokens.\n        if (htmlNode.attributes.length > 0) {\n          var tokens = htmlNode.attributes[0].value.split(';')\n          // parse through the style tokens.\n          for (var j = 0; j < tokens.length; j++) {\n            var property = tokens[j].slice(0, tokens[j].indexOf(':'))\n            var value = tokens[j].slice(tokens[j].indexOf(':') + 1, tokens[j].length)\n            // Set the supported properties.\n            switch (property) {\n            case 'color':\n              elementStyle.color = value\n              break\n            case 'font-size':\n              elementStyle.font_size = value\n              break\n            case 'font-family':\n              elementStyle.font_family = value\n              break\n            }\n          }\n        }\n        break\n      case 'U':\n        // Process underline tag.\n        elementStyle.font_underline = true\n        break\n      }\n      break\n    case 3:\n      // Create the text style element.\n      var textStyle = {\n        fontFamily: elementStyle.font_family,\n        fontStyle: (elementStyle.font_italic === true) ? 'italic' : 'normal',\n        fontWeight: (elementStyle.font_bold === true) ? 'bold' : 'normal',\n        fontSize: elementStyle.font_size,\n        fill: elementStyle.color\n      }\n\n      // Create the text element and get the dimension.\n      var bounds = {}\n      var textElement = new Text(htmlNode.textContent, textStyle)\n      textElement.getBounds(false, bounds)\n\n      // Get the height and descent (for vertical positioning);\n      var dimension = this._getTextBaseline(htmlNode.textContent, elementStyle.font_family, elementStyle.font_size, elementStyle.font_bold)\n\n      // Position the text element and update the width.\n      textElement.x = textBlock.x_pos\n      textElement.y = textBlock.y_pos\n      textBlock.x_pos = textBlock.x_pos + bounds.width\n      textBlock.row.width = (textBlock.x_pos > textBlock.row.width) ? textBlock.x_pos : textBlock.row.width\n      textBlock.width = (textBlock.width > textBlock.row.width) ? textBlock.width : textBlock.row.width\n      textBlock.row.height = ((bounds.height + 1) > textBlock.row.height) ? bounds.height + 1 : textBlock.row.height\n      textBlock.row.ascent = (dimension.ascent > textBlock.row.ascent) ? dimension.ascent : textBlock.row.ascent\n      textBlock.prev_height = textBlock.row.height\n      textBlock.row.text_elements.push(textElement)\n      textBlock.row.text_dimensions.push(dimension)\n      textBlock.row.text_underline.push(elementStyle.font_underline)\n      break\n    }\n\n    // Process the child nodes recursive (if any).\n    for (var i = 0; i < htmlNode.childNodes.length; i++) {\n      this._parseHtmlNode(htmlNode.childNodes[i], textBlock, elementStyle, (i === (htmlNode.childNodes.length - 1)))\n    }\n  }\n\n  /**\n   * Resizes the container div (osweb_div), which contains all elements on display\n   * @param {Number} width - Width to set.\n   * @param {Number} height -Hheight to set.\n   */\n  _resizeContainer (width, height) {\n    // Set the parent container dimensions.\n    this.experiment._runner._container.style.width = width + 'px'\n    this.experiment._runner._container.style.height = height + 'px'\n  }\n\n  /**\n   * Draws an arrow element on the canvas.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Number} bodyWidth - The width of the element body.\n   * @param {Number} bodyLength - The height of the element body.\n   * @param {Number} headWidth - The width of the element head.\n   * @param {Object} styleArgs - Optional styling arguments for the element.\n   */\n  arrow (sx, sy, ex, ey, bodyWidth, bodyLength, headWidth, styleArgs) {\n    // Calculate coordinate points for the arrow.\n    var points = this._arrow_shape(sx, sy, ex, ey, bodyWidth, bodyLength, headWidth)\n\n    // Draw the arrow as a polygon.\n    this.polygon(points, styleArgs)\n  }\n\n  /**\n   * Draws an arrow element on the canvas.\n   * @param {Number} sx - The x coordinate of the element.\n   * @param {Number} sy - The y coordinate of the element.\n   * @param {Number} ex - The radius the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  circle (x, y, r, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create a circle element.\n    var circle = new Graphics()\n    circle.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      circle.beginFill(elementStyle.color)\n      circle.drawCircle(0, 0, r)\n      circle.endFill()\n    } else {\n      circle.drawCircle(0, 0, r)\n    }\n    circle.x = x\n    circle.y = y\n\n    // Add the circle element to container.\n    this._container.addChild(circle)\n  }\n\n  /**\n   * Clear the current canvas.\n   * @param {Number} background_color - The color to draw (optional).\n   * @param {Object} style_args - JSON object containing style arguments (optional).\n   */\n  clear (backgroundColor, styleArgs) {\n    // Clear the stage by temoving al the child elements.\n    for (var i = this._container.children.length - 1; i >= 0; i--) {\n      this._container.removeChild(this._container.children[i])\n    }\n    let texture\n    while (this._textures.length > 0) {\n      texture = this._textures.pop()\n      texture.destroy(true)\n    }\n  }\n\n  /**\n   * Copies the contents of the passed canvas onto current one.\n   * @param  {osweb.canvas} canvas The source canvas to copy\n   * @return {void}\n   */\n  copy (canvas) {\n    this.clear()\n\n    // Loop over the shapes on the passed canvas and copy them onto the current one\n    for (const shape of canvas._container.children) {\n      this._container.addChild(shape.clone())\n    }\n  }\n\n  /**\n   * Draws an ellipse element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} w - The width the element.\n   * @param {Number} h - The height the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  ellipse (x, y, w, h, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create an ellipse element.\n    var ellipse = new Graphics()\n    ellipse.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      ellipse.beginFill(elementStyle.color)\n      ellipse.drawEllipse(0, 0, (w / 2), (h / 2))\n      ellipse.endFill()\n    } else {\n      ellipse.drawEllipse(0, 0, (w / 2), (h / 2))\n    }\n    ellipse.x = x + (w / 2)\n    ellipse.y = y + (h / 2)\n\n    // Add the ellipse element to container.\n    this._container.addChild(ellipse)\n  }\n\n  /**\n   * Draws a fixdot element on the canvas.\n   * @param {int} x - The x coordinate of the element.\n   * @param {int} y - The y coordinate of the element.\n   * @param {String} - The style of the fixation dot.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  fixdot (x, y, style, styleArgs) {\n    // Check the color and style arguments.\n    style = (typeof style === 'undefined') ? 'default' : style\n\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    if (typeof x === 'undefined') {\n      if (this.uniform_coordinates === true) {\n        x = 0\n      } else {\n        x = this._width / 2\n      }\n    }\n    if (typeof y === 'undefined') {\n      if (this.uniform_coordinates === true) {\n        y = 0\n      } else {\n        y = this._height / 2\n      }\n    }\n\n    var s = 4\n    var h = 2\n    if (style.indexOf('large') !== -1) {\n      s = 16\n    } else if ((style.indexOf('medium') !== -1) || (style === 'default')) {\n      s = 8\n    } else if (style.indexOf('small') !== -1) {\n      s = 4\n    } else {\n      this.experiment._runner._debugger.addError('Unknown style: ' + style)\n    }\n\n    var styles = new Styles()\n    if ((style.indexOf('open') !== -1) || (style === 'default')) {\n      styles._fill = true\n      styles._background_color = elementStyle.color\n      styles._color = elementStyle.color\n      this.ellipse(x - s, y - s, 2 * s, 2 * s, styles)\n      styles._background_color = elementStyle.background_color\n      styles._color = elementStyle.background_color\n      this.ellipse(x - h, y - h, 2 * h, 2 * h, styles)\n    } else if (style.indexOf('filled') !== -1) {\n      styles._fill = true\n      styles._background_color = elementStyle.color\n      styles._color = elementStyle.color\n      this.ellipse(x - s, y - s, 2 * s, 2 * s, styles)\n    } else if (style.indexOf('cross') !== -1) {\n      styles._penwidth = 1\n      styles._color = elementStyle.color\n      this.line(x, y - s, x, y + s, styles)\n      this.line(x - s, y, x + s, y, styles)\n    } else {\n      this.experiment._runner._debugger.addError('Unknown style: ' + style)\n    }\n  }\n\n  /**\n   * Draws a gabor element on the canvas.\n   *\n   * @param {Number} x The x coordinate of the element\n   * @param {Number} y The y coordinate of the element\n   * @param {float} orient The rotation of the element (range between 0 and 1)\n   * @param {float} freq The frequency of the bands\n   * @param {String} env The type of envelope used for the element\n   * @param {*} size The size of the gabor\n   * @param {*} stdev The standard deviation of the guass fade\n   * @param {*} phase The phase of the element (start offset)\n   * @param {*} color1 The first color for the element\n   * @param {*} color2 The second color for the element\n   * @param {*} bgmode The background mode of the element\n   * @memberof Canvas\n   */\n  gabor (x, y, orient, freq, env, size, stdev, phase, color1, color2, bgmode) {\n    // Returns a surface containing a Gabor patch.\n    env = this._match_env(env)\n\n    // Create a temporary canvas to make an image data array.\n    const canvas = document.createElement('canvas')\n    canvas.width = size\n    canvas.height = size\n    const ctx = canvas.getContext('2d')\n    const px = ctx.getImageData(0, 0, size, size)\n\n    // Conver the orientation to radians.\n    orient = Math.PI * orient / -180\n    color1 = this._styles._convertColorValueToRGB(color1)\n    color2 = this._styles._convertColorValueToRGB(color2)\n\n    // rx and ry reflect the real coordinates in the target image\n    for (let rx = 0; rx < size; rx++) {\n      for (let ry = 0; ry < size; ry++) {\n        // Distance from the center\n        const dx = rx - 0.5 * size\n        const dy = ry - 0.5 * size\n\n        // Get the coordinates (x, y) in the unrotated Gabor patch.\n        const t = Math.atan2(dy, dx) + orient\n        const r = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))\n        const ux = r * Math.cos(t)\n        const uy = r * Math.sin(t)\n        let f\n\n        // Get the amplitude without the envelope (0 .. 1).\n        let amp = 0.5 + 0.5 * Math.cos(2.0 * Math.PI * (ux * freq + phase))\n\n        // The envelope adjustment\n        if (env === 'g') {\n          // $f = exp(-0.5 * pow($x / $std, 2) - 0.5 * pow($y / $std, 2));\n          f = Math.exp(-0.5 * Math.pow(ux / stdev, 2) - 0.5 * Math.pow(uy / stdev, 2))\n        } else if (env === 'l') {\n          f = Math.max(0, (0.5 * size - r) / (0.5 * size))\n        } else if (env === 'c') {\n          if (r > 0.5 * size) {\n            f = 0.0\n          } else {\n            f = 1.0\n          }\n        } else {\n          f = 1.0\n        }\n\n        // Apply the envelope\n        if (bgmode === 'avg') {\n          amp = amp * f + 0.5 * (1.0 - f)\n        } else {\n          amp = amp * f\n        }\n\n        // Recalculate the color values.\n        const color = {\n          r: color1.r * amp + color2.r * (1.0 - amp),\n          g: color1.g * amp + color2.g * (1.0 - amp),\n          b: color1.b * amp + color2.b * (1.0 - amp)\n        }\n\n        // Set the color values at pixel level.\n        var position = rx * 4 + (ry * size * 4)\n        px.data[position] = color.r\n        px.data[position + 1] = color.g\n        px.data[position + 2] = color.b\n        px.data[position + 3] = 255\n      }\n    }\n\n    // Put the calculated data back on the canvas and create an image of it.\n    ctx.putImageData(px, 0, 0)\n\n    // Retrieve the image from the recourses\n    const texture = Texture.from(canvas)\n    this._textures.push(texture)\n    var sprite = new Sprite(texture)\n\n    // Position the image.\n    sprite.x = x - (size / 2)\n    sprite.y = y - (size / 2)\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Returns the canvas height\n   * @return {Number} - The height of the canvas in pixels.\n   */\n  get height () {\n    return this._height\n  }\n\n  /**\n   * Returns the canvas width\n   * @return {Number} - The width of the canvas in pixels.\n   */\n  get width () {\n    return this._width\n  }\n\n  /**\n   * Draws an image element on the canvas.\n   * @param {String} fname - The name of the element to draw.\n   * @param {Boolean|Number|String} center - If true the image is centered.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} scale - The scaling factor of the element.\n   * @param {Number} rotation - Clockwise rotation in degrees.\n   */\n  image (fname, center, x, y, scale, rotation) {\n    // Get image from file pool.\n    const name = this.experiment._runner._syntax.remove_quotes(fname)\n    const path = this.experiment._runner._pool[name]\n    if (typeof (path) === 'undefined') {\n      this.experiment._runner._debugger.addError(`\"${fname}\" does not exist`)\n    }\n    const img = path.data\n    // Create a temporary canvas to make an image data array.\n    const canvas = document.createElement('canvas')\n    canvas.width = img.width\n    canvas.height = img.height\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n    const texture = Texture.from(canvas)\n    this._textures.push(texture)\n    const sprite = new Sprite(texture)\n    sprite.anchor.set(.5)\n    sprite.scale.x = scale\n    sprite.scale.y = scale\n    sprite.angle = rotation\n    // Position the image\n    if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n      sprite.x = x\n      sprite.y = y\n    } else {\n      sprite.x = x + (sprite.width / 2)\n      sprite.y = y + (sprite.height / 2)\n    }\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Initializes the  display container on which the canvas is displayed.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   */\n  init_display (experiment) {\n    // Set the dimension properties.\n    this._height = experiment.vars.height\n    this._width = experiment.vars.width\n\n    // Set the renderer dimensions.\n    experiment._runner._renderer.resize(this._width, this._height)\n\n    // Set the renderer background color.\n    experiment._runner._renderer.clear(this._styles._convertColorValue(experiment.vars.background, 'number'))\n    experiment._runner._renderer.backgroundColor = this._styles._convertColorValue(experiment.vars.background, 'number')\n\n    // PIXU: Set the cursor visibility to none (default).\n    experiment._runner._renderer.view.style.cursor = 'none'\n\n    // Start the fullscreen mode (if enabled).\n    experiment._runner._screen._fullScreenInit()\n\n    // Set focus to the experiment canvas.\n    experiment._runner._renderer.view.focus()\n  }\n\n  /**\n   * Draws a line element on the canvas.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  line (sx, sy, ex, ey, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create a line element.\n    var line = new Graphics()\n    line.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    line.moveTo(0, 0)\n    line.lineTo(ex - sx, ey - sy)\n    line.x = sx\n    line.y = sy\n\n    // Add the line element to container.\n    this._container.addChild(line)\n  }\n\n  /**\n   * Draws a gabor element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {String} env - The type of envelop used  for the element.\n   * @param {Object} size - Optional styling argument for the element.\n   * @param {Number} stdev - The standard deviation  for the element.\n   * @param {Number|String} color1 - The first color for the element.\n   * @param {Number|String} color2 - Teh second color for the element.\n   * @param {String} bgmode - The type of background mode for the element.\n   */\n  noise (x, y, env, size, stdev, color1, color2, bgmode) {\n    // Returns a surface containing a noise patch.\n    env = this._match_env(env)\n\n    // Create a temporary canvas to make an image data array.\n    var canvas = document.createElement('canvas')\n    canvas.width = size\n    canvas.height = size\n    var ctx = canvas.getContext('2d')\n    var px = ctx.getImageData(0, 0, size, size)\n\n    // Create a surface\n    color1 = this._styles._convertColorValueToRGB(color1)\n    color2 = this._styles._convertColorValueToRGB(color2)\n\n    // rx and ry reflect the real coordinates in the target image\n    for (let rx = 0; rx < size; rx++) {\n      for (let ry = 0; ry < size; ry++) {\n        // Distance from the center\n        const ux = rx - 0.5 * size\n        const uy = ry - 0.5 * size\n        const r = Math.sqrt(Math.pow(ux, 2) + Math.pow(uy, 2))\n        let f\n        // Get the amplitude without the envelope (0 .. 1)\n        var amp = Math.random()\n        // The envelope adjustment\n        if (env === 'g') {\n          f = Math.exp(-0.5 * Math.pow(ux / stdev, 2) - 0.5 * Math.pow(uy / stdev, 2))\n        } else if (env === 'l') {\n          f = Math.max(0, (0.5 * size - r) / (0.5 * size))\n        } else if (env === 'c') {\n          if (r > 0.5 * size) {\n            f = 0.0\n          } else {\n            f = 1.0\n          }\n        } else {\n          f = 1.0\n        }\n\n        // Apply the envelope\n        if (bgmode === 'avg') {\n          amp = amp * f + 0.5 * (1.0 - f)\n        } else {\n          amp = amp * f\n        }\n\n        // Recalculate the collor values.\n        const color = {\n          r: color1.r * amp + color2.r * (1.0 - amp),\n          g: color1.g * amp + color2.g * (1.0 - amp),\n          b: color1.b * amp + color2.b * (1.0 - amp)\n        }\n\n        // Set the color values at pixel level.\n        var position = rx * 4 + (ry * size * 4)\n        px.data[position] = color.r\n        px.data[position + 1] = color.g\n        px.data[position + 2] = color.b\n        px.data[position + 3] = 255\n      }\n    }\n\n    // Put the calculated data back on the canvas and create an image of it.\n    ctx.putImageData(px, 0, 0)\n\n    // Retrieve the image from the recourses\n    const texture = Texture.from(canvas)\n    this._textures.push(texture)\n    var sprite = new Sprite(texture)\n\n    // Position the image.\n    sprite.x = x - (size / 2)\n    sprite.y = y - (size / 2)\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Draws a polygon element on the canvas.\n   * @param {Array} verticles - The coordinates of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  polygon (verticles, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Adjust the points.\n    var path = []\n    for (var i = 0; i < verticles.length; i++) {\n      path.push(verticles[i][0])\n      path.push(verticles[i][1])\n    }\n    path.push(verticles[0][0])\n    path.push(verticles[0][1])\n\n    // Create a polygon element.\n    var polygon = new Graphics()\n    polygon.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) polygon.beginFill(elementStyle.color)\n    polygon.drawPolygon(path)\n    if (elementStyle.fill === true) polygon.endFill()\n\n    // Add the polygon item to container.\n    this._container.addChild(polygon)\n  }\n\n  /** Implements the prepare phase of a canvas. */\n  prepare () {}\n\n  /**\n   * Draws a rectangle element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} w - The width of the element.\n   * @param {Number} h - The height of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  rect (x, y, w, h, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n    // Create a rectangle element.\n    var rectangle = new Graphics()\n    rectangle.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      rectangle.beginFill(elementStyle.color)\n      rectangle.drawRect(0, 0, w, h)\n      rectangle.endFill()\n    } else {\n      rectangle.drawRect(0, 0, w, h)\n    }\n    rectangle.x = x\n    rectangle.y = y\n\n    // Add the rectangle element to container.\n    this._container.addChild(rectangle)\n  }\n\n  /**\n   * Returns the size ion pixels of the canvas.\n   * @return {Array} - The widht an height as an array tupple.\n   */\n  size () {\n    // Create object tuple.\n    var size = {\n      width: this._width,\n      height: this._height\n    }\n    return size\n  }\n\n  /**\n   * Show a canvas on the ptimary canvas.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   * @return {Number} - The current time stamp.\n   */\n  show (experiment) {\n    // Check parameter.\n    experiment = (typeof experiment !== 'undefined') ? experiment : this.experiment\n\n    // Add the container to the stage object and update the stage.\n    this.experiment._currentCanvas = this\n\n    // Set the scaling.\n    this._container.scale.x = this.experiment._scale_x\n    this._container.scale.y = this.experiment._scale_y\n\n    // Set renderer background and render the content.\n    this.experiment._runner._renderer.backgroundColor = this._styles._background_color\n    try {\n      const c = this._styles.rgb\n      document.body.style.backgroundColor = `rgb(${c.r},${c.g},${c.b})`\n    } catch (e) {\n      console.error(e)\n    }\n    this.experiment._runner._renderer.render(this._container)\n    return (experiment != null ? experiment.clock.time() : null)\n  }\n\n  /**\n   * Draws a text element on the canvas.\n   * @param {String} txt - The x coordinate of the element.\n   * @param {Boolean} center - If true the text must be centered.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Boolean} html - If true the text parameter contains HTML tags.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  text (txt, center, x, y, html, styleArgs) {\n    // Newlines are not dealt with correctly, so we convert them to <br />\n    // tags, which results in the same behavior as the desktop.\n    txt = txt.toString().replace('\\n', '<br />')\n    // Get the style\n    const elementStyle = this._getStyle(styleArgs)\n\n    // Only jump through the HTML rendering hoops if the html == 'yes' and\n    // text actually contains HTML markup.\n    if ((html === 'yes') && (this._containsHTML(txt))) {\n      //  Define the text block object.\n      const textBlock = {\n        element_style: elementStyle,\n        height: 0,\n        row: {\n          ascent: 0,\n          height: 0,\n          text_elements: [],\n          text_dimensions: [],\n          text_underline: [],\n          width: 0\n        },\n        rows: [],\n        styles: [],\n        width: 0,\n        x_pos: 4,\n        y_pos: 0\n      }\n\n      // First create a div container for parsing the html text.\n      const div = document.createElement('div')\n      document.body.appendChild(div)\n      div.style.fontFamily = elementStyle.font_family\n      div.style.fontSize = String(elementStyle.font_size) + 'px'\n      div.style.fontWeight = (elementStyle.font_bold === true) ? 'bold' : 'normal'\n      div.style.lineHeight = 'normal'\n      div.style.display = 'inline-block'\n      div.style.visibility = 'hidden'\n      div.innerHTML = txt\n\n      // Parse the html recursive.\n      this._parseHtmlNode(div, textBlock, elementStyle)\n\n      // Remove the html div.\n      document.body.removeChild(div)\n\n      // Add the last row (if any).\n      if (textBlock.row.text_elements.length !== 0) {\n        textBlock.height = textBlock.height + textBlock.row.height\n        textBlock.rows.push(textBlock.row)\n      }\n\n      // Recalculate the x and y positions depending on height, width and centering.\n      textBlock.y_pos = 0\n      for (let i = 0; i < textBlock.rows.length; i++) {\n        // Parse a textline.\n        for (let j = 0; j < textBlock.rows[i].text_elements.length; j++) {\n          // Check for vertical correction.\n          const adjust = textBlock.rows[i].ascent - textBlock.rows[i].text_dimensions[j].ascent\n          textBlock.rows[i].text_elements[j].y = textBlock.y_pos + adjust\n\n          // Check for horizontal centering.\n          if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n            textBlock.rows[i].text_elements[j].x = textBlock.rows[i].text_elements[j].x + x - (textBlock.rows[i].width / 2)\n            textBlock.rows[i].text_elements[j].y = textBlock.rows[i].text_elements[j].y + y - (textBlock.height / 2)\n          } else {\n            textBlock.rows[i].text_elements[j].x = textBlock.rows[i].text_elements[j].x + x\n            textBlock.rows[i].text_elements[j].y = textBlock.rows[i].text_elements[j].y + y + 6\n          }\n\n          // if underlined add additional styling.\n          if (textBlock.rows[i].text_underline[j] === true) {\n            this.line(textBlock.rows[i].text_elements[j].x,\n              textBlock.rows[i].text_elements[j].y + textBlock.rows[i].text_dimensions[j].ascent + 7,\n              textBlock.rows[i].text_elements[j].x + textBlock.rows[i].text_elements[j].width,\n              textBlock.rows[i].text_elements[j].y + textBlock.rows[i].text_dimensions[j].ascent + 7,\n              elementStyle)\n          }\n\n          //  Add text element to the stage.\n          this._container.addChild(textBlock.rows[i].text_elements[j])\n        }\n        textBlock.y_pos = textBlock.y_pos + textBlock.rows[i].height\n      }\n    } else {\n      //  Create the text element\n      var textStyle = {\n        fontFamily: elementStyle.font_family,\n        fontSize: elementStyle.font_size,\n        fontWeight: (elementStyle.font_bold === true) ? 'bold' : 'normal',\n        fill: elementStyle.color\n      }\n      var textElement = new Text(txt, textStyle)\n\n      if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n        textElement.x = x - (textElement.width / 2)\n        textElement.y = y - (textElement.height / 2)\n      } else {\n        textElement.x = x\n        textElement.y = y\n      }\n\n      //  Add text element to the stage.\n      this._container.addChild(textElement)\n    }\n  }\n}\n","import isInteger from 'lodash/isInteger'\n\n/** Class representing a style container. */\nexport default class Styles {\n  /** Styles is a simple class that holds information about the style. */\n  constructor (item) {\n    this._initConstants()\n    // Set class private properties.\n    if (typeof (item) === 'undefined') {\n      this._background_color = 0x000000\n      this._bidi = false\n      this._color = 'white'\n      this._fill = false\n      this._font_bold = false\n      this._font_family = 'Arial'\n      this._font_italic = false\n      this._font_size = 24\n      this._font_underline = false\n      this._html = false\n      this._penwidth = 1\n    } else {\n      this.background_color = item.vars.get('background', 0x000000)\n      this.bidi = item.vars.get('bidi', 'no')\n      this.color = item.vars.get('foreground', 'white')\n      this.fill = item.vars.get('fill', 'no') === 'yes'\n      this.font_bold = item.vars.get('font_bold', 'no')\n      this.font_family = item.vars.get('font_family', 'Arial')\n      this.font_italic = item.vars.get('font_italic', 'no')\n      this.font_size = item.vars.get('font_size', 24)\n      this.font_underline = item.vars.get('font_underline', 'no')\n      this.html = item.vars.get('html', 'no')\n      this.penwidth = item.vars.get('penwidth', 1)\n    }\n  }\n\n  /**\n   * Converts a color value (string, number of rgb to a numeric value for use in PIXI.\n   * @param {String|Number|Object} color - The color to convert.\n   * @return {Number} - The color value.\n   */\n\n  _convertColorValue (color) {\n    var convertedColor = 0\n    // Check if the color definition is a number or a string value.\n    if (typeof (color) === 'string') {\n      // Check if the string is a hex string.\n      if (/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(color) === true) {\n        // Check if hex string is 3 of 6 character based.\n        if (color.length === 4) {\n          // Expand the color to 6 characters.\n          convertedColor = parseInt('0x' + color[1] + color[1] + color[2] + color[2] + color[3] + color[3], 16)\n        } else {\n          convertedColor = parseInt('0x' + color[1] + color[2] + color[3] + color[4] + color[5] + color[6], 16)\n        }\n      } else if (typeof this._DEFAULT_COLOURS[color.toLowerCase()] !== 'undefined') {\n        // Value is a constant color name, convert it.\n        convertedColor = parseInt(this._DEFAULT_COLOURS[color.toLowerCase()], 16)\n      } else if (color.slice(0, 3).toLowerCase() === 'rgb') {\n        // Value is a rgb string number, convert it.\n        var a = color.split('(')[1].split(')')[0]\n        a = a.split(',')\n        var b = a.map(function (x) {\n          // For each array element\n          if (/^\\d+(\\.\\d+)?%$/.test(x)) {\n            // pass\n            x = x.slice(0, -1)\n            x = Math.round((parseInt(x) / 100) * 255)\n            x = x.toString(16)\n          } else {\n            // fail\n            x = parseInt(x).toString(16) // Convert to a base16 string\n          }\n          return (x.length === 1) ? '0' + x : x // Add zero if we get only one character\n        })\n        convertedColor = parseInt('0x' + b.join(''))\n      }\n    } else if (this._isInt(color) === true) {\n      if (color < 256) {\n        // Luminant value, so convert it to gray scale.\n        convertedColor = (256 * 256 * color) + (256 * color) + color\n      } else {\n        // Luminant values above 255 are not supported, return white.\n        convertedColor = 16843008\n      }\n    }\n    // Return the converted color as nubmer value.\n    return convertedColor\n  }\n\n  _convertColorValueToRGB (color) {\n    // Convert the color to numeric values.\n    var convertedColor = this._convertColorValue(color)\n    // Convert colors to rgb format.\n    return {\n      r: convertedColor >> 16,\n      g: convertedColor >> 8 & 0xFF,\n      b: convertedColor & 0xFF\n    }\n  }\n\n  get rgb () {\n    return {\n      r: this._background_color >> 16,\n      g: this._background_color >> 8 & 0xFF,\n      b: this._background_color & 0xFF\n    }\n  }\n\n  set rgb (val) {\n  }\n\n  /**\n   * Checks if the passed value is an integer.\n   * @param {Number} value -  The value to check.\n   * @return {Boolean} - True if passed value is an integer.\n   */\n  _isInt (value) {\n    return isInteger(value)\n  }\n\n  /**\n   * Checks if value is possibly specified as 'yes'/'no' or 1/0 instead of\n   * true or false (as is done in OS script). Convert 'yes' and 'no' values\n   * to booleans\n   * @param {Number|String} value - The value to check.\n   * @return {Boolean} - The original boolean, or true if value was 'yes'.\n   */\n  _checkVal (value) {\n    return [true, 'yes', 1, '1'].indexOf(value) !== -1\n  }\n\n  /**\n   * Get the background_color value.\n   * @return {String} The background_color value.\n   */\n  get background_color () {\n    return this._background_color\n  }\n\n  /**\n   * Set the background_color value.\n   * @param {Number|String} val - The background_color value to set.\n   */\n  set background_color (val) {\n    this._background_color = this._convertColorValue(val, 'number')\n  }\n\n  /**\n   * Get the bidi value.\n   * @return {Boolean} The bidi value.\n   */\n  get bidi () {\n    return this._bidi\n  }\n\n  /**\n   * Set the bidi value.\n   * @param {Boolean} val - The bidi value to set.\n   */\n  set bidi (val) {\n    this._bidi = this._checkVal(val)\n  }\n\n  /**\n   * Get the color value.\n   * @return {String} The color value.\n   */\n  get color () {\n    return this._color\n  }\n\n  /**\n   * Set the color value.\n   * @param {Number|String} val - The color value to set.\n   */\n  set color (val) {\n    this._color = this._convertColorValue(val, 'number')\n  }\n\n  /**\n   * Get the fill value.\n   * @return {Boolean} The fill value.\n   */\n  get fill () {\n    return this._fill\n  }\n\n  /**\n   * Set the fill value.\n   * @param {Boolean} val - The fill value to set.\n   */\n  set fill (val) {\n    this._fill = ([1, '1', true, 'yes'].indexOf(val) !== -1)\n  }\n\n  /**\n   * Get the font_bold value.\n   * @return {Boolean} The font_bold value.\n   */\n  get font_bold () {\n    return this._font_bold\n  }\n\n  /**\n   * Set the font_bold value.\n   * @param {Boolean} val - The font_bold value to set.\n   */\n  set font_bold (val) {\n    this._font_bold = this._checkVal(val)\n  }\n\n  /**\n   * Get the font_family value.\n   * @return {String} The font_family value.\n   */\n  get font_family () {\n    return this._font_family\n  }\n\n  /**\n   * Set the font_family value.\n   * @param {String} val - The font_family value to set.\n   */\n  set font_family (val) {\n    if (val in this._DEFAULT_FONTS) {\n      this._font_family = this._DEFAULT_FONTS[val]\n    } else {\n      this._font_family = val\n    }\n  }\n\n  /**\n   * Get the font_italic value.\n   * @return {Boolean} The font_italic value.\n   */\n  get font_italic () {\n    return this._font_italic\n  }\n\n  /**\n   * Set the font_italic value.\n   * @param {Boolean} val - The font_bold value to set.\n   */\n  set font_italic (val) {\n    this._font_italic = this._checkVal(val)\n  }\n\n  /**\n   * Get the font_size value.\n   * @return {Number} The font_size value.\n   */\n  get font_size () {\n    return this._font_size\n  }\n\n  /**\n   * Set the font_size value.\n   * @param {Number} val - The font_size value to set.\n   */\n  set font_size (val) {\n    if (!this._isInt(val)) {\n      // remove px part\n      this._font_size = Number(val.slice(0, -2))\n    } else {\n      this._font_size = val\n    }\n  }\n\n  /**\n   * Get the font_underline value.\n   * @return {Boolean} The font_underline value.\n   */\n  get font_underline () {\n    return this._font_underline\n  }\n\n  /**\n   * Set the font_underline value.\n   * @param {Boolean} val - The font_underline value to set.\n   */\n  set font_underline (val) {\n    this._font_underline = this._checkVal(val)\n  }\n\n  /**\n   * Get the html value.\n   * @return {Boolean} The html value.\n   */\n  get html () {\n    return this._html\n  }\n\n  /**\n   * Set the html value.\n   * @param {Boolean} val - The html value to set.\n   */\n  set html (val) {\n    this._html = this._checkVal(val)\n  }\n\n  /**\n   * Get the penwidth value.\n   * @return {Boolean} The penwidth value.\n   */\n  get penwidth () {\n    return this._penwidth\n  }\n\n  /**\n   * Set the penwidth value.\n   * @param {Boolean} val - The penwidth value to set.\n   */\n  set penwidth (val) {\n    if (!this._isInt(val)) {\n      this._penwidth = 1\n    }\n    this._penwidth = val\n  }\n\n  _initConstants () {\n    // Set constant default colors.\n    this._DEFAULT_COLOURS = {\n      aliceblue: '0xf0f8ff',\n      antiquewhite: '0xfaebd7',\n      aqua: '0x00ffff',\n      aquamarine: '0x7fffd4',\n      azure: '0xf0ffff',\n      beige: '0xf5f5dc',\n      bisque: '0xffe4c4',\n      black: '0x000000',\n      blanchedalmond: '0xffebcd',\n      blue: '0x0000ff',\n      blueviolet: '0x8a2be2',\n      brown: '0xa52a2a',\n      burlywood: '0xdeb887',\n      cadetblue: '0x5f9ea0',\n      chartreuse: '0x7fff00',\n      chocolate: '0xd2691e',\n      coral: '0xff7f50',\n      cornflowerblue: '0x6495ed',\n      cornsilk: '0xfff8dc',\n      crimson: '0xdc143c',\n      cyan: '0x00ffff',\n      darkblue: '0x00008b',\n      darkcyan: '0x008b8b',\n      darkgoldenrod: '0xb8860b',\n      darkgray: '0xa9a9a9',\n      darkgreen: '0x006400',\n      darkgrey: '0xa9a9a9',\n      darkkhaki: '0xbdb76b',\n      darkmagenta: '0x8b008b',\n      darkolivegreen: '0x556b2f',\n      darkorange: '0xff8c00',\n      darkorchid: '0x9932cc',\n      darkred: '0x8b0000',\n      darksalmon: '0xe9967a',\n      darkseagreen: '0x8fbc8f',\n      darkslateblue: '0x483d8b',\n      darkslategray: '0x2f4f4f',\n      darkslategrey: '0x2f4f4f',\n      darkturquoise: '0x00ced1',\n      darkviolet: '0x9400d3',\n      deeppink: '0xff1493',\n      deepskyblue: '0x00bfff',\n      dimgray: '0x696969',\n      dimgrey: '0x696969',\n      dodgerblue: '0x1e90ff',\n      firebrick: '0xb22222',\n      floralwhite: '0xfffaf0',\n      forestgreen: '0x228b22',\n      fuchsia: '0xff00ff',\n      gainsboro: '0xdcdcdc',\n      ghostwhite: '0xf8f8ff',\n      gold: '0xffd700',\n      goldenrod: '0xdaa520',\n      gray: '0x808080',\n      grey: '0x808080',\n      green: '0x008000',\n      greenyellow: '0xadff2f',\n      honeydew: '0xf0fff0',\n      hotpink: '0xff69b4',\n      'indianred ': '0xcd5c5c',\n      indigo: '0x4b0082',\n      ivory: '0xfffff0',\n      khaki: '0xf0e68c',\n      lavender: '0xe6e6fa',\n      lavenderblush: '0xfff0f5',\n      lawngreen: '0x7cfc00',\n      lemonchiffon: '0xfffacd',\n      lightblue: '0xadd8e6',\n      lightcoral: '0xf08080',\n      lightcyan: '0xe0ffff',\n      lightgoldenrodyellow: '0xfafad2',\n      lightgray: '0xd3d3d3',\n      lightgrey: '0xd3d3d3',\n      lightgreen: '0x90ee90',\n      lightpink: '0xffb6c1',\n      lightsalmon: '0xffa07a',\n      lightseagreen: '0x20b2aa',\n      lightskyblue: '0x87cefa',\n      lightslategray: '0x778899',\n      lightslategrey: '0x778899',\n      lightsteelblue: '0xb0c4de',\n      lightyellow: '0xffffe0',\n      lime: '0x00ff00',\n      limegreen: '0x32cd32',\n      linen: '0xfaf0e6',\n      magenta: '0xff00ff',\n      maroon: '0x800000',\n      mediumaquamarine: '0x66cdaa',\n      mediumblue: '0x0000cd',\n      mediumorchid: '0xba55d3',\n      mediumpurple: '0x9370d8',\n      mediumseagreen: '0x3cb371',\n      mediumslateblue: '0x7b68ee',\n      mediumspringgreen: '0x00fa9a',\n      mediumturquoise: '0x48d1cc',\n      mediumvioletred: '0xc71585',\n      midnightblue: '0x191970',\n      mintcream: '0xf5fffa',\n      mistyrose: '0xffe4e1',\n      moccasin: '0xffe4b5',\n      navajowhite: '0xffdead',\n      navy: '0x000080',\n      oldlace: '0xfdf5e6',\n      olive: '0x808000',\n      olivedrab: '0x6b8e23',\n      orange: '0xffa500',\n      orangered: '0xff4500',\n      orchid: '0xda70d6',\n      palegoldenrod: '0xeee8aa',\n      palegreen: '0x98fb98',\n      paleturquoise: '0xafeeee',\n      palevioletred: '0xd87093',\n      papayawhip: '0xffefd5',\n      peachpuff: '0xffdab9',\n      peru: '0xcd853f',\n      pink: '0xffc0cb',\n      plum: '0xdda0dd',\n      powderblue: '0xb0e0e6',\n      purple: '0x800080',\n      red: '0xff0000',\n      rosybrown: '0xbc8f8f',\n      royalblue: '0x4169e1',\n      saddlebrown: '0x8b4513',\n      salmon: '0xfa8072',\n      sandybrown: '0xf4a460',\n      seagreen: '0x2e8b57',\n      seashell: '0xfff5ee',\n      sienna: '0xa0522d',\n      silver: '0xc0c0c0',\n      skyblue: '0x87ceeb',\n      slateblue: '0x6a5acd',\n      slategray: '0x708090',\n      slategrey: '0x708090',\n      snow: '0xfffafa',\n      springgreen: '0x00ff7f',\n      steelblue: '0x4682b4',\n      tan: '0xd2b48c',\n      teal: '0x008080',\n      thistle: '0xd8bfd8',\n      tomato: '0xff6347',\n      turquoise: '0x40e0d0',\n      violet: '0xee82ee',\n      wheat: '0xf5deb3',\n      white: '0xffffff',\n      whitesmoke: '0xf5f5f5',\n      yellow: '0xffff00',\n      yellowgreen: '0x9acd32'\n    }\n\n    // Set constant default fonts.\n    this._DEFAULT_FONTS = {\n      sans: 'Droid Sans',\n      serif: 'Droid Serif',\n      mono: 'Droid Sans Mono',\n      'chinese-japanese-korean': 'WenQuanYi Micro Hei',\n      arabic: 'Droid Arabic Naskh',\n      hebrew: 'Droid Sans Hebrew',\n      hindi: 'Lohit Hindi'\n    }\n  }\n}\n","import Styles from '../backends/styles.js'\nimport Canvas from '../backends/canvas.js'\n\n/**\n * A class that provides a more user-friendly API for Canvas objects, resemling\n * that of Python. Is used for the JavaScript workspace.\n **/ \nexport default class CanvasHandler {\n\n  constructor (experiment, styleArgs = {}) {\n    this._canvas = new Canvas(experiment)\n    this._style = new Styles(experiment)\n    Object.assign(this._style, styleArgs)\n    this._xc = this._canvas.width / 2\n    this._yc = this._canvas.height / 2\n  }\n  \n  get color() {return this._style.color}\n  set color(val) {this._style.color = val}\n  get background_color() {return this._style.background_color}\n  set background_color(val) {this._style.background_color = val}\n  get fill() {return this._style.fill}\n  set fill(val) {this._style.fill = val}\n  get html() {return this._style.html}\n  set html(val) {this._style.html = val}\n  get font_family() {return this._style.font_family}\n  set font_family(val) {this._style.font_family = val}\n  get font_size() {return this._style.font_size}\n  set font_size(val) {this._style.font_size = val}\n  get font_italic() {return this._style.font_italic}\n  set font_italic(val) {this._style.font_italic = val}\n  get font_bold() {return this._style.font_bold}\n  set font_bold(val) {this._style.font_bold = val}\n  get font_underline() {return this._style.font_underline}\n  set font_underline(val) {this._style.font_underline = val}\n  \n  _element_style (styleArgs) {\n    if (typeof styleArgs === \"undefined\") {\n      return this._style\n    }\n    const style = new Styles()\n    Object.assign(style, this._style)\n    Object.assign(style, styleArgs)\n    return style\n  }\n  \n  arrow({\n      sx = 0,\n      sy = 0,\n      ex = 50,\n      ey = 0,\n      body_length = 0.8,\n      body_width = 0.5,\n      head_width = 30,\n      ...styleArgs} = {}) {\n    this._canvas.arrow(\n        sx + this._xc,\n        sy + this._yc,\n        ex + this._xc,\n        ey + this._yc,\n        body_width,\n        body_length,\n        head_width,\n        this._element_style(styleArgs))\n  }\n  \n  clear(styleArgs = {}) {\n    this._canvas.clear(this._element_style(styleArgs).background_color)\n  }\n  \n  circle({x = 0, y = 0, r = 50, ...styleArgs} = {}) {\n    this._canvas.circle(\n        x + this._xc,\n        y + this._yc,\n        r,\n        this._element_style(styleArgs))\n  }\n  \n  ellipse({x = -50, y = -25, w = 100, h = 50, ...styleArgs} = {}) {\n    this._canvas.ellipse(\n        x + this._xc,\n        y + this._yc,\n        w,\n        h,\n        this._element_style(styleArgs))\n  }\n  \n  fixdot({x = 0, y = 0, style = 'default', ... styleArgs} = {}) {\n    this._canvas.fixdot(\n        x + this._xc,\n        y + this._yc,\n        style,\n        this._element_style(styleArgs))\n  }\n  \n  gabor({\n      x = 0,\n      y = 0,\n      orient = 0,\n      freq = .1,\n      env = 'gaussian',\n      size = 96,\n      stdev = 12,\n      phase = 0,\n      col1 = 'white',\n      col2 = 'black',\n      bgmode = 'avg'} = {}) {\n    this._canvas.gabor(\n        x + this._xc,\n        y + this._yc,\n        orient,\n        freq,\n        env,\n        size,\n        stdev,\n        phase,\n        col1,\n        col2,\n        bgmode)\n  }\n  \n  image({fname, center = true, x = 0, y = 0, scale = 1, rotation = 0} = {}) {\n    if (typeof fname === \"undefined\") {\n      throw \"fname is a required parameter for Canvas.image()\"\n    }\n    this._canvas.image(\n        fname,\n        center,\n        x + this._xc,\n        y + this._yc,\n        scale,\n        rotation)\n  }\n  \n  line({sx = 0, sy = 0, ex = 50, ey = 0, ...styleArgs} = {}) {\n    this._canvas.line(\n        sx + this._xc,\n        sy + this._yc,\n        ex + this._xc,\n        ey + this._yc,\n        this._element_style(styleArgs))\n  }\n  \n  noise_patch({\n      x = 0,\n      y = 0,\n      env = 'gaussian',\n      size = 96,\n      stdev = 12,\n      col1 = 'white',\n      col2 = 'black',\n      bgmode = 'avg'} = {}) {\n    this._canvas.noise(\n        x + this._xc,\n        y + this._yc,\n        env,\n        size,\n        stdev,\n        col1,\n        col2,\n        bgmode)\n  }\n  \n  polygon({vertices, ...styleArgs} = {}) {\n    if (typeof vertices === \"undefined\") {\n      throw \"vertices is a required parameter for Canvas.polygon()\"\n    }\n    // Adjust the coordinates of all vertices\n    const v = []\n    for (const [x, y] of vertices)\n      v.push([x + this._xc, y + this._yc])\n    this._canvas.polygon(v, this._element_style(styleArgs))\n  }\n  \n  rect({x = -50, y = -25, w = 100, h = 50, ...styleArgs} = {}) {\n    this._canvas.rect(\n        x + this._xc,\n        y + this._yc,\n        w,\n        h,\n        this._element_style(styleArgs))\n  }\n  \n  show() {\n    return this._canvas.show()\n  }\n  \n  text({text, center = true, x = 0, y = 0, ...styleArgs} = {}) {\n    if (typeof text === \"undefined\") {\n      throw \"text is a required parameter for Canvas.text()\"\n    }    \n    let style = this._element_style(styleArgs)\n    this._canvas.text(\n        text,\n        center,\n        x + this._xc,\n        y + this._yc,\n        style.html,\n        style)\n  }\n}\n","import CanvasHandler from '../classes/canvas_handler'\nimport JavaScriptWorkspaceAPI from '../classes/javascript_workspace_api'\nimport randomExt from 'random-ext'\nimport {\n    range as pyRange,\n    enumerate as pyEnumerate,\n    items as pyItems,\n    zip as pyZip,\n    zipLongest as pyZipLongest} from 'pythonic'\n\n/**\n * A proxy handler for the VarStore that maps properties onto calls to\n * VarStore.get(), so that variables are automatically evaluated, just like\n * in the OpenSesame `var` API.\n */\nclass VarStoreHandler {\n  get (target, prop) {\n    // The VarStore sets a property on itself to bypass this proxy. This\n    // avoids feedback loops when the VarStore tries to get a variable without\n    // evaluating it.\n    if (target._bypass_proxy === true) {\n      return target[prop]\n    }\n    return typeof target[prop] === 'string'\n      ? target.get(prop, null, true, null, false)\n      : target[prop]\n  }\n}\n\n\n/**\n * A workspace for executing inline JavaScript code. For now, the workspace is\n * not persistent, and only exposes the vars object.\n */\nexport default class JavaScriptWorkspace {\n  /**\n   * Create a JavaScript workspace.\n   * @param {Object} experiment - The experiment item to which the item belongs.\n   */\n  constructor (experiment) {\n    this.experiment = experiment\n    this.vars_proxy = new Proxy(this.experiment.vars, new VarStoreHandler())\n    this.api = new JavaScriptWorkspaceAPI(this.experiment)\n  }\n\n  /**\n   * Executes JavaScript code in the workspace.\n   * @param {String} js - JavaScript code to execute\n   */\n  _eval (js) {\n    const vars = this.vars_proxy\n    const Canvas = (styleArgs = {}) => new CanvasHandler(\n        this.experiment, styleArgs)\n    const random = randomExt\n    // Expose common functions. Binding is necessary to provide the correct\n    // scope for the functions.\n    const reset_feedback = this.api.reset_feedback.bind(this.api)\n    const set_subject_nr = this.api.set_subject_nr.bind(this.api)\n    const sometimes = this.api.sometimes.bind(this.api)\n    const xy_from_polar = this.api.xy_from_polar.bind(this.api)\n    const xy_to_polar = this.api.xy_to_polar.bind(this.api)\n    const xy_distance = this.api.xy_distance.bind(this.api)\n    const xy_circle = this.api.xy_circle.bind(this.api)\n    const xy_grid = this.api.xy_grid.bind(this.api)\n    const xy_random = this.api.xy_random.bind(this.api)\n    // Expose the pythonic functions\n    const range = pyRange\n    const zip = pyZip\n    const zipLongest = pyZipLongest\n    const enumerate = pyEnumerate\n    const items = pyItems\n    eval(js)\n  }\n}\n","import randomExt from 'random-ext'\nimport {range} from 'pythonic'\n\n/**\n * Provides common functions based on the Python API.\n **/\nexport default class JavaScriptWorkspaceAPI {\n\n  constructor(experiment) {\n    this._experiment = experiment\n  }\n\n  reset_feedback() {\n    this._experiment.reset_feedback()\n  }\n\n  set_subject_nr(nr) {\n    this._experiment.set_subject(nr)\n  }\n\n  sometimes(p=.5) {\n    if (typeof p !== \"number\" || p < 0 || p > 1)\n      throw \"p should be a numeric value between 0 and 1\"\n    return Math.random() < p\n  }\n\n  xy_from_polar(rho, phi, pole=[0, 0]) {\n    if (typeof rho !== \"number\")\n      throw \"rho should be numeric in xy_from_polar()\"\n    if (typeof phi !== \"number\")\n      throw \"phi should be numeric in xy_from_polar()\"\n    phi = this._radians(phi)\n    const [ox, oy] = this._parse_pole(pole)\n    const x = rho * Math.cos(phi) + ox\n    const y = rho * Math.sin(phi) + oy\n    return [x, y]\n  }\n\n  xy_to_polar(x, y, pole=[0, 0]) {\n    if (typeof x !== \"number\")\n      throw \"x should be numeric in xy_to_polar()\"\n    if (typeof y !== \"number\")\n      throw \"y should be numeric in xy_to_polar()\"\n    const [ox, oy] = this._parse_pole(pole)\n    const dx = x - ox\n    const dy = y - oy\n    const rho = Math.sqrt(dx ** 2 + dy ** 2)\n    const phi = this._degrees(Math.atan2(dy, dx))\n    return [rho, phi]\n  }\n  \n  xy_distance(x1, y1, x2, y2) {\n    if (typeof x1 !== \"number\" || typeof y1 !== \"number\" || \n        typeof x2 !== \"number\" || typeof y2 !== \"number\")\n      throw \"Coordinates should be numeric in xy_distance()\"\n    return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)\n  }\n  \n  xy_circle(n, rho, phi0=0, pole=[0, 0]) {\n    if (typeof n !== \"number\" || n < 0)\n      throw \"n should be a non-negative integer in xy_circle()\"\n    if (typeof rho !== \"number\" || typeof phi0 !== \"number\")\n      throw \"rho and phi0 should be numeric in xy_circle()\"\n    const a = []\n    for (const i of range(n)) {\n      a.push(this.xy_from_polar(rho, phi0, pole))\n      phi0 += 360 / n\n    }\n    return a\n  }\n  \n  xy_grid(n, spacing, pole=[0, 0]) {\n    // Parse and validate the n\n    const n_err_msg = \"n should be a single non-negative number, or an array of two non-negative numbers in xy_grid()\"\n    let n_col\n    let n_row\n    if (typeof n === \"object\") {\n      if (n.length !== 2)\n        throw n_err_msg\n      [n_col, n_row] = n\n    } else {\n      n_col = n\n      n_row = n\n    }\n    if (typeof n_col !== \"number\" || typeof n_row !== \"number\")\n      throw n_err_msg\n    // Parse and validate the spacing\n    const spacing_err_msg = \"spacing should be a single non-negative number, or an array of two non-negative numbers xy_grid()\"\n    let s_col\n    let s_row\n    if (typeof spacing === \"object\") {\n      if (spacing.length !== 2)\n        throw spacing_err_msg\n      [s_col, s_row] = spacing\n    } else {\n      s_col = spacing\n      s_row = spacing\n    }\n    if (typeof s_col !== \"number\" || typeof s_row !== \"number\")\n      throw spacing_err_msg\n    // Generate the grid\n    const [ox, oy] = this._parse_pole(pole)\n    const a = []\n    let x\n    let y\n    for (const row of range(n_row)) {\n      y = (row - (n_row - 1) / 2) * s_row + oy\n      for (const col of range(n_col)) {\n        x = (col - (n_col - 1) / 2) * s_col + ox\n        a.push([x, y])\n      }\n    }\n    return a\n  }\n  \n  xy_random(n, width, height, min_dist=0, pole=[0, 0]) {\n    if (typeof n !== \"number\" || n < 0)\n      throw \"n should be a non-negative number in xy_circle()\"\n    if (typeof min_dist !== \"number\" || n < 0)\n      throw \"min_dist should be a non-negative number in xy_circle()\"\n    if (typeof width !== \"number\" || typeof height !== \"number\")\n      throw \"width and height should be numeric in xy_circle()\"\n    const [ox, oy] = this._parse_pole(pole)\n    const max_try = 1000\n    let a, i, t2, x1, y1, x2, y2, too_close\n    for (const t1 of range(max_try)) {\n      a = []\n      for (i of range(n)) {\n        // A loop for trying to find a single new point\n        for (t2 of range(max_try)) {\n          // Generate a point and check if it's not too close to the other\n          // points so far\n          x1 = (Math.random() - .5) * width + ox\n          y1 = (Math.random() - .5) * height + oy\n          too_close = false\n          for ([x2, y2] of a) {\n            if (this.xy_distance(x1, y1, x2, y2) < min_dist) {\n              too_close = true\n              break\n            }\n          }\n          // Add the point and the break the loop for finding a single point\n          if (!too_close) {\n            a.push([x1, y1])\n            break\n          }\n        }\n      }\n      // If the array is complete, return it. If not, the outer for loop will\n      // try again until max_try is reached\n      if (a.length === n)\n        return a\n    }\n    throw \"Failed to generate random coordinates in xy_random()\"\n  }\n  \n  _radians(a) {\n    return (a / 360) * 2 * Math.PI\n  }\n  \n  _degrees(a) {\n    return (a / (2 * Math.PI)) * 360\n  }\n  \n  _parse_pole(pole) {\n    if (pole.length !== 2)\n      throw \"pole should be an array of two numeric values\"\n    const [x, y] = pole\n    if (typeof x !== \"number\" || typeof y !== \"number\")\n      throw \"pole should be an array of two numeric values\"\n    return [x, y]\n  }\n}\n","import {\r\n  isBoolean\r\n} from 'lodash'\r\n\r\n/** Class representing a python workspace. */\r\nexport default class PythonWorkspace {\r\n  /**\r\n   * Create a python workspace object.\r\n   * @param {Object} runner - The runner to which the python workspace belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the python workspace class.\r\n  }\r\n\r\n  /**\r\n   * Evaluate an expression within osweb.\r\n   * @param {Boolean|Object|String} bytecode - The expression to evaluate.\r\n   * @return {Boolean|Number|Object|String} - The result of the evaluated expression.\r\n   */\r\n  _eval (bytecode) {\r\n    // Check wich type of expression must be evaled.\r\n    if (isBoolean(bytecode)) {\r\n      return bytecode\r\n    } else if (typeof bytecode === 'string') {\r\n      // Open sesame script, first check for parameter values.\r\n      bytecode = this._runner._syntax.eval_text(bytecode, null, true)\r\n\r\n      // Evaluate the expression.\r\n      var evalString = this._runner._syntax.remove_quotes(bytecode)\r\n      if (evalString === 'always') {\r\n        return true\r\n      } else if (evalString === 'never') {\r\n        return false\r\n      } else {\r\n        // eslint-disable-next-line no-eval\r\n        return eval(evalString)\r\n      }\r\n    } else {\r\n      // Python script, run the internal Python interpreter.\r\n      return this._runner._pythonParser._run_statement(bytecode)\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}