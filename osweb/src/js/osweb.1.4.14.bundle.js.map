{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/osweb/classes/var_store.js","webpack:///./src/js/osweb/backends/clock.js","webpack:///./src/js/osweb/items/item.js","webpack:///./src/js/osweb/util/matrix.js","webpack:///./src/js/osweb/items/loop.js","webpack:///./src/js/osweb/backends/response_device.js","webpack:///./src/js/osweb/backends/keyboard.js","webpack:///./src/js/osweb/items/sequence.js","webpack:///./src/js/osweb/items/coroutines.js","webpack:///./src/js/osweb/backends/mouse.js","webpack:///./src/js/osweb/items/generic_response.js","webpack:///./src/js/osweb/items/sketchpad.js","webpack:///./src/js/osweb/items/feedback.js","webpack:///./src/js/osweb/items/inline_script.js","webpack:///./src/js/osweb/items/inline_javascript.js","webpack:///./src/js/osweb/items/keyboard_response.js","webpack:///./src/js/osweb/items/mouse_response.js","webpack:///./src/js/osweb/items/logger.js","webpack:///./src/js/osweb/backends/sampler.js","webpack:///./src/js/osweb/items/sampler.js","webpack:///./src/js/osweb/items/synth.js","webpack:///./src/js/osweb/items/advanced_delay.js","webpack:///./src/js/osweb/items/form_html.js","webpack:///./src/js/osweb/items/form_consent.js","webpack:///./src/js/osweb/items/inline_html.js","webpack:///./src/js/osweb/items/form_multiple_choice.js","webpack:///./src/js/osweb/items/form_text_display.js","webpack:///./src/js/osweb/items/form_text_input.js","webpack:///./src/js/osweb/backends/video.js","webpack:///./src/js/osweb/items/media_player.js","webpack:///./src/js/osweb/items/notepad.js","webpack:///./src/js/osweb/items/repeat_cycle.js","webpack:///./src/js/osweb/items/reset_feedback.js","webpack:///./src/js/osweb/items/touch_response.js","webpack:///./src/js/osweb/elements/base_element.js","webpack:///./src/js/osweb/system/constants.js","webpack:///./src/js/osweb/elements/arrow.js","webpack:///./src/js/osweb/elements/circle.js","webpack:///./src/js/osweb/elements/ellipse.js","webpack:///./src/js/osweb/elements/fixdot.js","webpack:///./src/js/osweb/elements/gabor.js","webpack:///./src/js/osweb/elements/image.js","webpack:///./src/js/osweb/elements/line.js","webpack:///./src/js/osweb/elements/noise.js","webpack:///./src/js/osweb/elements/rect.js","webpack:///./src/js/osweb/elements/textline.js","webpack:///./src/js/osweb/system/debugger.js","webpack:///./src/js/osweb/system/convertor.js","webpack:///./src/js/osweb/system/events.js","webpack:///./src/js/osweb/system/parameters.js","webpack:///./src/js/osweb/system/screen.js","webpack:///./src/js/osweb/system/session.js","webpack:///./src/js/osweb/util/files.js","webpack:///./src/js/osweb/system/transfer.js","webpack:///./src/js/osweb/classes/item_stack.js","webpack:///./src/js/osweb/classes/item_store.js","webpack:///./src/js/osweb/classes/file_pool_store.js","webpack:///./src/js/osweb/classes/syntax.js","webpack:///./src/js/osweb/python/python_math.js","webpack:///./src/js/osweb/python/python_opensesame.js","webpack:///./src/js/osweb/python/python_random.js","webpack:///./src/js/osweb/python/python_string.js","webpack:///./src/js/osweb/python/python.js","webpack:///./src/js/osweb/backends/log.js","webpack:///./src/js/osweb/items/experiment.js","webpack:///./src/js/osweb/system/runner.js","webpack:///./src/js/osweb/index.js","webpack:///./src/app.js","webpack:///./src/js/osweb/backends/canvas.js","webpack:///./src/js/osweb/backends/styles.js","webpack:///./src/js/osweb/classes/canvas_handler.js","webpack:///./src/js/osweb/classes/javascript_workspace.js","webpack:///./src/js/osweb/classes/javascript_workspace_api.js","webpack:///./src/js/osweb/classes/python_workspace.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","slice","VarStore","item","parent","this","_item","_parent","_ignored_properties","variable","defaultValue","evaluate","valid","addQuotes","_bypass_proxy","syntax","eval_text","inspect","includes","variables","pairs","has","preserve","unset","Clock","experiment","_experiment","_startTime","_now","performance","now","Math","round","webkitNow","Date","getTime","ms","_runner","_events","_run","constants","RESPONSE_DURATION","Item","script","constructor","_status","STATUS_NONE","clock","count","python_workspace","_pythonWorkspace","response_store","_responseStore","_syntax","vars","STATUS_FINALIZE","_currentItem","run","response","pMs","sleep","time","line","trim","charAt","comments","fromAscii","parse_comment","parse_cmd","cmd","args","set","_debugger","addError","parse_multiline_vars","reset","pattern","in_multi","split","exec","parse_variable","parse_line","STATUS_INITIALIZE","addMessage","type","_prepare_complete","unstack","srcMatrix","TypeError","values","reduce","acc","cycle","entries","val","stack","columns","keys","map","row","fullfactorial","matrix","combos","shuffleVert","grouped","cols","prev","shuffleHoriz","vals","res","sortCol","col","Error","sort","reverseRows","ReferenceError","roll","amount","column","parseInt","rollN","list","unshift","pop","weight","weightCol","Loop","description","_break_if","_cycles","_index","_keyboard","_operations","_initialized","from_string","el","_eval_args","remove_quotes","orig_matrix","cycles","repeat","skip","offset","order","break_if","source","source_file","lines","instruction","params","Number","_pythonParser","_prepare","body","undefined","_runstatement","e","items","_items","parseFileSource","set_item_onset","src","toLowerCase","endsWith","_pool","parse","skip_empty_lines","wholeRepeats","floor","partialRepeats","allCycles","Array","remainder","k","mtrx","func","repeat_cycle","msg","apply_cycle","break_if_val","compile_cond","_eval","_complete","_itemStore","prepare","execute","ResponseDevice","_SYNONYM_MAP","responses","synonyms","defaults","_synonyms","Keyboard","timeOut","keyList","_keyList","_timeOut","RESPONSE_KEYBOARD","moderators","keyDownEvent","event","shiftKey","ctrlKey","altKey","visible","_renderer","view","focus","tmp","document","createElement","appendChild","removeChild","Sequence","flush_keyboard","cond","_itemStack","tokens","strip_slashes","flush","currentItem","self","Coroutines","tasks","schedule","arglist","kwdict","task","item_name","start_time","start","end_time","end","run_if","runif","taskParams","Task","sortBy","launch","active","dt","t0","running","_loop","started","_active","status","step","RUNNING","ABORTED","stopped","TIMER_BREAK","TIMER_EXIT","TIMER_ERROR","_state","setTimeout","kill","abort_on_end","state","UNINITIALISED","_coroutine","isFunction","coroutine","next","newState","done","FINISHED","Mouse","buttonList","_buttonList","_visible","show_cursor","RESPONSE_MOUSE","_mouseMoveEvent","rtTime","x","clientX","y","clientY","events","_mouse_press","buttons","_mouseDownEvent","button","pos","show","style","cursor","GenericResponse","_allowed_responses","_duration","_duration_func","_mouse","_responsetype","RESPONSE_NONE","_timeout","process_feedback","timeout","_timeStamp","process_response_timeout","process_response_keypress","process_response_mouseclick","response_array","String","replace","filter","Boolean","duration","_get_default_from_synonym","_prepare_responses","_correct_responses","prepare_duration_keypress","prepare_duration_mouseclick","RESPONSE_SOUND","RESPONSE_VIDEO","_final_duration","_set_config","sleep_for_duration","get_key","get_click","_sampler","wait","_video_player","rect","getBoundingClientRect","scale","min","right","left","width","bottom","top","height","center_x","center_y","cursor_x","cursor_y","retval","_start_response_interval","sri","_end_response_interval","sanitize","resp","response_bookkeeping","set_mouse_coordinates","correct","cr","total_correct","total_response_time","response_time","total_responses","accuracy","average_response_time","avg_rt","prepare_timeout","prepare_duration","prepare_allowed_responses","prepare_correct_responses","configure_response_objects","Sketchpad","canvas","Canvas","elements","a","b","z_index","_isClass","element","_newElementClass","_compare","backgroundColor","_styles","background_color","clear","is_shown","draw","_set_bg_color","set_sri","process_response","Feedback","reset_variables","reset_feedback","InlineScript","_prepare_run","_prepare_tree","_run_tree","_process_nodes","_parse","InlineJavaScript","workspace","_javascriptWorkspace","read_run_lines","read_prepare_lines","KeyboardResponse","_flush","allowed_responses","correct_response","keyDownHandler","keypress","_processKeyboardEvent","addEventListener","proceed","removeEventListener","MouseResponse","resp_codes","mouseDownHandler","_processMouseEvent","touchHandler","changedTouches","Logger","logvars","auto_log","_log","write_vars","concat","audioCtx","AudioContext","webkitAudioContext","console","warn","SamplerBackend","volume","pitch","pan","fade","block","sample","error","onended","_audioEnded","mediaElementSource","createMediaElementSource","resume","connect","applyFilters","preservesPitch","playbackRate","play","nodes","destination","gainNode","GainNode","gain","setValueAtTime","currentTime","linearRampToValueAtTime","StereoPannerNode","Sampler","_sample","fade_in","stop_after","Synth","AdvancedDelay","mean","std","u","v","random","max","sqrt","log","cos","PI","jitter","jitter_mode","_random_uniform","_random_gauss","FormHTML","_widgets","margins","_formContainer","remove","_osweb","display","runner","_keyDownHandler","_keyUpHandler","_customForm","getElementsByTagName","textContent","setBackground","borderTop","borderLeft","borderRight","borderBottom","html","inherit","innerHTML","_paddedHeight","_paddedWidth","padding","margin","fontFamily","fontSize","fontWeight","textDecoration","color","boxType","label","box","labelElement","container","textAlign","append","_fontFamily","fontStyle","_padding","join","formElements","formHTML","justifyContent","alignItems","getElementsByClassName","_runScripts","_cached_padding","_width","clientWidth","_height","clientHeight","FormConsent","alertify","_checkbox","checked","resumeOSWeb","onDecline","title","text","checkbox","checkboxContainer","buttonContainer","acceptButton","onclick","onAccept","declineButton","applyTheme","InlineHTML","from","_inputElements","input","required","_groupChecked","alert","id","getElementsByName","onsubmit","_submitForm","FormMultipleChoice","_boxes","form_var","_hasOkButton","options","option","elementHeight","question","_boxClicked","okButton","FormTextDisplay","FormTextInput","keyCode","_textArea","onkeypress","checkReturnPress","_activateTextArea","Video","audio","full_screen","_playing","_script","_video","_texture","Texture","_videoSprite","Sprite","pause","_videoEnded","onplay","_videoPlay","render","_event_handler_always","MediaPlayer","_script_executed","stop","_update","pool","event_handler","event_handler_trigger","Notepad","RepeatCycle","condition","ResetFeedback","TouchResponse","_ncol","_nrow","cell","toString","BaseElement","sketchpad","show_if","fix_coordinates","uniform_coordinates","only_keywords","properties","_properties","xc","yc","prop","eval_properties","itemClasses","loop","sequence","feedback","inline_script","inline_javascript","inline_html","keyboard_response","mouse_response","logger","sampler","synth","coroutines","advanced_delay","form_consent","form_multiple_choice","form_text_display","form_text_input","media_player_mpy","notepad","touch_response","arrow","penwidth","x1","y1","x2","y2","styles","Styles","fill","arrow_body_width","arrow_body_length","arrow_head_width","circle","ellipse","w","h","fixdot","gabor","orient","freq","env","size","stdev","phase","color1","color2","bgmode","image","_file","file","center","rotation","noise","textline","font_family","font_size","font_bold","font_italic","font_underline","PRESSES_ONLY","RELEASES_ONLY","PRESSES_AND_RELEASES","RESPONSE_AUTOKEYBOARD","RESPONSE_AUTOMOUSE","STATUS_BUILD","STATUS_EXECUTE","TIMER_NONE","TIMER_WAIT","TIMER_PAUSE","TIMER_RESUME","TIMER_DONE","TIMER_FORM","Debugger","enabled","messageLog","errorText","context","isPlainObject","notify","_onError","url","itemStack","itemInfo","messageText","Convertor","variabelName","substr","match","newItem","pair","parseValue","variableName","parseLine","Events","_keyDownEvent","_keyPressMode","_mouseDownHandler","_mouseMoveHandler","_mousePressMode","_mouseUpHandler","_responseGiven","_responseList","_responseType","_soundHasEnded","_statePrevious","_timeHandler","_videoHasEnded","_KEY_CODES","_KEY_SHIFTCODES","_keyDown","_keyUp","_mouseDown","_mouseMove","_mouseUp","_touchStartHandler","_touchStart","Ticker","add","_time","location","_screen","_showPauseScreen","keyboardState","keyboardResponse","_convertKeyCode","indexOf","preventDefault","mouseState","mouseResponse","_finalize","responseType","responseList","Parameters","_itemCounter","_parameters","_subject","set_subject","_setupClickScreen","_welcomeText","_updateIntroScreen","dataType","prompt","promptEnabled","_processParameters","_processParameter","_transferParameters","parameter","_exit","_prompt","_onParamConfirm","_onParamCancel","Screen","_click","_container","_fullScreen","requestFullscreen","_fullScreenChanged","_fullScreenError","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","_scaleMode","position","_currentCanvas","ar","resize","_scale_x","_scale_y","_confirm","_onFullScreenConfirm","_onFullScreenCancel","debugger","logoSrc","_introScreen","Container","screenCenter","logoPath","oswebLogo","oswebTitle","Text","versionInfo","VERSION_NUMBER","copyrightText","getFullYear","_statusText","addChild","clickHandler","_clearIntroScreen","_initialize","children","percentage","yOuter","_progressBarOuter","Graphics","lineStyle","drawRect","_progressBarInner","xOuter","hOuter","beginFill","endFill","_onPauseScreenConfirm","_onPauseScreenCancel","Session","_date","_session","_getSessionInformation","browser","codename","navigator","appCodeName","appName","version","appVersion","date","startdate","getDate","getMonth","starttime","getHours","getMinutes","getSeconds","startdateUTC","getUTCDate","getUTCMonth","getUTCFullYear","debug","parameters","pilot","taskname","taskversion","screen","availableHeight","availHeight","availableWidth","availWidth","colorDepth","outerheight","outerwidth","pixelDepth","screenX","screenY","system","os","platform","FileStreamer","chunkSize","rewind","getFileSize","fileReader","FileReader","blob","Promise","resolve","reject","onloadend","target","byteLength","progress","readAsArrayBuffer","decompress","zipfile","onProgress","fs","inflator","pako","Inflate","isEndOfFile","readBlock","err","untar","buffer","readFileAsText","inputFile","temporaryFileReader","onerror","abort","DOMException","onload","readAsText","parseUrl","str","host","getHost","origin","URL","Transfer","isString","isObject","File","_readOsexpFromFile","osScript","uri","fetch","href","remoteFile","_processScript","_readWebFonts","osexp","Blob","osexpFile","_readExpFile","message","_updateProgressBar","files","expFileIndex","findIndex","expFile","poolFiles","_processOsexpPoolItems","axios","onDownloadProgress","lengthComputable","loaded","total","test","userAgent","contents","asyncIterator","currentIndex","currentFile","folder","whole","group1","fromCharCode","ext","lastIndexOf","img","Image","getBlobUrl","Audio","reader","readAsDataURL","ado","then","WebFont","load","google","families","urls","inactive","resultData","FormData","xhr","XMLHttpRequest","open","subject_nr","send","ItemStack","stackItem","ItemStore","className","string","form","_newItemClass","exit","itemType","suggestion","uniqueName","FilePoolStore","new_name","old_path","new_path","Syntax","isNumber","cnd","bytecode","expression","substring","ast","_run_statement","content","isNaN","in_entity","escapeBrackets","reNormal","search","unescapeBrackets","rePython","nr","add_slashes","dedented","count_quotes","kwargs","parsed","startsWith","convert_if_numeric","safe_wrap","strict","allowVars","NBrackets","chartype","i1","i2","nBrackets","PythonMath","E","pi","filbert","pythonRuntime","imports","math","ceil","copysign","fabs","factorial","fmod","frexp","fsum","acos","asin","atan","atan2","hypot","sin","tan","iterable","PythonOpenSesame","_objects","close","write","var","functions","set_subject_nr","copy_sketchpad","keyboard","mouse","sometimes","xy_circle","xy_distance","xy_from_polar","xy_grid","xy_random","xy_to_polar","auto_prepare","style_args","resp_args","playback_args","osc","attack","decay","rho","phi0","pole","phi","spacing","min_dist","PythonRandom","shuffle","temporaryValue","randomIndex","PythonString","fillchar","PythonParser","python_math","python_opensesame","python_random","python_string","_classes","_function_stack","_global_return_value","_inline_script","_node","_onConsole","_stack","_statement","_variables","exp","parseFn","locations","ranges","identifier","toNumber","node","return_values","index","_set_node","_get_element_value","return_value","_set_return_value","tmp_value","operator","_set_element_value","break","arguments","callee","tmp_arguments","caller","_get_element","_get_context","global_return_value","init","update","tmp_range","consequent","alternate","returnValue","argument","declarations","_process_nodes_jump","_process_nodes_timeout","_array_expression","_assignment_expression","_binary_expression","_block_statement","_break_statement","_call_expression","_empty_statement","_expression_statement","_for_statement","_for_in_statement","_function_expression","_identifier","_if_statement","_literal","_logical_expression","_member_expression","_new_expression","_program","_return_statement","_unary_expression","_update_expression","_variable_declaration","_variable_declarator","_while_statement","ast_tree","Log","varList","entry","varName","onLog","_data","Experiment","_canvas","JavaScriptWorkspace","bidi","round_decimals","form_clicks","sessionid","valueOf","sound_freq","sound_sample_size","sound_channels","sound_buf_size","canvas_backend","background","foreground","pNr","subject_parity","def_str","_source","item_type","read_definition","init_display","datetime","opensesame_version","opensesame_codename","VERSION_NAME","init_clock","toUTCString","Runner","_mimetype","_name","_onFinished","_onLog","_target","_convertor","PythonWorkspace","_transfer","_setupContent","getElementById","autoDetectRenderer","antialias","transparent","resolution","confirm","fullScreen","introClick","introScreen","mimetype","onConsole","onFinished","onError","scaleMode","subject","welcomeText","_setupIntroScreen","_readSource","_build","parseScript","_clean_up","_fullScreenExit","_exitDisplay","_setupContext","OSWEB_VERSION_NAME","OSWEB_VERSION_NO","replaceAll","str1","str2","ignore","RegExp","_pySlice","osweb","printVersionInfo","getRunner","require","_font_string","_textures","sx","sy","ex","ey","bodyWidth","bodyLength","headWidth","pow","angle","_headWidth","p4","p1","p2","p3","p7","p6","doc","DOMParser","parseFromString","childNodes","some","nodeType","styleArgs","assign","textLine","fontBold","lineHeight","div","top1","top2","verticalAlign","scrollTop","ascent","descent","htmlNode","textBlock","currentStyle","elementStyle","_getStyle","nodeName","prev_height","x_pos","y_pos","rows","text_elements","text_dimensions","text_underline","attributes","textStyle","bounds","textElement","getBounds","dimension","_getTextBaseline","_parseHtmlNode","points","_arrow_shape","polygon","drawCircle","destroy","shape","clone","drawEllipse","_fill","_background_color","_color","_penwidth","_match_env","ctx","getContext","px","getImageData","_convertColorValueToRGB","rx","ry","dx","dy","ux","uy","f","amp","g","putImageData","texture","sprite","fname","path","drawImage","_convertColorValue","_fullScreenInit","moveTo","lineTo","verticles","drawPolygon","rectangle","rgb","txt","_containsHTML","element_style","visibility","adjust","colorHex","colorRGB255","colorRGBPerc","colorHSV","colorHSL","colorLAB","_initConstants","_bidi","_font_bold","_font_family","_font_italic","_font_size","_font_underline","_html","re","colorConvert","keyword","hex","_matchFloats","perc","hsv","hsl","lab","isInteger","isArray","_DEFAULT_FONTS","sans","serif","mono","arabic","hebrew","hindi","_checkVal","_isInt","CanvasHandler","_style","_xc","_yc","body_length","body_width","head_width","_element_style","col1","col2","vertices","VarStoreHandler","vars_proxy","Proxy","api","JavaScriptWorkspaceAPI","_persistent","js","persistent","randomExt","convert","csvParse","range","pyRange","zip","pyZip","zipLongest","pyZipLongest","enumerate","pyEnumerate","pyItems","eval","_radians","_parse_pole","ox","oy","_degrees","n_col","n_row","n_err_msg","s_col","s_row","spacing_err_msg","too_close","max_try","evalString"],"mappings":"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","file":"js/osweb.1.4.14.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,3]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/** Class representing a variable store. */\r\nexport default class VarStore {\r\n  /**\r\n   * Create a variable store object for all variables.\r\n   * @param {Object} item - The item to which the var_store belongs.\r\n   * @param {Object} parent - The parent global var_store.\r\n   */\r\n  constructor (item, parent) {\r\n    // Create and set private properties.\r\n    this._item = item\r\n    this._parent = parent\r\n    this._ignored_properties = [\r\n      '_item', '_parent', '_bypass_proxy', '_ignored_properties'\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Get the value of a variable from the store (or thje parent store).\r\n   * @param {String} variable - The name of the variable.\r\n   * @param {Boolean|Number|String} defaultValue - The default value for the variable.\r\n   * @param {Object} evaluate - The parent global var_store.\r\n   * @param {Object} valid - The parent global var_store.\r\n   * @param {Boolean} addQuotes - The add quotes toggle.\r\n   * @return {Boolean|Number|String} - The value of the given variable.\r\n   */\r\n  get (variable, defaultValue, evaluate, valid, addQuotes) {\r\n    // Set the optional arguments\r\n    defaultValue = (typeof defaultValue === 'undefined') ? null : defaultValue\r\n    evaluate = (typeof evaluate === 'undefined') ? true : evaluate\r\n    valid = (typeof valid === 'undefined') ? null : valid\r\n    var value = null\r\n    // Gets an experimental variable.\r\n    if (variable in this) {\r\n      this._bypass_proxy = true // Avoid Proxy feedback loop\r\n      if (typeof this[variable] === 'string' && evaluate === true) {\r\n        value = this._item.syntax.eval_text(this[variable], null, addQuotes)\r\n      } else {\r\n        value = this[variable]\r\n      }\r\n      this._bypass_proxy = false\r\n    }\r\n    // If value is not found locally, look in experiment object.\r\n    if (value == null && this._parent && variable in this._parent) {\r\n      this._parent._bypass_proxy = true // Avoid Proxy feedback loop\r\n      if (typeof this._parent[variable] === 'string' && evaluate === true) {\r\n        value = this._item.syntax.eval_text(this._parent[variable], null, addQuotes)\r\n      } else {\r\n        value = this._parent[variable]\r\n      }\r\n      this._parent._bypass_proxy = false\r\n    }\r\n    // Return function result.\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Check if the variable is part of the variable store.\r\n   * @param {String} variable - The name of the variable.\r\n   * @return {Boolean} - True if the variable is part of the store.\r\n   */\r\n  has (variable) {\r\n    return this.inspect().includes(variable)\r\n  }\r\n\r\n  /** Create a list of all avariables available.\r\n   * @return {Array} - Array containing names of all variables.\r\n   */\r\n  inspect () {\r\n    const variables = []\r\n    for (const variable in this) {\r\n      if (this._ignored_properties.includes(variable)) continue\r\n      variables.push(variable)\r\n    }\r\n    return variables\r\n  }\r\n\r\n  /** Create a list of value/name pairs.\r\n   * @return {Array} - Array containing name and values of all variables.\r\n   */\r\n  items () {\r\n    const pairs = {}\r\n    for (const variable of this.inspect()) {\r\n      pairs[variable] = this[variable]\r\n    }\r\n    return pairs\r\n  }\r\n\r\n  /**\r\n   * Set the value of a variable in the store.\r\n   * @param {String} variable - The name of the variable.\r\n   * @value {Boolean|Number|String} - Value of the variable to set.\r\n   */\r\n  set (variable, value) {\r\n    this[variable] = value\r\n  }\r\n\r\n  /**\r\n   * Unset (remove) a variable from the store.\r\n   * @param {String} variable - The name of the variable.\r\n   */\r\n  unset (variable) {\r\n    if (this.has(variable) === true) {\r\n      delete this[variable]\r\n    }\r\n  }\r\n\r\n  /** Create a list of variable names.\r\n   * @return {Array} - Array containing namesof all variables.\r\n   */\r\n  vars () {\r\n    return this.inspect()\r\n  }\r\n\r\n  /**\r\n   * Clears all experimental variables, except those that are explicitly\r\n   * preserved.\r\n   * @param {Array} preserve - An array of variable names to preserve.\r\n   */\r\n  clear (preserve) {\r\n    preserve = (typeof preserve === 'undefined') ? [] : preserve\r\n    for (const variable of this.inspect()) {\r\n      if (preserve.includes(variable)) continue\r\n      this.unset(variable)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/** Class representing the clock system. */\r\nexport default class Clock {\r\n  /**\r\n   * Create a clock object which controls a pseudo real-time clock.\r\n   * @param {Object} experiment - The experiment  to which the clock belongs.\r\n   */\r\n  constructor (experiment) {\r\n    // Create and set private properties.\r\n    this._experiment = experiment // Parent experiment item.\r\n    this._startTime = -1 // Start time anchor of the experiment.\r\n  }\r\n\r\n  /** Initialize the clock. */\r\n  _initialize () {\r\n    // Set the absolute start time of the expeirment.\r\n    this._startTime = this._now()\r\n  }\r\n\r\n  /** Get an absolute time stamp from the system in ms.\r\n   * @return {Number} - The current absolute time in ms.\r\n   */\r\n  _now () {\r\n    // Get the current time stamp using the best available timing method.\r\n    if (window.performance.now) {\r\n      return Math.round(window.performance.now())\r\n    } else if (window.performance.webkitNow) {\r\n      return Math.round(window.performance.webkitNow())\r\n    } else {\r\n      return new Date().getTime()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sleeps (pauses) for a duration (in milliseconds).\r\n   * @param {Number} ms - The duration to wait in ms.\r\n   */\r\n  sleep (ms) {\r\n    // Sleeps (pauses) for a duration (in milliseconds).\r\n    if (this._experiment !== null) {\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(ms, constants.RESPONSE_DURATION, null)\r\n    }\r\n  }\r\n\r\n  /** Get the relative time from the start of an experiment.\r\n   * @return {Number} - The current relative time in ms.\r\n   */\r\n  time () {\r\n    // Gives the current timestamp in milliseconds.\r\n    if (this._startTime !== -1) {\r\n      return (this._now() - this._startTime)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n}\r\n","import { constants } from '../system/constants.js'\r\nimport VarStore from '../classes/var_store.js'\r\nimport Clock from '../backends/clock.js'\r\n\r\n/** Class representing an OpenSesame item. */\r\nexport default class Item {\r\n  constructor (experiment, name, script) {\r\n    // Create and set private properties.\r\n    this._parent = null\r\n    this._runner = (experiment.constructor.name === 'Runner') ? experiment : experiment._runner\r\n    this._status = constants.STATUS_NONE\r\n\r\n    // Create and set public properties.\r\n    this.clock = (experiment.constructor.name === 'Runner') ? new Clock(this) : experiment.clock\r\n    this.count = 0\r\n    this.experiment = (experiment.constructor.name === 'Runner') ? this : experiment\r\n    this.name = name\r\n    this.python_workspace = this._runner._pythonWorkspace\r\n    this.response_store = this._runner._responseStore\r\n    this.syntax = this._runner._syntax\r\n    this.vars = new VarStore(this, (experiment.constructor.name === 'Runner') ? null : this.experiment.vars)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Adjust the status of the item.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Implements the complete phase of the item.\r\n    if (this._parent !== null && this._runner._events._currentItem) {\r\n      // Return the process control to the parent of the element.\r\n      this._runner._events._currentItem = this._parent\r\n      this._runner._events._currentItem.run()\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare complete phase of an item. */\r\n  _prepare_complete () {\r\n  }\r\n\r\n  /** Implements the update phase of an item. */\r\n  _update (response) {\r\n  }\r\n\r\n  /**\r\n     * Pauses the object execution. !WARNING This function can not be implemented due the script blocking of javascript.\r\n     * @param {Number} pMs - The sleep time in milliseconds.\r\n     */\r\n  sleep (pMs) {\r\n    this.clock.sleep(pMs)\r\n  }\r\n\r\n  /**\r\n     * Returns the current time.\r\n     * @returns {Number} - The current time in ms from the start of the experiment.\r\n     */\r\n  time () {\r\n    // Returns the current time.\r\n    return this.clock.time()\r\n  }\r\n\r\n  /**\r\n     * Parses comments from a single definition line, indicated by # // or '.\r\n.    * @param {String} line - The definition line to be parsed.\r\n     * @returns {Boolean} - Return true if the commennt is succesfully parsed.\r\n     */\r\n  parse_comment (line) {\r\n    // Parses comments from a single definition line, indicated by # // or '.\r\n    line = line.trim()\r\n    if ((line.length > 0) && (line.charAt(0) === '#')) {\r\n      // Add comments to the array removing the first character.\r\n      this.comments.push(line.slice(1))\r\n      return true\r\n    } else if ((line.length > 1) && (line.charAt(0) === '/')) {\r\n      // Add comments to the array removing the first two characters.\r\n      this.comments.push(line.slice(2))\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Parses keywords  from a single definition line.\r\n     * @param {String} line - The definition line to be parsed.\r\n     * @param {Boolean} fromAscii - If true the source is ascii.\r\n     * @param {Boolean} evaluate - If true the keyword is evaluated.\r\n     * @returns {Object} - Returns the keywords found in the line.\r\n     */\r\n  parse_keyword (line, fromAscii, evaluate) {\r\n  }\r\n\r\n  /**\r\n     * Implements arbitrary line parsing, for item-specific requirements.\r\n     * @param {String} line - The definition line to be parsed.\r\n     */\r\n  parse_line (line) {\r\n  }\r\n\r\n  /**\r\n    * Reads a single variable from a single definition line.\r\n    * @param {String} line - The definition line to be parsed.\r\n    * @return {Boolean} - Return true if the variabel is succesfully parsed.\r\n    */\r\n  parse_variable (line) {\r\n    // Reads a single variable from a single definition line.\r\n    if (this.parse_comment(line)) {\r\n      return true\r\n    } else {\r\n      // Split the single line into a set of tokens.\r\n      const [cmd, args, _kwargs] = this._runner._syntax.parse_cmd(line)\r\n      if (cmd === 'set') {\r\n        if (args.length !== 2) {\r\n          this._runner._debugger.addError('Failed to parse definition: ' + line)\r\n        } else {\r\n          this.vars.set(args[0], args[1])\r\n          return true\r\n        }\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Parses multiline variables from a script\r\n   * @param {String} script - The definition script line to be parsed.\r\n   */\r\n  parse_multiline_vars (script) {\r\n    const vars = this.syntax.parse_multiline_vars(script)\r\n    for (const key in vars) {\r\n      this.vars.set(key, vars[key])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses the item from a definition string.\r\n   * @param {String} script - The definition script line to be parsed.\r\n   */\r\n  from_string (script) {\r\n    // Parses the item from a definition string.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines. We keep track of whether we're\r\n    // inside a multiline variable definition, because those contain lines that\r\n    // are not syntactically valid.\r\n    if (script !== null) {\r\n      this.parse_multiline_vars(script)\r\n      const lines = script.split('\\n')\r\n      const pattern = /__(\\w+)__/gms\r\n      let in_multi = false\r\n      for (let line of lines) {\r\n        if (in_multi) {\r\n          if (line === '__end__') in_multi = false\r\n          continue\r\n        }\r\n        if (pattern.exec(line)) {\r\n          in_multi = true\r\n          continue\r\n        }\r\n        if ((line !== '') && (this.parse_variable(line) === false)) {\r\n          this.parse_line(line)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the reset item variables method. */\r\n  reset () {\r\n  }\r\n\r\n  /** Implements the prepeare phase of an item. */\r\n  prepare () {\r\n    // Set the internal counter.\r\n    this.experiment.vars.set('count_' + this.name, this.count)\r\n    this.count++\r\n\r\n    // Set the status to initialize.\r\n    this._status = constants.STATUS_INITIALIZE\r\n\r\n    // For debugging.\r\n    this._runner._debugger.addMessage('prepare ' + this.name)\r\n\r\n    // Implements the complete phase of the item (to support blocking script in the prepare phase).\r\n    if (!(this.type === 'sequence' && this._parent.type === 'sequence')) {\r\n      if ((this._parent !== null) && (this.type !== 'feedback')) {\r\n        // Prepare cycle of parent.\r\n        this._parent._prepare_complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set a onset time stamp before running an item.\r\n     * @param {Number} time - The time to store as onset time.\r\n     */\r\n  set_item_onset (time) {\r\n    // Set a timestamp for the item's executions\r\n    time = (typeof time === 'undefined') ? this.clock.time() : time\r\n\r\n    // Add the time stamp to the variable list.\r\n    this.experiment.vars.set('time_' + this.name, time)\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    this._runner._debugger.addMessage('run ' + this.name)\r\n  }\r\n}\r\n","/**\n * Loop utility functions\n */\nimport combos from 'combos'\nimport {\n  isInteger,\n  isArray,\n  isPlainObject,\n  isString,\n  isEmpty,\n  shuffle,\n  zip,\n  zipObject,\n  fromPairs,\n  pick,\n  reverse\n} from 'lodash'\n\n/**\n * Group matrix values by their variables names\n *\n * @param {Object} srcMatrix The source matrix to transform\n * @returns {Object}\n */\nexport function unstack (srcMatrix) {\n  if (!isArray(srcMatrix)) {\n    throw new TypeError('srcMatrix should be an array')\n  }\n  return Object.values(srcMatrix).reduce((acc, cycle) => {\n    for (const [key, val] of Object.entries(cycle)) {\n      if (key in acc) {\n        acc[key].push(val)\n      } else {\n        acc[key] = [val]\n      }\n    }\n    return acc\n  }, {})\n}\n\n/**\n * Convert grouped by variable matrix back to a normal matrix\n * @param {array} srcMatrix\n * @returns {array}\n */\nexport function stack (srcMatrix) {\n  if (!isPlainObject(srcMatrix)) {\n    throw new TypeError('srcMatrix should be an object')\n  }\n  const columns = Object.keys(srcMatrix)\n  const rows = zip(...Object.values(srcMatrix))\n  return rows.map(row => zipObject(columns, row))\n}\n\n/**\n * Creates a full factorial design of all the variable values in the matrix\n * @param {array} matrix The array of cycles to fully cross\n * @returns {array}\n */\nexport function fullfactorial (matrix) {\n  const result = combos(unstack(matrix))\n  return result\n}\n\n/**\n * Shuffles the order of the rows in the matrix. If a column/variable name\n * is specified, only the rows in this column are shuffled.\n *\n * @export\n * @param {array} matrix The matrix to be shuffled\n * @param {array} columns  Array containing the variable/column to be shuffled\n * @returns {array}\n */\nexport function shuffleVert (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof (columns) === 'undefined' || (isArray(columns) && columns.length === 0)) {\n    return shuffle(matrix)\n  } else if (!isArray(columns)) {\n    throw new TypeError('Invalid argument for columns passed to shuffleVert. Expects an array containing column names')\n  } else {\n    const grouped = unstack(matrix)\n    let cols = pick(grouped, columns)\n    cols = Object.entries(cols).reduce((prev, [key, values]) => {\n      prev[key] = shuffle(values)\n      return prev\n    }, {})\n    return stack({ ...grouped, ...cols })\n  }\n}\n\n/**\n * Shuffles the matrix horizontally; shuffle the values of the columns\n * If column names are specified, only these will be shuffled\n *\n * @export\n * @param {array} matrix\n * @param {array} columns\n * @returns {array}\n */\nexport function shuffleHoriz (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof columns === 'undefined') columns = []\n  if (!isArray(columns)) {\n    throw new TypeError('Invalid argument specified to shuffleHoriz. Expects an array that optionally contains column names to shuffle')\n  }\n  return Object.values(matrix).map(row => {\n    const vars = columns.length === 0\n      ? row\n      : pick(row, columns)\n    const keys = Object.keys(vars)\n    let vals = Object.values(vars)\n    vals = shuffle(vals)\n    const res = fromPairs(zip(keys, vals))\n    return { ...row, ...res }\n  })\n}\n\n/**\n * Sorts only the specified columns of the matrix\n *\n * @export\n * @param {array} matrix\n * @param {string} col\n * @returns array\n */\nexport function sortCol (matrix, col) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (!isString(col) || col === '') {\n    throw new Error('Invalid argument specified to sortCol. Expects a column name')\n  }\n  const grouped = unstack(matrix)\n  grouped[col].sort()\n  return stack(grouped)\n}\n\n/**\n * Reverses the matrix order\n * If column names are specified, only their orders are reversed\n * @export\n * @param {array} matrix\n * @param {array} columns\n * @returns {array}\n */\nexport function reverseRows (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof columns === 'undefined') columns = []\n  if (!isArray(columns)) {\n    throw new TypeError('Invalid argument specified to reverseRows. Expects an array containing a column name')\n  }\n  if (columns.length === 0) {\n    return reverse(matrix)\n  } else {\n    const grouped = unstack(matrix)\n    let cols = pick(grouped, columns)\n    if (isEmpty(cols)) {\n      throw new ReferenceError(`one or more of ${columns} were not found in the matrix`)\n    }\n    cols = Object.entries(cols).reduce((prev, [key, values]) => {\n      prev[key] = reverse(values)\n      return prev\n    }, {})\n    return stack({ ...grouped, ...cols })\n  }\n}\n\n/**\n * Rolls the matrix with the specified distance\n *\n * @export\n * @param {array} matrix\n * @param {number} amount\n * @param {string} column\n * @returns array\n */\nexport function roll (matrix, amount, column) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  // operate on a copy of the array to preserve the original\n  matrix = [...matrix]\n\n  amount = parseInt(amount)\n  if (!isInteger(amount)) {\n    throw new TypeError(`amount needs to be an integer, was ${amount}`)\n  }\n\n  if (!column) {\n    return rollN(matrix, amount)\n  }\n\n  if (!isString(column)) {\n    throw new TypeError(`column expects a string, was ${column}`)\n  } else {\n    const grouped = unstack(matrix)\n    if (!Object.prototype.hasOwnProperty.call(grouped, column)) {\n      throw new ReferenceError(`Could not find column ${column} in matrix`)\n    }\n    grouped[column] = rollN(grouped[column], amount)\n    return stack(grouped)\n  }\n}\n\n/**\n * Roll array contents forward or backward by the specified amount\n *\n * @param {array} list\n * @param {number} amount\n * @returns {array}\n */\nfunction rollN (list, amount) {\n  if (amount > 0) {\n    for (let i = 0; i < amount; i++) {\n      list.unshift(list.pop())\n    }\n  } else {\n    for (let i = 0; i > amount; i--) {\n      list.push(list.shift())\n    }\n  }\n  return list\n}\n\n/**\n * Duplicate (or remove) rows depending on the specified weight parameter\n *\n * @param {array} matrix The matrix containing the data\n * @param {string} weightCol The colom to use for weight values\n */\nexport function weight (matrix, weightCol) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (!isString(weightCol)) {\n    throw new TypeError('Invalid argument passed to weight. Expects a column name')\n  }\n  if (!Object.prototype.hasOwnProperty.call(matrix[0], weightCol)) {\n    throw new ReferenceError(`Column '${weightCol}' not found in matrix`)\n  }\n  return matrix.reduce((result, item) => {\n    const weight = parseInt(item[weightCol])\n    if (!isInteger(weight)) {\n      throw new TypeError('Specified weight value is not an integer')\n    }\n    for (let i = 0; i < weight; i++) {\n      result.push(item)\n    }\n    return result\n  }, [])\n}\n","import {\r\n  isNumber,\r\n  isArray,\r\n  shuffle,\r\n  sortBy\r\n} from 'lodash'\r\n\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\nimport Item from './item.js'\r\n\r\nimport {\r\n  fullfactorial,\r\n  shuffleVert,\r\n  shuffleHoriz,\r\n  sortCol,\r\n  reverseRows,\r\n  roll,\r\n  weight\r\n} from '../util/matrix'\r\n\r\nimport parse from \"csv-parse/lib/sync\"\r\n\r\n\r\n/**\r\n * Class representing a sequence item.\r\n * @extends Item\r\n */\r\nexport default class Loop extends Item {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Repeatedly runs another item'\r\n    this.matrix = null\r\n\r\n    // Definition of private properties.\r\n    this._break_if = ''\r\n    this._cycles = []\r\n    this._index = 0\r\n    this._keyboard = null\r\n    this._operations = []\r\n    this._initialized = false\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    this._status = constants.STATUS_FINALIZE\r\n    super._complete()\r\n  }\r\n\r\n  /**\r\n   * Scans the provided list of argument for variables and retrieves them if found.\r\n   * The function works recursively and thus also parses elements inside arrays that are part of\r\n   * args.\r\n   *\r\n   * @param {array} args The list of arguments to parse.\r\n   * @returns {array} The parsed arguments list\r\n   */\r\n  _eval_args (args) {\r\n    if (!isArray(args)) return args\r\n    return args.map( el => {\r\n      if (isArray(el)) {\r\n        return this._eval_args(el)\r\n      } else {\r\n        return this._runner._syntax.remove_quotes(this._runner._syntax.eval_text(el))\r\n      }\r\n    })\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.orig_matrix = []\r\n    this.vars.cycles = 1\r\n    this.vars.repeat = 1\r\n    this.vars.skip = 0\r\n    this.vars.offset = 'no'\r\n    this.vars.order = 'random'\r\n    this.vars.item = ''\r\n    this.vars.break_if = 'never'\r\n    this.vars.source = 'table'\r\n    this.vars.source_file = ''\r\n    this._index = 0\r\n    this._operations = []\r\n    this._initialized = false\r\n  }\r\n\r\n  /**\r\n   * Parse a definition string and retrieve all properties of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  from_string (script) {\r\n    // Creates a loop from a definition in a string.\r\n    this.comments = []\r\n    this.variables = {}\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script != null) {\r\n      const lines = script.split('\\n')\r\n      for (let i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          const [instruction, ...params] = this.syntax.split(lines[i])\r\n\r\n          let cycle, name, value\r\n\r\n          switch (instruction) {\r\n          case 'run':\r\n            if (params.length > 0) this.vars.item = params[0]\r\n            break\r\n          case 'setcycle':\r\n            if (params.length <= 2) {\r\n              this._runner._debugger.addError(`Incorrect setcycle command in item ${this.name}`)\r\n              break\r\n            }\r\n            cycle = params[0]\r\n            name = params[1]\r\n            value = this.syntax.remove_quotes(params[2])\r\n            // Check if the value is numeric\r\n            value = isNumber(value) ? Number(value) : value\r\n            // If a python expression, convert to javascript.\r\n            if (value[0] === '=') {\r\n              // Parse the python statement.\r\n              value = this._runner._pythonParser._prepare(value.slice(1))\r\n              if (value !== null) {\r\n                value = value.body[0]\r\n              }\r\n            }\r\n            if (this.orig_matrix[cycle] === undefined) {\r\n              this.orig_matrix[cycle] = {}\r\n            }\r\n            this.orig_matrix[cycle][name] = value\r\n            break\r\n          case 'fullfactorial':\r\n            this._operations.push([fullfactorial, []])\r\n            break\r\n          case 'shuffle':\r\n            this._operations.push([shuffleVert, [params]])\r\n            break\r\n          case 'shuffle_horiz':\r\n            this._operations.push([shuffleHoriz, [params]])\r\n            break\r\n          case 'slice':\r\n            this._operations.push([(matrix, args) => matrix.slice(...args), [params]])\r\n            break\r\n          case 'sort':\r\n            this._operations.push([sortCol, [...params]])\r\n            break\r\n          case 'sortby':\r\n            this._operations.push([sortBy, [params]])\r\n            break\r\n          case 'reverse':\r\n            this._operations.push([reverseRows, [params]])\r\n            break\r\n          case 'roll':\r\n            this._operations.push([roll, [...params]])\r\n            break\r\n          case 'weight':\r\n            this._operations.push([weight, [...params]])\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prepares the variables for one single cycle within the loop.\r\n   * @param {Number} cycle -The cycle to apply.\r\n   */\r\n  apply_cycle (cycle) {\r\n    // Sets all the loop variables according to the cycle.\r\n    if (cycle in this.matrix) {\r\n      for (const variable in this.matrix[cycle]) {\r\n        // Get the value of the variable.\r\n        let value = this.matrix[cycle][variable]\r\n\r\n        // Check for python expression.\r\n        if (typeof value === 'object') {\r\n          // value contains ast tree, run the parser.\r\n          try {\r\n            // Evaluate the expression\r\n            value = this._runner._pythonParser._runstatement(value)\r\n          } catch (e) {\r\n            // Error during evaluation.\r\n            this._runner._debugger.addError(\r\n              'Failed to evaluate expression in in loop item: ' + this.name + ' (' + value + ')')\r\n          }\r\n        } else {\r\n          // Evaluate variabels potentially available in value.\r\n          value = this._runner._syntax.eval_text(value)\r\n        }\r\n        // Set the variable.\r\n        this.experiment.vars.set(variable, value)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Make sure the item to run exists.\r\n    if (this.experiment.items._items[this.vars.item] === 'undefined') {\r\n      this._runner._debugger.addError('Could not find an item which is called by loop item: ' +\r\n      this.name + ' (' + this.vars.item + ')')\r\n    }\r\n    if (this.vars.get('source') === 'file') this.parseFileSource()\r\n    this._initialized = false\r\n    super.prepare()\r\n    this.set_item_onset()\r\n  }\r\n  \r\n  /** Reads the loop table from a csv file in the file pool **/\r\n  parseFileSource () {\r\n    let src = this.vars.get('source_file')\r\n    if (!src.toLowerCase().endsWith('.csv')) {\r\n      throw 'Only csv files are supported as source files by loop items'\r\n    }\r\n    if (typeof this._runner._pool[src] === 'undefined') {\r\n      throw 'Loop item refers to non-existing source file: ' + src\r\n    }\r\n    this.orig_matrix = parse(\r\n      this._runner._pool[src].data,\r\n      {columns: true, skip_empty_lines: true}\r\n    )\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    if (!this._initialized) {\r\n      // The first step is to create an array of cycle indices (`cycles`). We\r\n      // first add the integer part of the repeats to this array, which results\r\n      // in a `cycles` array with a length that is a multiple of the original\r\n      // matrix length.\r\n      let cycles = []\r\n      const wholeRepeats = Math.floor(this.vars.get('repeat'))\r\n      for (let j = 0; j < wholeRepeats; j++) {\r\n        for (let i in this.orig_matrix) {\r\n          cycles.push(i)\r\n        }\r\n      }\r\n      // Next, we add the non-integer part of the repeats to the cycles array.\r\n      const partialRepeats = this.vars.get('repeat') - wholeRepeats\r\n      if (partialRepeats > 0) {\r\n        // Get an array of all cycles indices. (This syntax is like a range().)\r\n        // For randomly ordered loops, shuffle the order of the indices.\r\n        // This makes sure that the next step of determining the repeatcycles\r\n        // is a 'random selection without replacement'\r\n        let allCycles = [...Array(this.orig_matrix.length).keys()]\r\n        if (this.vars.order === 'random') {\r\n          allCycles = shuffle(allCycles)\r\n        }\r\n        // Add the remaining cycles to the cycles array\r\n        const remainder = Math.floor(this.orig_matrix.length * partialRepeats)\r\n        cycles = [...cycles, ...allCycles.splice(0, remainder)]\r\n      }\r\n      if (this.vars.order === 'random') {\r\n        cycles = shuffle(cycles)\r\n      }\r\n      // Create a live matrix that takes into account the repeats and the\r\n      // shuffles.\r\n      this.matrix = []\r\n      for (let k in cycles) {\r\n        this.matrix.push(this.orig_matrix[cycles[k]])\r\n      }\r\n      // Perform the operations. This may change the number of cycles, which\r\n      // is why this._cycles is only determined afterwards.\r\n      this.matrix = this._operations.reduce((mtrx, [func, args]) =>\r\n        func(mtrx, ...this._eval_args(args)), this.matrix)      \r\n      this._cycles = [... this.matrix.keys()]\r\n      this._initialized = true\r\n      this._index = null\r\n    } // end init\r\n    // Check if if the cycle must be repeated.\r\n    if (this.experiment.vars.repeat_cycle === 1 && this._index !== null) {\r\n      this._runner._debugger.msg('Repeating cycle: ' + this._index)\r\n      this._cycles.push(this._index)\r\n      if (this.vars.get('order') === 'random') {\r\n        this._cycles = shuffle(this._cycles)\r\n      }\r\n    }\r\n    // When the loop is finished\r\n    if (this._cycles.length == 0) {\r\n      this._complete()\r\n      return\r\n    }\r\n    // Prepare for the current cycle\r\n    this._index = this._cycles.shift()\r\n    this.apply_cycle(this._index)\r\n    this.experiment.vars.repeat_cycle = 0\r\n    // Process the break-if statement\r\n    const break_if_val = this.vars.get('break_if', undefined, false)\r\n    this._break_if = ['never', ''].includes(break_if_val)\r\n      ? null\r\n      : this.syntax.compile_cond(break_if_val)\r\n    if (this._break_if !== null) {\r\n      this.python_workspace['this'] = this\r\n      if (this.python_workspace._eval(this._break_if) === true) {\r\n        this._complete()\r\n        this._initialized = false\r\n        return\r\n      }\r\n    }\r\n    // Execute the item to run\r\n    if (this._runner._itemStore._items[this.vars.item].type === 'sequence') {\r\n      this._runner._itemStore.prepare(this.vars.item, this)\r\n    } else {\r\n      this._runner._itemStore.execute(this.vars.item, this)\r\n    }\r\n  }\r\n}\r\n","/**\n * Base class for Mouse and Keyboard\n */\nexport default class ResponseDevice {\n  constructor () {\n    this._SYNONYM_MAP = []\n  }\n  /**\n   * Convert all response values to their default values (remove synonyms).\n   * @param {Array} responses - A list of response values.\n   * @return {Array} - List of default values for the given responses.\n   */\n  _get_default_from_synonym (responses) {\n    const defaults = []\n    let synonyms\n    for (let response of responses) {\n      synonyms = this._synonyms(response)\n      if (synonyms === null) {\n        throw new ReferenceError(`Unknown key '${response}'`)\n      }\n      defaults.push(synonyms[0])\n    }\n    return defaults\n  }\n  \n  /**\n   * Get all synonyms for a response value\n   * @param {String} button - A response.\n   * @return {Array|Null} - All synonyms or null if the response is unknown\n   */\n  _synonyms (response) {\n    if (typeof response === 'undefined')\n      return null\n    for (let synonyms of this._SYNONYM_MAP) {\n      if (synonyms.includes(response) || synonyms.includes(response.toLowerCase()))\n        return synonyms\n    }\n    return [response]\n  }\n\n  /** Clear all pending keyboard input. */\n  flush () {\n    // Always returns false because flusihing is not possible.\n    return false\n  }\n\n}\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\nimport ResponseDevice from './response_device.js'\r\n\r\n/** Class representing a keyboard device. */\r\nexport default class Keyboard extends ResponseDevice {\r\n  /**\r\n   * Create an object which represents a keyboard device.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   * @extends ResponseDevice   \r\n   */\r\n  constructor (experiment, timeOut, keyList) {\r\n    // Create and set private properties.\r\n    super()\r\n    this._experiment = experiment // Anchor to the experiment object.\r\n    this._keyList = (typeof keyList === 'undefined') ? [] : keyList // List of acceptable response keys.\r\n    this._timeOut = (typeof timeOut === 'undefined') ? null : timeOut // Duration in millisecond for time-out.\r\n\r\n    // Set constant properties.\r\n    this._SYNONYM_MAP = [\r\n      ['None', 'none'],  // timeout\r\n      ['space', ' ', 'SPACE'],\r\n      ['\"', 'quotedbl', 'QUOTEDBL'],\r\n      ['!', 'exclaim', 'EXCLAIM'],\r\n      ['#', 'hash', 'HASH'],\r\n      ['$', 'dollar', 'DOLLAR'],\r\n      ['&', 'ampersand', 'AMPERSAND'],\r\n      [\"'\", 'quote', 'QUOTE'],\r\n      ['(', 'leftbracket', 'leftparen', 'LEFTBRACKET', 'LEFTPAREN'],\r\n      [')', 'rightbracket', 'rightparen', 'RIGHTBRACKET', 'RIGHTPAREN'],\r\n      ['*', 'asteriks', 'ASTERISK'],\r\n      ['+', 'plus', 'PLUS'],\r\n      [',', 'comma', 'COMMA'],\r\n      ['-', 'minus', 'MINUS'],\r\n      ['.', 'period', 'PERIOD'],\r\n      ['/', 'slash', 'SLASH'],\r\n      ['1'],\r\n      ['2'],\r\n      ['3'],\r\n      ['4'],\r\n      ['5'],\r\n      ['6'],\r\n      ['7'],\r\n      ['8'],\r\n      ['9'],\r\n      ['0'],\r\n      ['=', 'equals', 'EQUALS'],\r\n      [':', 'colon', 'COLON'],\r\n      [';', 'semicolon', 'SEMICOLON'],\r\n      ['<', 'less', 'LESS'],\r\n      ['>', 'greater', 'GREATER'],\r\n      ['?', 'question', 'QUESTION'],\r\n      ['@', 'at', 'AT'],\r\n      ['a', 'A'],\r\n      ['b', 'B'],\r\n      ['c', 'C'],\r\n      ['d', 'D'],\r\n      ['e', 'E'],\r\n      ['f', 'F'],\r\n      ['g', 'G'],\r\n      ['h', 'H'],\r\n      ['i', 'I'],\r\n      ['j', 'J'],\r\n      ['k', 'K'],\r\n      ['l', 'L'],\r\n      ['m', 'M'],\r\n      ['n', 'N'],\r\n      ['o', 'O'],\r\n      ['p', 'P'],\r\n      ['q', 'Q'],\r\n      ['r', 'R'],\r\n      ['s', 'S'],\r\n      ['t', 'T'],\r\n      ['u', 'U'],\r\n      ['v', 'V'],\r\n      ['w', 'W'],\r\n      ['x', 'X'],\r\n      ['y', 'Y'],\r\n      ['z', 'Z'],\r\n      ['kp0', 'KP0'],\r\n      ['kp1', 'KP1'],\r\n      ['kp2', 'KP2'],\r\n      ['kp3', 'KP3'],\r\n      ['kp4', 'KP4'],\r\n      ['kp5', 'KP5'],\r\n      ['kp6', 'KP6'],\r\n      ['kp7', 'KP7'],\r\n      ['kp8', 'KP8'],\r\n      ['kp9', 'KP9'],\r\n      ['kp_divide', 'KP_DIVIDE'],\r\n      ['kp_enter', 'KP_ENTER'],\r\n      ['kp_equals', 'KP_EQUALS'],\r\n      ['kp_minus', 'KP_MINUS'],\r\n      ['kp_multiply', 'KP_MULTIPLY'],\r\n      ['kp_period', 'KP_PERIOD'],\r\n      ['kp_plus', 'KP_PLUS'],\r\n      ['\\\\', 'backslash', 'BACKSLASH'],\r\n      ['^', 'power', 'caret', 'POWER', 'CARET'],\r\n      ['_', 'underscore', 'UNDERSCORE'],\r\n      ['`', 'backquote', 'BACKQUOTE'],\r\n      ['f1', 'F1', 'help', 'HELP'],\r\n      ['f2', 'F2'],\r\n      ['f3', 'F3'],\r\n      ['f4', 'F4'],\r\n      ['f5', 'F5'],\r\n      ['f6', 'F6'],\r\n      ['f7', 'F7'],\r\n      ['f8', 'F8'],\r\n      ['f9', 'F9'],\r\n      ['f10', 'F10'],\r\n      ['f11', 'F11'],\r\n      ['f12', 'F12'],\r\n      ['f13', 'F13'],\r\n      ['f14', 'F14'],\r\n      ['f15', 'F15'],\r\n      ['up', 'UP'],\r\n      ['down', 'DOWN'],\r\n      ['left', 'LEFT'],\r\n      ['right', 'RIGHT'],\r\n      ['menu', 'MENU'],\r\n      ['lshift', 'left shift', 'LSHIFT', 'LEFT SHIFT'],\r\n      ['lctrl', 'left ctrl', 'LCTRL', 'LEFT CTRL'],\r\n      ['lalt', 'left alt', 'LALT', 'LEFT ALT'],\r\n      ['rshift', 'right shift', 'RSHIFT', 'RIGHT SHIFT'],\r\n      ['rctrl', 'right ctrl', 'RCTRL', 'RIGHT CTRL'],\r\n      ['ralt', 'right alt', 'alt gr', 'RALT', 'RIGHT ALT', 'ALT GR'],\r\n      ['page up', 'pageup', 'PAGE UP', 'PAGEUP'],\r\n      ['page down', 'pagedown', 'PAGE DOWN', 'PAGEDOWN'],\r\n      ['pause', 'PAUSE'],\r\n      ['scroll lock', 'scrollock', 'SCROLL LOCK', 'SCROLLOCK'],\r\n      ['caps lock', 'capslock', 'CAPS LOCK', 'CAPSLOCK'],\r\n      ['nummlock', 'NUMMLOCK'],\r\n      ['clear', 'CLEAR'],\r\n      ['enter', 'ENTER', 'return', 'RETURN'],\r\n      ['tab', 'TAB'],\r\n      ['backspace', 'BACKSPACE'],\r\n      ['end', 'END'],\r\n      ['home', 'HOME'],\r\n      ['insert', 'INSERT'],\r\n      ['delete', 'DELETE'],\r\n      ['sysreq', 'sys req', 'SYSREQ', 'SYS REQ'],\r\n      ['break', 'BREAK'],\r\n      ['escape', 'ESCAPE'],\r\n      ['print', 'PRINT'],\r\n      ['print screen', 'PRINT SCREEN'],\r\n      ['lmeta', 'left meta', 'LMETA', 'LEFT META', 'lsuper', 'LSUPER', 'left super', 'LEFT SUPER'],\r\n      ['rmeta', 'right meta', 'RMETA', 'RIGHT META', 'rsuper', 'right super', 'RSUPER', 'RIGHT SUPER'],\r\n      // key defined below are not supported yet.\r\n      ['euro', 'EURO'],\r\n      ['first', 'FIRST'],\r\n      ['last', 'LAST'],\r\n      ['kp enter', 'KP ENTER'],\r\n      ['kp equals', 'KP EQUALS'],\r\n      ['mode', 'MODE'],\r\n      ['unknown', 'UNKNOWN'],\r\n      ['unknown key', 'UNKNOWN KEY']\r\n    ]\r\n  }\r\n\r\n\r\n  /**\r\n   * Set the configuration for the keyboard backend.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  _set_config (timeOut, keyList) {\r\n    // Set the properties.\r\n    this._keyList = keyList\r\n    this._timeOut = timeOut\r\n  }\r\n\r\n  /**\r\n   * Collects a single key press.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  get_key (timeOut, keyList) {\r\n    // Collects a single key press.\r\n    this._keyList = (typeof keyList === 'undefined') ? this._keyList : keyList\r\n    this._timeOut = (typeof timeOut === 'undefined') ? this._timeOut : timeOut\r\n\r\n    if (this._experiment !== null) {\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(this._timeOut, constants.RESPONSE_KEYBOARD, this._keyList)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the moderator keys (LIST, CTRL, ALT) pressed during a response.\r\n   * @return {Array} - List of pressed moderator keys.\r\n   */\r\n  get_mods () {\r\n    var moderators = []\r\n    if (this._experiment._runner._events.keyDownEvent !== null) {\r\n      if (this._experiment._runner._events.keyDownEvent.event.shiftKey === true) {\r\n        moderators.push('shift')\r\n      }\r\n      if (this._experiment._runner._events.keyDownEvent.event.ctrlKey === true) {\r\n        moderators.push('ctrl')\r\n      }\r\n      if (this._experiment._runner._events.keyDownEvent.event.altKey === true) {\r\n        moderators.push('alt')\r\n      }\r\n    }\r\n    return moderators\r\n  }\r\n\r\n  /**\r\n   * Shows or hides a virtual keyboard.\r\n   * @param {Boolean} visible - If true the virtual keyboard is shown.\r\n   */\r\n  show_virtual_keyboard (visible) {\r\n    // Shows or hides a virtual keyboard.\r\n    if (visible === true) {\r\n      // Hack to show the virutal keyboard. ## Must be tested!\r\n      this._experiment._runner._renderer.view.focus()\r\n    } else {\r\n      // Hack to hide the virtual keyboard. ## Must be tested!\r\n      var tmp = document.createElement('input')\r\n      document.body.appendChild(tmp)\r\n      tmp.focus()\r\n      document.body.removeChild(tmp)\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a Sequence item.\r\n * @extends Item\r\n */\r\nexport default class Sequence extends Item {\r\n  /** The sequence class controls the running of a series of items. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._index = -1\r\n    this._items = null\r\n    this._keyboard = null\r\n\r\n    // Create and set public properties.\r\n    this.description = 'Runs a number of items in sequence'\r\n    this.flush_keyboard = 'yes'\r\n    this.items = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the prepare complete phase of an item. */\r\n  _prepare_complete () {\r\n    // Generate the items list for the run cycle.\r\n    if (this._index < this.items.length) {\r\n      if ((this.items[this._index].item in this._runner._itemStore._items) === false) {\r\n        this._runner._debugger.addError('Could not find a child item which is called by sequence item: ' + this.name + ' (' + this.items[this._index].item.name + ')')\r\n      } else {\r\n        // Increase the current index.\r\n        this._index++\r\n\r\n        // Add the item to the internal list.\r\n        this._items.push({\r\n          item: this.items[this._index - 1].item,\r\n          cond: this.syntax.compile_cond(this.items[this._index - 1].cond)\r\n        })\r\n\r\n        // Prepare the item.\r\n        this._runner._itemStore.prepare(this.items[this._index - 1].item, this)\r\n      }\r\n    } else {\r\n      // Prepare process is done, start execution.\r\n      this._index = 0\r\n\r\n      // Remove the prepare phase form the stack.\r\n      this._runner._itemStack.pop()\r\n\r\n      // Check if this sequence is part of a parent sequence and must jump back in the prepare phase.\r\n      if (this._parent.type === 'sequence') {\r\n        this._parent._prepare_complete()\r\n      } else {\r\n        // Execute the next cycle of the sequence itself.\r\n        this._runner._itemStore.run(this.name, this._parent)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.items = []\r\n    this.vars.flush_keyboard = 'yes'\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Parses a definition string.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          var tokens = this.syntax.split(lines[i])\r\n          if ((tokens.length > 0) && (tokens[0] === 'run')) {\r\n            var item = tokens[1]\r\n            var cond = 'always'\r\n            if (tokens.length > 2) {\r\n              cond = this.syntax.strip_slashes(\r\n                this.syntax.remove_quotes(tokens[2])\r\n              )\r\n            }\r\n            // Push the item and condition definition to the items list.\r\n            this.items.push({\r\n              item: item,\r\n              cond: cond\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Inherited.\r\n    super.prepare()\r\n\r\n    // Create a keyboard to flush responses at the start of the run phase\r\n    if (this.vars.flush_keyboard === 'yes') {\r\n      this._keyboard = new Keyboard(this.experiment)\r\n    } else {\r\n      this._keyboard = null\r\n    }\r\n\r\n    // Generate the items list for the run cycle.\r\n    this._index = 0\r\n    this._items = []\r\n\r\n    // Prepare the items.\r\n    this._prepare_complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Check if all items have been processed.\r\n    if (this._index < this._items.length) {\r\n      // Flush the keyboard at the beginning of the sequence.\r\n      if ((this._index === 0) && (this.vars.flush_keyboard === 'yes')) {\r\n        this._keyboard.flush()\r\n      }\r\n\r\n      // Increase the current index.\r\n      this._index++\r\n      const currentItem = this._items[this._index - 1]\r\n\r\n      // Set the workspace.\r\n      this._runner._pythonWorkspace.self = this\r\n\r\n      // Check if the item may run.\r\n      if (this._runner._pythonWorkspace._eval(currentItem.cond) === true) {\r\n        // run the current item of the sequence object.\r\n        this._runner._itemStore.run(currentItem.item, this)\r\n      } else {\r\n        // Execute the next cycle of the sequence itself.\r\n        this.run()\r\n      }\r\n    } else {\r\n      // sequence is finalized.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import sortBy from 'lodash/sortBy'\nimport isFunction from 'lodash/isFunction'\n\nimport Item from './item.js'\nimport { constants } from '../system/constants.js'\n\n/**\n * Class representing coroutines\n * @extends Item\n */\nexport default class Coroutines extends Item {\n  constructor (experiment, name, script) {\n    // Inherited create.\n    super(experiment, name, script)\n    // Definition of public properties.\n    this.description = 'Repeatedly runs another item'\n    // The tasks to perform\n    this.tasks = []\n    // The tasks to perform this iteration\n    this.schedule = []\n    // Process the script.\n    this.from_string(script)\n  }\n\n  from_string (script) {\n    if (script === null) return\n    for (const s of script.split('\\n')) {\n      const [cmd, arglist, kwdict] = this.experiment.syntax.parse_cmd(s)\n      if (cmd === 'set') {\n        const [variable, value] = arglist\n        this.vars[variable] = value\n      }\n      if (cmd === 'run' && arglist.length) {\n        const task = {\n          item_name: arglist.shift(),\n          start_time: kwdict.start || 0,\n          end_time: kwdict.end || 0,\n          run_if: kwdict.runif || 'always'\n        }\n        this.tasks.push(task)\n      }\n    }\n  }\n\n  prepare () {\n    this._runner._debugger.addMessage(`Preparing coroutines item '${this.name}'`)\n    this.schedule = this.tasks.reduce((result, taskParams) => {\n      const item_name = this._runner._syntax.eval_text(taskParams.item_name, this.vars)\n      const item = this._runner._itemStore._items[item_name]\n      if (!item) {\n        const msg = `Coroutines '${this.name}' - could not find item: ${item_name}`\n        this._runner._debugger.addError(msg)\n        throw new Error(msg)\n      }\n      this._runner._pythonWorkspace.self = this\n      const cond = this._runner._syntax.compile_cond(taskParams.run_if)\n      if (this._runner._pythonWorkspace._eval(cond) === true) {\n        const start_time = this._runner._syntax.eval_text(taskParams.start_time, this.vars)\n        const end_time = this._runner._syntax.eval_text(taskParams.end_time, this.vars)\n        result.push(new Task(item, item_name, start_time, end_time,\n          taskParams.item_name === this.vars.get('end_after_item')))\n      }\n      return result\n    }, [])\n    super.prepare()\n  }\n\n  run () {\n    this._runner._debugger.addMessage(`Running coroutines item '${this.name}'`)\n    super.run()\n    // Prepare all tasks\n    for (const task of this.schedule) {\n      this._runner._itemStore.prepare(task.item_name, this)\n    }\n    this.schedule = sortBy(this.schedule, 'start_time')\n    // Launch all tasks and wrap them in the coroutine helper\n    for (const task of this.schedule) {\n      this._runner._debugger.addMessage(`Launching task '${task.item_name}'`)\n      task.launch()\n    }\n\n    this.active = []\n    this.dt = 0\n    this.t0 = performance.now()\n    this.running = true\n\n    this._loop()\n  }\n\n  _loop () {\n    while (this.schedule.length > 0 && this.schedule[0].started(this.dt)) {\n      this.active.push(this.schedule.shift())\n    }\n    this.active = sortBy(this.active, 'end_time')\n    const _active = []\n    for (const task of this.active) {\n      const status = task.step()\n      if (status === task.RUNNING) {\n        _active.push(task)\n        continue\n      }\n      if (status === task.ABORTED) {\n        this.running = false\n      }\n    }\n    this.active = _active\n    while (this.active.length > 0 && this.active[0].stopped(this.dt)) {\n      this.active.shift()\n    }\n\n    this.dt = performance.now() - this.t0\n    if (this.running && this.dt < this.vars.get('duration') &&\n      ![constants.TIMER_BREAK, constants.TIMER_EXIT, constants.TIMER_ERROR]\n        .includes(this._runner._events._state)) {\n      setTimeout(this._loop.bind(this), 0) // The well-known trick to deal with JS async nature...\n    } else {\n      // Kill all remaining tasks\n      for (const task of this.active) {\n        this._runner._debugger.addMessage(`Killing task '${task.item_name}'`)\n        task.kill()\n      }\n      this._complete()\n    }\n  }\n}\n\nclass Task {\n  UNINITIALISED = 0\n  RUNNING = 1\n  FINISHED = 2\n  ABORTED = -1\n\n  constructor (item, item_name, start_time, end_time, abort_on_end) {\n    this.item = item\n    this.item_name = item_name\n    this.start_time = start_time\n    this.end_time = end_time\n    this.abort_on_end = abort_on_end\n    this.state = this.UNINITIALISED\n    this._coroutine = null\n    this.step = () => { throw new Error('Task has not been initialized') }\n  }\n\n  launch () {\n    if (!isFunction(this.item.coroutine)) {\n      throw new Error(`Item ${this.item_name} does not have correct coroutine implementation`)\n    }\n    this._coroutine = this.item.coroutine()\n    this._coroutine.next()\n    this.step = () => {\n      // console.log(`Stepping ${this.item_name}`)\n      const { value, done } = this._coroutine.next(true)\n      if (value === false) {\n        this.state = this.ABORTED\n        return this.ABORTED\n      }\n      if (done === true) {\n        let newState\n        if (this.abort_on_end) {\n          newState = this.ABORTED\n        } else {\n          newState = this.FINISHED\n        }\n        this.state = newState\n        return this.state\n      }\n      return this.state // Should be this.RUNNING\n    }\n    this.state = this.RUNNING\n  }\n\n  started (dt) {\n    return dt >= this.start_time\n  }\n\n  stopped (dt) {\n    if (dt < this.end_time) {\n      return false\n    }\n    return this.kill()\n  }\n\n  kill () {\n    const response = this._coroutine.next(false)\n    if (response.done === true) {\n      this.state = this.FINISHED\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\nimport ResponseDevice from './response_device.js'\r\n\r\n/** Class representing a mouse device. */\r\nexport default class Mouse extends ResponseDevice {\r\n  /**\r\n   * Create an object which represents a mouse device.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   * @extends ResponseDevice\r\n   */\r\n  constructor (experiment, timeOut, buttonList, visible) {\r\n    // Create and set public properties.\r\n    super()\r\n    this._experiment = experiment\r\n    this._timeOut = (typeof timeOut === 'undefined') ? null : timeOut\r\n    this._buttonList = (typeof buttonList === 'undefined') ? null : buttonList\r\n    this._visible = (typeof visible === 'undefined') ? false : visible\r\n\r\n    // Set constant properties.\r\n    this._SYNONYM_MAP = [\r\n      ['None', 'none'],  // timeout\r\n      ['1', 'left_button', 'left'],\r\n      ['2', 'middle_button', 'middle'],\r\n      ['3', 'right_button', 'right'],\r\n      ['4', 'scroll_up'],\r\n      ['5', 'scroll_down']\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Set the configuration for the mouse backend.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  _set_config (timeOut, buttonList, visible) {\r\n    // Set mouse properties.\r\n    this._timeOut = timeOut\r\n    this._buttonList = buttonList\r\n    this._visible = visible\r\n  }\r\n\r\n  /**\r\n   * Collects a single mouse click.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  get_click (timeOut, buttonList, visible) {\r\n    // Collects a single mouse click.\r\n    this._timeOut = (typeof timeOut === 'undefined') ? this._timeOut : timeOut\r\n    this._buttonList = (typeof buttonList === 'undefined') ? this._buttonList : buttonList\r\n    this._visible = (typeof visible === 'undefined') ? this._visible : visible\r\n\r\n    if (this._experiment !== null) {\r\n      // Hide or show the mouse.\r\n      this.show_cursor(this._visible)\r\n\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(this._timeOut, constants.RESPONSE_MOUSE, this._buttonList)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Returns the current mouse position. !Warning: this methods uses the state in\r\n   *  the last known mouse move, not the current state.\r\n   *  @param {Object} - Object with time, x and y coordinate of the mouse cursor.\r\n   */\r\n  get_pos () {\r\n    // Returns the current mouse position. !Warning: this methods uses the state in the last known mouse respone, not the current state.\r\n    if (this._experiment._runner._events._mouseMoveEvent !== null) {\r\n      return {\r\n        rtTime: this._experiment._runner._events._mouseMoveEvent.rtTime,\r\n        x: this._experiment._runner._events._mouseMoveEvent.event.clientX,\r\n        y: this._experiment._runner._events._mouseMoveEvent.event.clientY\r\n      }\r\n    } else {\r\n      return {\r\n        rtTime: -1,\r\n        x: -1,\r\n        y: -1\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Returns the current mouse position. !Warning: this methods uses the state in\r\n   *  the last known mouse press, not the current state.\r\n   *  @param {Object} - Object with the state of the mouse buttons.\r\n   */\r\n  get_pressed () {\r\n    // Returns the current button state of the mouse buttons. !Warning: this methods uses the state in the last known mouse respone, not the current state.\r\n    if (this._experiment._runner.events._mouse_press !== null) {\r\n      return {\r\n        buttons: [(this._experiment._runner._events._mouseDownEvent.event.button === 0),\r\n          (this._experiment._runner._events._mouseDownEvent.event.button === 1),\r\n          (this._experiment._runner._events._mouseDownEvent.event.button === 2)\r\n        ]\r\n      }\r\n    } else {\r\n      return {\r\n        buttons: [null, null, null]\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Sets the current position of the cursor. */\r\n  set_pos (pos) {}\r\n\r\n  /**\r\n   * Shows or hides the mouse cursor.\r\n   * @param {Boolean} show - If true the mouse cursor is shown.\r\n   */\r\n  show_cursor (show) {\r\n    // Set the property\r\n    this._visible = show\r\n\r\n    // Immediately changes the visibility of the mouse cursor.\r\n    if (show === true) {\r\n      // Show the mouse cursor.\r\n      this._experiment._runner._renderer.view.style.cursor = 'default'\r\n    } else {\r\n      // Set the cursor visibility to none.\r\n      this._experiment._runner._renderer.view.style.cursor = 'none'\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\nimport Mouse from '../backends/mouse.js'\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a GeneralResponse item.\r\n * @extends Item\r\n */\r\nexport default class GenericResponse extends Item {\r\n  /** The sequence class controls the running of a serie of items. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._allowed_responses = null\r\n    this._duration = 0\r\n    this._duration_func = null\r\n    this._keyboard = null\r\n    this._mouse = null\r\n    this._responsetype = constants.RESPONSE_NONE\r\n    this._timeout = -1\r\n\r\n    // Create and set public properties.\r\n    this.process_feedback = false\r\n    this.synonyms = null\r\n  }\r\n\r\n  /** Implements the complete phase of the general response item. */\r\n  _complete () {\r\n    // Check if a timeout has occured which must be treaded as a response.\r\n    let timeout = this.vars.get('timeout')\r\n    if ((typeof timeout !== 'undefined') &&\r\n      ((this.experiment._runner._events._timeStamp - this.experiment.vars.get('time_' + this.name)) > timeout)) {\r\n      // Process the timeout none response.\r\n      this.process_response_timeout()\r\n    }\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /**\r\n     * Implements the update response phase of the general response item.\r\n     * @param {Object} response - The response object which is evaluated.\r\n     */\r\n  _update (response) {\r\n    if (response !== null) {\r\n      // Implements the update response phase of the item.\r\n      if ((this._responsetype === constants.RESPONSE_KEYBOARD) &&\r\n        (response.type === constants.RESPONSE_KEYBOARD)) {\r\n        this.process_response_keypress(response)\r\n      } else if ((this._responsetype === constants.RESPONSE_MOUSE) &&\r\n        (response.type === constants.RESPONSE_MOUSE)) {\r\n        this.process_response_mouseclick(response)\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Converts a string of semi-colon separated responses to an array of\r\n   * responses.\r\n   **/\r\n  _prepare_responses (responses) {\r\n    if (responses === null)\r\n      return null\r\n    let response_array = String(responses).split(';')\r\n      .map(item => (typeof item === 'string')\r\n        ? item.replace(/^\"(.*)\"$/g, '$1').trim()\r\n        : item).filter(Boolean)\r\n    if (response_array.length === 0)\r\n      return null\r\n    if (this.vars.duration === 'keypress') {\r\n        response_array = this._keyboard._get_default_from_synonym(response_array)\r\n      } else if (this.vars.duration === 'mouseclick') {\r\n        response_array = this._mouse._get_default_from_synonym(response_array)\r\n      }\r\n    return response_array\r\n  }\r\n\r\n  /** Prepare the list with allowed responses */\r\n  prepare_allowed_responses () {\r\n    this._allowed_responses = this._prepare_responses(this.vars.get('allowed_responses'))\r\n    if ((this._allowed_responses !== null) && (this._allowed_responses.length === 0)) {\r\n      this.experiment._runner._debugger.addError(\r\n        'Defined responses are not valid in keyboard_response: ' +\r\n        this.name + ' (' + this.vars.get('allowed_responses') + ')')\r\n    }\r\n  }\r\n  \r\n  /** Prepare the list with correct responses */\r\n  prepare_correct_responses () {\r\n    this._correct_responses = this._prepare_responses(this.vars.get('correct_response'))\r\n    if ((this._correct_responses !== null) && (this._correct_responses.length === 0)) {\r\n      this.experiment._runner._debugger.addError(\r\n        'Correct response is not valid in keyboard_response: ' +\r\n        this.name + ' (' + this.vars.get('correct_response') + ')')\r\n    }\r\n  }\r\n\r\n  // Prepare the duration of the stimulus interaction. */\r\n  prepare_duration () {\r\n    this._duration = this.syntax.remove_quotes(this.vars.get('duration'))\r\n    if (this._duration === null)\r\n      return\r\n    if ((this._duration === 'keypress') || (this._duration === 'mouseclick') ||\r\n        (this._duration === 'sound') || (this._duration === 'video')) {\r\n      this._duration = -1\r\n      if (this.vars.duration === 'keypress') {\r\n        this.prepare_duration_keypress()\r\n        this._responsetype = constants.RESPONSE_KEYBOARD\r\n      } else if (this.vars.duration === 'mouseclick') {\r\n        this.prepare_duration_mouseclick()\r\n        this._responsetype = constants.RESPONSE_MOUSE\r\n      } else if (this.vars.duration === 'sound') {\r\n        this._responsetype = constants.RESPONSE_SOUND\r\n      } else if (this.vars.duration === 'video') {\r\n        this._responsetype = constants.RESPONSE_VIDEO\r\n      }\r\n      return\r\n    }\r\n    // Prepare a duration in milliseconds\r\n    this._duration = Number(this._duration)\r\n    if (this._duration === 0) {\r\n      this._responsetype = constants.RESPONSE_NONE\r\n    } else {\r\n      this._responsetype = constants.RESPONSE_DURATION\r\n    }\r\n  }\r\n\r\n  /** Prepare the system for a keyboard duration interval. */\r\n  prepare_duration_keypress () {\r\n    // Prepare a keyboard duration.\r\n    this._keyboard = new Keyboard(this.experiment)\r\n    this._final_duration = (this._timeout !== -1) ? this._timeout : this._duration\r\n  }\r\n\r\n  /** Prepare the system for a mouseclick duration interval. */\r\n  prepare_duration_mouseclick () {\r\n    // Prepare a mouseclick duration.\r\n    this._mouse = new Mouse(this.experiment)\r\n    this._final_duration = (this._timeout !== -1) ? this._timeout : this._duration\r\n  }\r\n\r\n  /** Prepare the system for a timeout. */\r\n  prepare_timeout () {\r\n    let timeout = this.vars.get('timeout')\r\n    if (timeout === null) return\r\n    this._timeout = (typeof timeout === 'number') ? timeout : -1\r\n  }\r\n  \r\n  /** Sets duration and allowed responses on the response object. **/\r\n  configure_response_objects() {\r\n    if (this.vars.duration === 'keypress') {\r\n      this._keyboard._set_config(this._final_duration, this._allowed_responses)\r\n    } else if (this.vars.duration === 'mouseclick') {\r\n      this._mouse._set_config(this._final_duration, this._allowed_responses, false)\r\n    }\r\n  }\r\n\r\n  /** Select the type of stimulus response processing. */\r\n  process_response () {\r\n    // Start stimulus response cycle.\r\n    switch (this._responsetype) {\r\n    case constants.RESPONSE_NONE:\r\n      // Duration is 0, so complete the stimulus/response cycle.\r\n      this._status = constants.STATUS_FINALIZE\r\n      this._complete()\r\n      break\r\n    case constants.RESPONSE_DURATION:\r\n      this.sleep_for_duration()\r\n      break\r\n    case constants.RESPONSE_KEYBOARD:\r\n      this._keyboard.get_key()\r\n      break\r\n    case constants.RESPONSE_MOUSE:\r\n      this._mouse.get_click()\r\n      break\r\n    case constants.RESPONSE_SOUND:\r\n      this._sampler.wait()\r\n      break\r\n    case constants.RESPONSE_VIDEO:\r\n      this._video_player.wait()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Sets the mouse coordinates based **/\r\n  set_mouse_coordinates (clientX, clientY) {\r\n    // We need the top-left and scaling of the viewport to set the mouse\r\n    // coordinates so that 0,0 corresponds to the display center. The scaling\r\n    // needs to be taken into account also such that the viewport always has\r\n    // the same size in cursor coordinates, even if it's scaled down.\r\n    const rect = this._runner._renderer.view.getBoundingClientRect()\r\n    const scale = Math.min(\r\n      (rect.right - rect.left) / this.experiment.vars.width,\r\n      (rect.bottom - rect.top) / this.experiment.vars.height\r\n    )\r\n    const center_x = scale * this.experiment.vars.width / 2\r\n    const center_y = scale * this.experiment.vars.height / 2\r\n    this.experiment.vars.cursor_x = (clientX - center_x - rect.left) / scale\r\n    this.experiment.vars.cursor_y = (clientY - center_y - rect.top) / scale\r\n  }\r\n\r\n  /** Process a keyboard response. */\r\n  process_response_keypress (retval) {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = retval.rtTime\r\n    this.experiment.vars.response = this.syntax.sanitize(retval.resp)\r\n    this.synonyms = this._keyboard._synonyms(this.experiment.vars.response)\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** Process a mouse click response. */\r\n  process_response_mouseclick (retval) {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = retval.rtTime\r\n    this.experiment.vars.response = retval.resp\r\n    this.synonyms = this._mouse._synonyms(this.experiment.vars.response)\r\n    this.set_mouse_coordinates(retval.event.clientX, retval.event.clientY)\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** Process a time out response. */\r\n  process_response_timeout () {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = this.experiment._runner._events._timeStamp\r\n    this.experiment.vars.response = 'None'\r\n    this.synonyms = ['None', 'none']\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** General response logging after a stimulus/response. */\r\n  response_bookkeeping () {\r\n    // The respone and response_time variables are always set, for every response item\r\n    this.experiment.vars.set('response_time', this.experiment._end_response_interval - this.experiment._start_response_interval)\r\n    this.experiment.vars.set('response_' + this.name, this.experiment.vars.get('response'))\r\n    this.experiment.vars.set('response_time_' + this.name, this.experiment.vars.get('response_time'))\r\n    this.experiment._start_response_interval = null\r\n    // But correctness information is only set for dedicated response items,\r\n    // such as keyboard_response items, because otherwise we might confound the\r\n    // feedback\r\n    if (this.process_feedback !== true)\r\n      return\r\n    if (this._correct_responses === null) {\r\n      this.experiment.vars.correct = 'undefined'\r\n      return\r\n    }\r\n    this.experiment.vars.correct = 0\r\n    for (let cr of this._correct_responses) {\r\n      if (this.synonyms.includes(cr)) {\r\n        this.experiment.vars.correct = 1\r\n        this.experiment.vars.total_correct = this.experiment.vars.total_correct + 1\r\n        break\r\n      }\r\n    }\r\n    this.experiment.vars.total_response_time = this.experiment.vars.total_response_time + this.experiment.vars.response_time\r\n    this.experiment.vars.total_responses = this.experiment.vars.total_responses + 1\r\n    this.experiment.vars.accuracy = Math.round(100.0 * this.experiment.vars.total_correct / this.experiment.vars.total_responses)\r\n    this.experiment.vars.acc = this.experiment.vars.accuracy\r\n    this.experiment.vars.average_response_time = Math.round(this.experiment.vars.total_response_time / this.experiment.vars.total_responses)\r\n    this.experiment.vars.avg_rt = this.experiment.vars.average_response_time\r\n    this.experiment.vars.set('correct_' + this.name, this.experiment.vars.correct)\r\n  }\r\n\r\n  /**\r\n     * Sets or resets the start of the stimulus response interval.\r\n     * @param {Boolean} reset - If true reset the sri value.\r\n     */\r\n  set_sri (reset) {\r\n    // Sets the start of the response interval.\r\n    if (reset === true) {\r\n      this.sri = self.vars.get('time_' + this.name)\r\n      this.experiment._start_response_interval = this.vars.get('time_' + this.name)\r\n    }\r\n    if (!this.experiment._start_response_interval) {\r\n      this.sri = this.experiment.vars.get('time_' + this.name)\r\n    } else {\r\n      this.sri = this.experiment._start_response_interval\r\n    }\r\n  }\r\n\r\n  /** Sleep for a specified time. */\r\n  sleep_for_duration () {\r\n    // Sleep for a specified time.\r\n    this.sleep(this._duration)\r\n  }\r\n\r\n  /** Implements the prepare phase of the general response item. */\r\n  prepare () {\r\n    // Implements the prepare phase of the item.\r\n    this.prepare_timeout()\r\n    this.prepare_duration()\r\n    this.prepare_allowed_responses()\r\n    this.prepare_correct_responses()\r\n    this.configure_response_objects()\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Canvas from '../backends/canvas.js'\r\n\r\n/**\r\n * Class representing a Sketchpad item.\r\n * @extends GeneralResponse\r\n */\r\nexport default class Sketchpad extends GenericResponse {\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n\r\n    // Create and set public properties.\r\n    this.canvas = new Canvas(experiment, false)\r\n    this.elements = []\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n     * Sort function used for determining the draw index (z-index) of alle elemente.\r\n     * @param {Object} a - The first object to compare.\r\n     * @param {Object} b - The second object to compare.\r\n     * @return {Number} - The result of the comparison.\r\n     */\r\n  _compare (a, b) {\r\n    // Sort function used for determining the draw index (z-index) of alle elemente.\r\n    if (a.z_index() < b.z_index()) { return 1 } else if (a.z_index() > b.z_index()) { return -1 } else { return 0 }\r\n  }\r\n\r\n  /** Implements the complete phase of the Sketchpad item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    // Resets all item variables to their default value.\r\n    this.elements = []\r\n    this.vars.duration = 'keypress'\r\n  }\r\n\r\n  /** Process a time out response. */\r\n  process_response_timeout () {\r\n    // Nothing happens\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Define and reset variables to their defaults.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n    if (script === null)\r\n      return\r\n    const lines = script.split('\\n')\r\n    for (let line of lines) {\r\n      if ((line === '') || (this.parse_variable(line) !== false))\r\n        continue\r\n      const tokens = this.syntax.split(line)\r\n      if ((tokens.length > 0) && (tokens[0] === 'draw')) {\r\n        if (this.experiment.items._isClass(tokens[1]) === true) {\r\n          var element = this.experiment.items._newElementClass(tokens[1], this, line)\r\n          this.elements.push(element)\r\n        } else {\r\n          this.experiment._runner._debugger.addError('Failed to parse definition: ' + tokens[1])\r\n        }\r\n      }\r\n    }\r\n    // Sort the elements usin the z-index.\r\n    this.elements.sort(this._compare)\r\n  }\r\n\r\n  /**\r\n   * Set the background color of the canvas if it is defined in the var store\r\n   *\r\n   * @memberof Sketchpad\r\n   */\r\n  _set_bg_color () {\r\n    const backgroundColor = this.vars.get('background')\r\n    if (backgroundColor) {\r\n      this.canvas._styles.background_color = backgroundColor\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Clear the canvas.\r\n    this.canvas.clear()\r\n\r\n    // Draw the elements.\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      if (this.elements[i].is_shown() === true) {\r\n        this.elements[i].draw()\r\n      }\r\n    }\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the Sketschpad. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    this._set_bg_color()\r\n    // Set the onset and start the stimulus response process.\r\n    this.set_item_onset(this.canvas.show())\r\n    this.set_sri(false)\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    yield\r\n    this._set_bg_color()\r\n    this.set_item_onset(this.canvas.show())\r\n  }\r\n}\r\n","import Sketchpad from './sketchpad.js'\r\n\r\n/**\r\n * Class representing a feedback item.\r\n * @extends Sketchpad\r\n */\r\nexport default class Feedback extends Sketchpad {\r\n  /**\r\n   * Create a feedback which show feedback info to the subhect.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Provides feedback to the participant'\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n\r\n    // Reset feedback variables.\r\n    if (this.vars.reset_variables === 'yes') {\r\n      this.experiment.reset_feedback()\r\n    }\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    // Inherited.\r\n    super.reset()\r\n\r\n    // Reset the variables.\r\n    this.vars.reset_variables = 'yes'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    this._parent._prepare_complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.prepare()\r\n    super.run()\r\n  }\r\n}\r\n","import Item from './item.js'\r\n\r\n/**\r\n * Class representing an inline item.\r\n * @extends Item\r\n */\r\nexport default class InlineScript extends Item {\r\n  /**\r\n     * Create an inline item which executes inline python code.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Executes Python code'\r\n\r\n    // Define and set the public properties.\r\n    this._prepare_run = false\r\n    this._prepare_tree = null\r\n    this._run_tree = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Check if the parser is in pause mode and must be restarted.\r\n    if (this.experiment._runner._pythonParser._status === 1) {\r\n      // Process the current active node.\r\n      this.experiment._runner._pythonParser._process_nodes()\r\n    } else {\r\n      if (this._prepare_run === true) {\r\n        // Inherited prepare.\r\n        super.prepare()\r\n      } else {\r\n        // Inherited.\r\n        super._complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the complete script phase of an item. */\r\n  _complete_script () {\r\n    // Added for video script functionaliry.\r\n    this._complete()\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.vars._prepare = ''\r\n    this.vars._run = ''\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Compile the script code to ast trees.\r\n    this._prepare_tree = this.experiment._runner._pythonParser._parse(this.vars._prepare)\r\n    this._run_tree = this.experiment._runner._pythonParser._parse(this.vars._run)\r\n\r\n    // Execute the run code.\r\n    if (this._prepare_tree !== null) {\r\n      // Set the current item.\r\n      this.experiment._runner._events._currentItem = this\r\n\r\n      // Set the prepare run toggle.\r\n      this._prepare_run = true\r\n\r\n      // Record the onset of the current item.\r\n      this.set_item_onset()\r\n\r\n      // Start the parser\r\n      this.experiment._runner._pythonParser._run(this, this._prepare_tree)\r\n    } else {\r\n      // Inherited.\r\n      super.prepare()\r\n    }\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Set the prepare run toggle.\r\n    this._prepare_run = false\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Execute the run code.\r\n    if (this._run_tree !== null) {\r\n      // Start the parser\r\n      this.experiment._runner._pythonParser._run(this, this._run_tree)\r\n    } else {\r\n      // To prevent prepeare script from running twice.\r\n      this.experiment._runner._pythonParser._status = 0\r\n\r\n      // No script, so jump to compelte.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\n\r\n/**\r\n * Class representing an inline item.\r\n * @extends Item\r\n */\r\nexport default class InlineJavaScript extends Item {\r\n  /**\r\n     * Create an inline item which executes inline python code.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n    // Define and set the public properties.\r\n    this.description = 'Executes JavaScript code (ECMA 5.1)'\r\n    this.workspace = experiment._javascriptWorkspace\r\n    // Process the script\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.vars._prepare = ''\r\n    this.vars._run = ''\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Parses a definition string.\r\n    this.reset()\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      var read_run_lines = false\r\n      var read_prepare_lines = false\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        var tokens = this.syntax.split(lines[i])\r\n        if ((tokens !== null) && (tokens.length > 0)) {\r\n          switch (tokens[0]) {\r\n          case 'set':\r\n            this.parse_variable(lines[i])\r\n            break\r\n          case '__end__':\r\n            read_run_lines = false\r\n            read_prepare_lines = false\r\n            break\r\n          case '___prepare__':\r\n            read_prepare_lines = true\r\n            break\r\n          case '___run__':\r\n            read_run_lines = true\r\n            break\r\n          default:\r\n            if (read_run_lines === true) {\r\n              this.vars._run = this.vars._run + lines[i] + '\\n'\r\n            } else if (read_prepare_lines === true) {\r\n              this.vars._prepare = this.vars._prepare + lines[i] + '\\n'\r\n            }\r\n          }\r\n        } else {\r\n          if (read_run_lines === true) {\r\n            this.vars._run = this.vars._run + lines[i] + '\\n'\r\n          } else if (read_prepare_lines === true) {\r\n            this.vars._prepare = this.vars._prepare + lines[i] + '\\n'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    this.workspace._eval(this.vars._prepare)\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    this.set_item_onset()\r\n    this.workspace._eval(this.vars._run)\r\n    this._complete()\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\n\r\n/**\r\n * Class representing a keyboard response item.\r\n * @extends GenericResponse\r\n */\r\nexport default class KeyboardResponse extends GenericResponse {\r\n  /**\r\n     * Create a keyboard response item which waits for a keyboard response.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Collects keyboard responses'\r\n    this._flush = 'yes'\r\n    this._keyboard = new Keyboard(this.experiment)\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.process_feedback = true\r\n    this.vars.allowed_responses = null\r\n    this.vars.correct_response = null\r\n    this.vars.duration = 'keypress'\r\n    this.vars.flush = 'yes'\r\n    this.vars.timeout = 'infinite'\r\n  }\r\n\r\n  /** Implements the prepare phase of the KeyboardResponse. */\r\n  prepare () {\r\n    // Set the internal flush property.\r\n    this._flush = (this.vars.flush) ? this.vars.flush : 'yes'\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the KeyboardResponse. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Flush responses, to make sure that earlier responses are not carried over.\r\n    if (this._flush === 'yes') {\r\n      this._keyboard.flush()\r\n    }\r\n\r\n    this.set_sri()\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    const keyDownHandler = (event) => {\r\n      const keypress = this.experiment._runner._events._processKeyboardEvent(event, 1)\r\n      let allowed_responses = 'all'\r\n      if (this.vars.get('allowed_responses')) {\r\n        allowed_responses = this._keyboard._get_default_from_synonym(\r\n          this.vars.get('allowed_responses').split(';').map(key => key.trim())\r\n        )\r\n      }\r\n\r\n      if (allowed_responses === 'all' || allowed_responses.includes(keypress.resp)) {\r\n        this.response = keypress\r\n      }\r\n    }\r\n\r\n    window.addEventListener('keydown', keyDownHandler)\r\n    yield\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    this.set_sri()\r\n    let proceed = true\r\n    this.response = null\r\n    while (!this.response && proceed) {\r\n      proceed = yield true\r\n    }\r\n    window.removeEventListener('keydown', keyDownHandler)\r\n    if (this.response) this.process_response_keypress(this.response)\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Mouse from '../backends/mouse.js'\r\n\r\n/**\r\n * Class representing a mouse response item.\r\n * @extends GenericResponse\r\n */\r\nexport default class MouseResponse extends GenericResponse {\r\n  /**\r\n     * Create an mouse response item which waits for a mouse response.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Collects mouse responses'\r\n    this.resp_codes = {}\r\n    this._flush = 'yes'\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of the Sketschpad. */\r\n  _complete () {\r\n    // Hide the mouse cursor.\r\n    this._mouse.show_cursor(false)\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.process_feedback = true\r\n    this.resp_codes = {}\r\n    this.resp_codes['0'] = 'timeout'\r\n    this.resp_codes['1'] = 'left_button'\r\n    this.resp_codes['2'] = 'middle_button'\r\n    this.resp_codes['3'] = 'right_button'\r\n    this.resp_codes['4'] = 'scroll_up'\r\n    this.resp_codes['5'] = 'scroll_down'\r\n    this.vars.allowed_responses = null\r\n    this.vars.correct_response = null\r\n    this.vars.duration = 'mouseclick'\r\n    this.vars.flush = 'yes'\r\n    this.vars.show_cursor = 'yes'\r\n    this.vars.timeout = 'infinite'\r\n  }\r\n\r\n  /** Implements the prepare phase of the Sketschpad. */\r\n  prepare () {\r\n    // Set the internal flush property.\r\n    this._flush = (this.vars.flush) ? this.vars.flush : 'yes'\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the Sketschpad. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Show the cursor if defined.\r\n    if (this.vars.show_cursor === 'yes') {\r\n      this._mouse.show_cursor(true)\r\n    }\r\n\r\n    // Flush responses, to make sure that earlier responses are not carried over.\r\n    if (this._flush === 'yes') {\r\n      this._mouse.flush()\r\n    }\r\n\r\n    this.set_sri()\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    const mouseDownHandler = (event) => {\r\n      this.response = this.experiment._runner._events._processMouseEvent(event, 1)\r\n    }\r\n\r\n    const touchHandler = (event) => {\r\n      event.button = 0\r\n      event.clientX = event.changedTouches[0].clientX\r\n      event.clientY = event.changedTouches[0].clientY\r\n      this.response = this.experiment._runner._events._processMouseEvent(event, 1)\r\n    }\r\n\r\n    window.addEventListener('mousedown', mouseDownHandler)\r\n    window.addEventListener('touchstart', touchHandler)\r\n\r\n    yield\r\n    // Show the cursor if defined.\r\n    if (this.vars.show_cursor === 'yes') {\r\n      this._mouse.show_cursor(true)\r\n    }\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    this.set_sri()\r\n    let proceed = true\r\n    this.response = null\r\n    while (!this.response && proceed) {\r\n      proceed = yield true\r\n    }\r\n    window.removeEventListener('mousedown', mouseDownHandler)\r\n    window.removeEventListener('touchstart', touchHandler)\r\n    if (this.response) this.process_response_mouseclick(this.response)\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a logger item.\r\n * @extends Item\r\n */\r\nexport default class Logger extends Item {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} pExperiment - The experiment item to which the item belongs.\r\n     * @param {String} pName - The unique name of the item.\r\n     * @param {String} pScript - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Logs experimental data'\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.logvars = []\r\n    this.vars.auto_log = 'yes'\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    this.reset()\r\n    if (script !== null) {\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          var tokens = this.syntax.split(lines[i])\r\n          if ((tokens[0] === 'log') && (tokens.length > 0)) {\r\n            this.logvars.push(tokens[1])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.logvars.sort()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      this._status = constants.STATUS_FINALIZE\r\n      this.set_item_onset()\r\n      this.experiment._log.write_vars(\r\n        (this.vars.get('auto_log') === 'yes')\r\n          ? this.logvars.concat(this.experiment.vars.inspect()).sort()\r\n          : this.logvars\r\n      )\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\nlet audioCtx = null\r\ntry {\r\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n} catch (e) {\r\n  console.warn('Web Audio API is not supported in this browser')\r\n}\r\n\r\n/** Class representing a sampler. */\r\nexport default class SamplerBackend {\r\n  /**\r\n   * Create a sampler object which controls the sampler device.\r\n   * @param {Object} experiment - The experiment to which the sampler belongs.\r\n   * @param {Object} source - A file pool object.\r\n   * @param {Number} volume - The volume to use when playing the sound.\r\n   * @param {Number} pitch - The pitch to use when playing the sound.\r\n   * @param {Number} pan - The pan to use when playing the sound.\r\n   * @param {String} duration - The duration of the sound.\r\n   * @param {Number} fade - The fade to use when playing the sound.\r\n   * @param {Boolean} block - If true use the sound ad a block wave.\r\n   */\r\n  constructor (experiment, source, volume, pitch, pan, duration, fade, block) {\r\n    // Create and set public properties.\r\n    this.block = (typeof block === 'undefined') ? false : block\r\n    this.duration = (typeof duration === 'undefined') ? 'sound' : duration\r\n    this.experiment = experiment\r\n    this.volume = (typeof volume === 'undefined') ? 1 : volume\r\n    this.fade = (typeof fade === 'undefined') ? 0 : fade\r\n    this.pan = (typeof pan === 'undefined') ? 0 : pan\r\n    this.pitch = (typeof pitch === 'undefined') ? 1 : pitch\r\n    try {\r\n      this.sample = source.data\r\n    } catch (e) {\r\n      console.error('Could not play sound:', source)\r\n      throw e\r\n    }\r\n    this.sample.onended = () => this.experiment._runner._events._audioEnded(this)\r\n\r\n    if (audioCtx) {\r\n      // We can only connect a sample to an audio context once\r\n      if (typeof source.mediaElementSource === 'undefined')\r\n        source.mediaElementSource = audioCtx.createMediaElementSource(this.sample)\r\n      this.source = source.mediaElementSource\r\n    } else {\r\n      this.source = this.sample\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play a sound file.\r\n   * @param {Number} volume - The volume to use when playing the sound.\r\n   * @param {Number} pitch - The pitch to use when playing the sound.\r\n   * @param {Number} pan - The pan to use when playing the sound.\r\n   * @param {String} duration - The duration of the sound.\r\n   * @param {Number} fade - The fade to use when playing the sound.\r\n   * @param {Boolean} block - If true use the sound ad a block wave.\r\n   */\r\n  play (volume, pitch, pan, duration, fade, block) {\r\n    // Check if optional parameters are defined.\r\n    this.block = block || this.block\r\n    this.duration = typeof duration === 'undefined' ? this.duration : duration\r\n    this.volume = typeof volume === 'undefined' ? this.volume : volume\r\n    this.pitch = typeof pitch === 'undefined' ? this.pitch : pitch\r\n    this.pan = typeof pan === 'undefined' ? this.pan : pan\r\n    this.fade = typeof fade === 'undefined' ? this.fade : fade\r\n\r\n    if (audioCtx) {\r\n      if (audioCtx.state === 'suspended') audioCtx.resume()\r\n      this.source.connect(this.applyFilters())\r\n    } else {\r\n      this.source.volume = this.volume\r\n    }\r\n    this.sample.preservesPitch = false\r\n    this.sample.playbackRate = this.pitch\r\n    this.sample.play()\r\n  }\r\n\r\n  /** Set the blocking of the sound (wait period). */\r\n  wait () {\r\n    // Set the blocking of the sound.\r\n    this.experiment._runner._events._run(this, -1, constants.RESPONSE_SOUND, [])\r\n  }\r\n\r\n  applyFilters () {\r\n    const nodes = [audioCtx.destination]\r\n    // Set volume\r\n    const gainNode = new GainNode(audioCtx)\r\n    gainNode.gain.setValueAtTime(this.volume, audioCtx.currentTime)\r\n    if (this.fade) {\r\n      gainNode.gain.setValueAtTime(0, audioCtx.currentTime)\r\n      gainNode.gain.linearRampToValueAtTime(this.volume, audioCtx.currentTime + this.fade / 1000)\r\n    }\r\n    nodes.unshift(gainNode)\r\n    // Set panning\r\n    if (this.pan) {\r\n      let pan\r\n      if (this.pan === 'left')\r\n        pan = -1\r\n      else if (this.pan === 'right')\r\n        pan = 1\r\n      else\r\n        pan = this.pan\r\n      try {\r\n        nodes.unshift(new StereoPannerNode(audioCtx, { pan: pan }))\r\n      } catch (e) {\r\n        console.warn('Unable to apply panning', e)\r\n      }\r\n    }\r\n    // Connect the filters creating a chain\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (nodes[i] !== audioCtx.destination) {\r\n        nodes[i].connect(nodes[i + 1])\r\n      }\r\n    }\r\n    return nodes.shift(0)\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport SamplerBackend from '../backends/sampler.js'\r\n\r\n/**\r\n * Class representing a sampler item.\r\n * @extends GenericResponse\r\n */\r\nexport default class Sampler extends GenericResponse {\r\n  /**\r\n     * Create a sampler  item which plays a sound.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.block = false\r\n    this.description = 'Plays a sound file in .wav or .ogg format'\r\n\r\n    // Definition of private properties.\r\n    this._sample = null\r\n    this._sampler = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.block = false\r\n    this.vars.sample = ''\r\n    this.vars.pan = 0\r\n    this.vars.pitch = 1\r\n    this.vars.fade_in = 0\r\n    this.vars.stop_after = 0\r\n    this.vars.volume = 1\r\n    this.vars.duration = 'sound'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Create the sample\r\n    if (this.vars.sample !== '') {\r\n      // Retrieve the content from the file pool.\r\n      this._sample = this._runner._pool[this.syntax.eval_text(this.vars.sample, this.vars, false)]\r\n      if (typeof (this._sample) === 'undefined')\r\n        this.experiment._runner._debugger.addError(`\"${this.vars.sample}\" does not exist in the file pool`)\r\n      this._sampler = new SamplerBackend(this.experiment, this._sample)\r\n      this._sampler.volume = this.vars.get(\"volume\")\r\n      this._sampler.duration = this.vars.get(\"duration\")\r\n      this._sampler.fade = this.vars.get(\"fade_in\")\r\n      this._sampler.pan = this.vars.get(\"pan\")\r\n      this._sampler.pitch = this.vars.get(\"pitch\")\r\n    } else {\r\n      // Show error message.\r\n      this._runner._debugger.addError('No sample has been specified in sampler: ' + this.vars.sample)\r\n    }\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    this.set_item_onset()\r\n    this.set_sri()\r\n    this._sampler.play()\r\n    this.process_response()\r\n  }\r\n}\r\n","import Sampler from './sampler.js'\r\n\r\n/**\r\n * Class representing a synth item.\r\n * @extends Sampler\r\n */\r\nexport default class Synth extends Sampler {\r\n  /**\r\n     * Create a synth item which create a synthessised sound wave.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} Ssript - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'A basic sound synthesizer'\r\n  }\r\n}\r\n","import Item from '../items/item.js'\r\nimport {\r\n  isNumber\r\n} from 'lodash'\r\n\r\n/**\r\n * Class representing a advanced delay item.\r\n * @extends Item\r\n */\r\nexport default class AdvancedDelay extends Item {\r\n  /**\r\n   * Create an advanced delay plugin item which delays for e specific duration the experiment.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Waits for a specified duration'\r\n    this._duration = -1\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n   * Gaussian distribution function.\r\n   * @param {Number} mean - The mean value.\r\n   * @param {Number} std - The standard deviation value.\r\n   * @return {Number} - result value\r\n   */\r\n  _random_gauss (mean, std) {\r\n    let u = 0\r\n    let v = 0\r\n    while (u === 0) u = Math.random()\r\n    while (v === 0) v = Math.random()\r\n    return Math.max(0, mean + Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v) * std)\r\n  }\r\n\r\n  /**\r\n   * Uniform distribution function.\r\n   * @param {Number} mean - The mean value.\r\n   * @param {Number} stdev - The standard deviation value.\r\n   * @return {Number} - result value\r\n   */\r\n  _random_uniform (mean, jitter) {\r\n    return Math.max(0, Math.floor(mean + Math.random() * jitter - jitter / 2))\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.vars.duration = 1000\r\n    this.vars.jitter = 0\r\n    this.vars.jitter_mode = 'Uniform'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    const duration = this.vars.get('duration')\r\n    const jitter = this.vars.get('jitter')\r\n    const jitter_mode = this.vars.get('jitter_mode')\r\n    if ((!isNumber(duration)) || (duration < 0)) {\r\n      this._runner._debugger.addError('Duration should be a positive numeric value in advanced_delay ' + this.name)\r\n    }\r\n    if (jitter_mode === 'Uniform') {\r\n      this._duration = this._random_uniform(duration, jitter)\r\n    } else if (jitter_mode === 'Std. Dev.') {\r\n      this._duration = this._random_gauss(duration, jitter)\r\n    } else {\r\n      this._runner._debugger.addError('Unknown jitter mode in advanced_delay ' + this.name)\r\n    }\r\n    if (this._duration < 0) {\r\n      this._duration = 0\r\n    }\r\n    this._duration = Number(this._duration)\r\n    this.experiment.vars.set('delay_' + this.name, this._duration)\r\n    this._runner._debugger.addMessage('delay for ' + this._duration + ' ms.')\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    this.set_item_onset(this.time())\r\n    if (this._duration > 0) {\r\n      this.sleep(this._duration)\r\n    } else {\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from '../items/item.js'\n\n/**\n * Base class for implementing HTML forms. These forms briefly hide the OSWeb\n * canvas and replace it by an HTML div. When the form is finished, OSWeb is\n * re-activated.\n * @extends Item\n */\nexport default class FormHTML extends Item {\n\n  constructor (experiment, name, script) {\n    super(experiment, name, script)\n    this._widgets = []  // avoid crashes when parsing widgets command\n    this.from_string(script)\n  }\n  \n  reset() {\n    super.reset()\n    this.vars.margins = '50;50;50;50'\n  }\n  \n  /**\n   * Generates an array of HTML elements that are appended to the form. Should\n   * be overridden in the actual form classes.\n   * @return {!Array<Object>} - an array of HTML elements\n   **/\n  formElements() {\n      return []\n  }\n  \n  /**\n   * Gives HTML code to be used for the form. Should be overridden in the\n   * actual form classes.\n   * @return {string}\n   **/\n  formHTML() {\n    return null\n  }\n  \n  /**\n   * Hides the form container and re-enables OSWeb. Also re-enablees the event\n   * listeners.\n   **/\n  resumeOSWeb () {\n    this._formContainer.remove()\n    this._osweb.style.display = 'flex'\n    window.addEventListener('keydown', runner._events._keyDownHandler)\n    window.addEventListener('keyup', runner._events._keyUpHandler)\n    this._complete()\n  }\n  \n  /**\n   * Executes script elements that are embedded in the form\n   **/\n  _runScripts () {\n    for (const script of this._customForm.getElementsByTagName('script')) {\n      this.experiment._javascriptWorkspace._eval(script.textContent)\n    }\n  }\n  \n  /**\n   * Emulates the 'gray' which is applied to buttons.\n   **/\n  applyTheme (element, setBackground=false) {\n    if (this.vars.get('_theme') !== 'gray')\n      return\n    if (setBackground)\n      element.style.backgroundColor = '#888a85'\n    element.style.borderTop = 'solid 1px #babdb6'\n    element.style.borderLeft = 'solid 1px #555753'\n    element.style.borderRight = 'solid 1px #555753'\n    element.style.borderBottom = 'solid 1px #555753'\n  }\n  \n  /**\n   * Returns an HTML element. If inherit is specified\n   * @param {string} type - an HTML element type, such as 'div'\n   * @param {string} html - the inner HTML content\n   * @param {number} height - proportion of full height\n   * @param {number} width - proportion of full height\n   * @param {boolean} inherit - Indicates whether font style should be\n   *     inherited from the container element.\n   * @return {Object} - an HTML element\n   **/\n  element (type, html, height, width=1, inherit=true) {\n    const element = document.createElement(type)\n    // Replace all newlines by <br> tags\n    if ((typeof html !== \"undefined\") && (html !== null)) element.innerHTML = html.replace(/\\n/g, '<br>')\n    if (typeof height !== \"undefined\") element.style.height = this._paddedHeight * height - 40 + 'px'\n    if (typeof width !== \"undefined\")element.style.width = this._paddedWidth * width - 40 + 'px'\n    element.style.padding = '10px'\n    element.style.margin = '10px'\n    if (inherit) {\n      element.style.fontFamily = 'inherit'\n      element.style.fontSize = 'inherit'\n      element.style.fontWeight = 'inherit'\n      element.style.textDecoration = 'inherit'\n      element.style.color = 'inherit'\n      element.style.backgroundColor = 'inherit'\n    }\n    return element\n  }\n  \n  /**\n   * Builds a container div with a checkbox/ radio button and a label next to\n   * it. See element() for explanation of parameters.\n   * @param {string} boxtype - radio/ checkbox\n   * @param {string} label - a text label\n   * @param {number} height\n   * @param {number} width\n   * @param {boolean} inherit\n   * @return {!Array<Object>}\n   **/\n  checkbox (boxType, label, height, width=1, inherit=true) {\n    const box = this.element('input', null, null, null)\n    box.type = boxType\n    box.value = label\n    const labelElement = this.element('label', label, null, null)\n    const container = this.element('div', null, height, width, inherit)\n    container.style.textAlign = 'left'\n    container.append(box)\n    container.append(labelElement)\n    return [container, box]\n  }\n  \n  /**\n   * Maps the font family onto names that browsers understand.\n   * @returns {string}\n   **/\n  get _fontFamily () {\n    const fontFamily = this.vars.get('font_family')\n    if (fontFamily === 'sans')\n      return 'sans-serif'\n    if (fontFamily === 'mono')\n      return 'monospace'\n    return fontFamily\n  }\n  \n  /**\n   * Gets the padding for all four sides based on the margins variable.\n   * @returns {!Array<number>}\n   **/\n  get _padding () {\n    if (typeof this._cached_padding === \"undefined\")\n      this._cached_padding = String(this.vars.get('margins')).split(';').map(Number)\n    return this._cached_padding\n  }\n  \n  /**\n   * Gets the width that takes into account the padding\n   * @returns {number}\n   **/\n  get _paddedWidth () {\n    if (typeof this._width === \"undefined\") {\n      const [top, right, bottom, left] = this._padding\n      this._width = this.experiment._runner._renderer.view.clientWidth - right - left\n    }\n    return this._width\n  }\n  \n  /**\n   * Gets the height that takes into account the padding\n   * @returns {number}\n   **/\n  get _paddedHeight () {\n    if (typeof this._height === \"undefined\") {\n      const [top, right, bottom, left] = this._padding\n      this._height = this.experiment._runner._renderer.view.clientHeight - top - bottom\n    }\n    return this._height\n  }\n  \n  run () {\n    // The main container that contains the form elements\n    this._customForm = document.createElement('div')\n    this._customForm.style.color = this.vars.get('foreground')\n    this._customForm.style.backgroundColor = this.vars.get('background')\n    this._customForm.style.fontSize = this.vars.get('font_size') + 'px'\n    this._customForm.style.fontFamily = this._fontFamily\n    if (this.vars.get('font_bold')=== 'yes')\n      this._customForm.style.fontWeight = 'bold'\n    if (this.vars.get('font_italic')=== 'yes')\n      this._customForm.style.fontStyle = 'italic'\n    if (this.vars.get('font_underline') === 'yes')\n      this._customForm.style.textDecoration = 'underline'\n    // Convert margins from '50;50;50;50' to '50px 50px 50px 50px'\n    this._customForm.style.padding = this._padding.join('px ') + 'px'\n    this._customForm.style.width = this._paddedWidth + 'px'\n    this._customForm.style.height = this._paddedHeight + 'px'\n    this._customForm.style.textAlign = 'center'\n    for (const element of this.formElements())\n      this._customForm.append(element)\n    const html = this.formHTML()\n    if (html !== null)\n      this._customForm.innerHTML = html\n    // A container that centers the form\n    this._formContainer = document.createElement('div')\n    this._formContainer.style.justifyContent = 'center'\n    this._formContainer.style.alignItems = 'center'\n    this._formContainer.style.display = 'flex'\n    this._formContainer.style.height = '100%'\n    this._formContainer.append(this._customForm)\n    this._osweb = document.getElementsByClassName('justify-content-center')[0]\n    document.body.append(this._formContainer)\n    this._osweb.style.display = 'none';\n    window.removeEventListener('keydown', runner._events._keyDownHandler)\n    window.removeEventListener('keyup', runner._events._keyUpHandler)\n    this._runScripts()\n  }\n}\n","import FormHTML from './form_html.js'\n\n/**\n * Class representing a form consent item.\n * @extends FormHTML\n */\nexport default class FormConsent extends FormHTML {\n\n  onDecline () {\n    alertify.error(this.vars.get('decline_message'))\n  }\n  \n  onAccept () {\n    if (this._checkbox.checked) {\n      this.resumeOSWeb()\n      return\n    }\n    this.onDecline()\n  }\n\n  formElements () {\n    const title = this.element('h1', this.vars.get('form_title'), 1 / 7)\n    const text = this.element('p', this.vars.get('form_text'), 4 / 7)\n    text.style.textAlign = 'left'\n    const [checkboxContainer, checkbox] = this.checkbox(\n      'checkbox', this.vars.get('checkbox_text'), 1 / 7)\n    this._checkbox = checkbox\n    const buttonContainer = this.element('div', null, 1 / 7)\n    const acceptButton = this.element('input', null, null, 1 / 3)\n    acceptButton.value = this.vars.get('accept_text')\n    acceptButton.type = 'button'\n    acceptButton.onclick = this.onAccept.bind(this)\n    const declineButton = this.element('input', null, null, 1 / 3)\n    declineButton.value = this.vars.get('decline_text')\n    declineButton.type = 'button'\n    declineButton.onclick = this.onDecline.bind(this)\n    buttonContainer.append(acceptButton)\n    buttonContainer.append(declineButton)\n    this.applyTheme(acceptButton, true)\n    this.applyTheme(declineButton, true)\n    return [title, text, checkboxContainer, buttonContainer]\n  }\n}\n","import FormHTML from './form_html.js'\n\n/**\n * Class representing custom HTML code\n * @extends FormHTML\n */\nexport default class InlineHTML extends FormHTML {\n\n  reset() {\n    super.reset()\n    this.vars.html = ''\n  }\n\n  /**\n   * @return {string} - the HTML content\n   **/\n  formHTML() {\n    return this.vars.get(\"html\")\n  }\n  \n  /**\n   * Returns an array of all form input elements, including select and textarea\n   * elements.\n   **/\n  _inputElements () {\n   return Array.from(document.getElementsByTagName('input')).concat(\n    Array.from(document.getElementsByTagName('select'))).concat(\n    Array.from(document.getElementsByTagName('textarea')))\n  }\n  \n  /**\n   * Sets experimental variables based on the name properties of input elements\n   * and then resumes OSWeb.\n   **/\n  _submitForm() {\n    for (const input of this._inputElements()) {\n      if (!input.required)\n        continue\n      if ((['checkbox', 'radio'].includes(input.type) && (!this._groupChecked(input))) ||\n          (!['checkbox', 'radio'].includes(input.type) && (input.value === ''))) {\n        alert('One or more required input fields are empty or have not been checked')\n        return\n      }\n    }\n    for (const input of this._inputElements()) {\n      if (['checkbox', 'radio'].includes(input.type)) {\n        // If a checkbox or radio button is checked, set the value to the `id`\n        // attribute if an `id` attribute has been defined. This is especially\n        // important for radio-group buttons, which all share the same `name`\n        // attribute. If no `id` has been defined, fall back to the `value`\n        // attribute, which is 'on' for checked elements.\n        if (input.checked) {\n          this.experiment.vars.set(input.name, (input.id !== '' ? input.id : input.value))\n        }\n      } else {\n        this.experiment.vars.set(input.name, input.value)\n      }\n    }\n    this.resumeOSWeb()\n  }\n  \n  /**\n   * Checks where any element from a group of input elements is checked. This\n   * allows for the required attribute to serve as expected for radio-button\n   * groups.\n   **/\n  _groupChecked (input) {\n    if (input.name === \"\")\n      return input.checked\n    for (input of document.getElementsByName(input.name)) {\n      if (input.checked)\n        return true\n    }\n    return false\n  }\n  \n  run () {\n    super.run()\n    // Disable the submit action of form elements, in case the user has added\n    // (unnecessary) form tags\n    for (const form of document.getElementsByTagName('form'))\n      form.onsubmit = (() => false)\n    // Bind input elements of type submit to the custom submit action\n    for (const input of document.getElementsByTagName('input')) {\n      if (input.type === 'submit')\n        input.onclick = this._submitForm.bind(this)\n    }\n  }\n\n}\n","import FormHTML from './form_html.js'\n\n/**\n * Class representing a form-mulitple-choice item.\n * @extends FormHTML\n */\nexport default class FormMultipleChoice extends FormHTML {\n\n  resumeOSWeb () {\n    const values = []\n    for (const box of this._boxes) {\n        if (box.checked)\n            values.push(box.value)\n    }\n    this.experiment.vars.set(\n        this.vars.form_var,\n        (values.length > 0) ? values.join(';') : 'no'\n    )\n    super.resumeOSWeb()\n  }\n  \n  _boxClicked () {\n    if (!this._hasOkButton)\n      setTimeout(this.resumeOSWeb.bind(this), 100)\n  }\n\n  formElements () {\n    this._hasOkButton = (this.vars.get('advance_immediately') === 'no' || boxType === 'checkbox')\n    const elements = []\n    this._boxes = []\n    // Create an array of non-empty options\n    const options = String(this.vars.get('options')).split('\\n').filter(\n        option => option .trim().length > 0)\n    const boxType = (this.vars.get('allow_multiple') === 'no') ? 'radio' : 'checkbox'\n    const elementHeight = 1 / (options.length + (this._hasOkButton ? 3 : 2))\n    const title = this.element('h1', this.vars.get('form_title'), elementHeight, 1)\n    elements.push(title)\n    const question = this.element('p', this.vars.get('question'), elementHeight, 1)\n    elements.push(question)\n    for (const option of options) {\n      const [container, box] = this.checkbox(boxType, option, elementHeight)\n      box.name = 'options'\n      box.onclick = this._boxClicked.bind(this)\n      this._boxes.push(box)\n      elements.push(container)\n    }\n    if (this._hasOkButton) {\n      const okButton = this.element('input', null, elementHeight, 1 / 3)\n      okButton.style.width = '100%'\n      this.applyTheme(okButton, true)\n      okButton.type = 'button'\n      okButton.value = this.vars.get('button_text')\n      okButton.onclick = this.resumeOSWeb.bind(this)\n      elements.push(okButton)\n    }\n    return elements\n  }\n}\n","import FormHTML from './form_html.js'\n\n/**\n * Class representing a form text display item.\n * @extends FormHTML\n */\nexport default class FormTextDisplay extends FormHTML {\n\n  formElements () {\n    const title = this.element('h1', this.vars.get('form_title'), 1 / 6)\n    const text = this.element('p', this.vars.get('form_text'), 4 / 6)\n    text.style.textAlign = 'left'\n    const okButton = this.element('input', null, 1 / 6, 1 / 3)\n    okButton.type = 'button'\n    okButton.value = this.vars.get('ok_text')\n    okButton.onclick = this.resumeOSWeb.bind(this)\n    this.applyTheme(okButton, true)\n    return [title, text, okButton]\n  }\n}\n","import FormHTML from './form_html.js'\n\n/**\n * Class representing a form text input item.\n * @extends FormHTML\n */\nexport default class FormTextInput extends FormHTML {\n\n  /**\n   * Is called when a key is pressed in the textarea, and accepts the form\n   * input when return is pressed by setting the response variable to the\n   * value of the textarea.\n   **/\n  checkReturnPress (event) {\n    if (event.keyCode !== 13)\n      return\n    this.experiment.vars.set(this.vars.form_var, this._textArea.value)\n    this.resumeOSWeb()\n  }\n\n  formElements () {\n    const title = this.element('h1', this.vars.get('form_title'), 1 / 8)\n    const question = this.element('p', this.vars.get('form_question'), 1 / 8)\n    question.style.textAlign = 'left'\n    this._textArea = this.element('textarea', null, 6 / 8)\n    this.applyTheme(this._textArea, false)\n    return [title, question, this._textArea]\n  }\n  \n  _activateTextArea () {\n    this._textArea.focus()\n    this._textArea.onkeypress = this.checkReturnPress.bind(this)\n  }\n  \n  run () {\n    super.run()\n    // The textarea is activate after a very short timeout. This avoid previous\n    // keypress from being entered as text immediately.\n    setTimeout(this._activateTextArea.bind(this), 10)\n  }\n}\n","import { Texture, Sprite } from 'pixi.js'\nimport {\n  constants\n} from '../system/constants.js'\n\n/** Class representing a video. */\nexport default class Video {\n  /**\n   * Create a video object which controls the video device.\n   * @param {Object} experiment - The experiment to which the video belongs.\n   * @param {String} src - The video source name.\n   */\n  constructor (experiment, source) {\n    // Set class parameter properties.\n    this._experiment = experiment\n\n    // Set the class public properties.\n    this.audio = true\n    this.duration = 'keypress'\n    this.full_screen = false\n\n    // Set the class pivate properties.\n    this._playing = false\n    this._script = null\n\n    // Create the video instance\n    if (source !== null) {\n      // Set the video object.\n      this._video = source.data\n\n      // create a video texture from the video.\n      this._texture = Texture.from(source.data)\n\n      // create a new Sprite using the video texture (yes it's that easy)\n      this._videoSprite = new Sprite(this._texture)\n      this._video.pause()\n\n      // Set the event anchors.\n      this._video.onended = this._experiment._runner._events._videoEnded.bind(this)\n      this._video.onplay = this._experiment._runner._events._videoPlay.bind(this)\n    }\n  }\n\n  /** Update the video rendering. */\n  _update () {\n    if (this._playing === true) {\n      // Update the renderer.\n      this._experiment._runner._renderer.render(this._videoSprite)\n\n      // execute script.\n      if ((this._script !== null) && (this._event_handler_always === true)) {\n        // Start the parser\n        this._experiment._runner._pythonParser._run(null, this._script)\n      }\n    }\n  }\n\n  /** Play the actual video. */\n  play () {\n    // Enable the video playing.\n    this._video.play()\n\n    // Set the volume\n    this._video.volume = (this.audio === true) ? 1 : 0\n\n    // Check if the video must be scaled.\n    if (this.full_screen === true) {\n      this._videoSprite.width = this._experiment._runner._renderer.width\n      this._videoSprite.height = this._experiment._runner._renderer.height\n    }\n\n    // Render the first frame.\n    this._experiment._runner._renderer.render(this._videoSprite)\n\n    // Set the play toggle.\n    this._playing = true\n  }\n\n  /** Stop playing the video. */\n  stop () {\n    // Pause the actual sound.\n    this._video.pause()\n    this._playing = false\n  }\n\n  /** Set the blocking of the sound. */\n  wait () {\n    this._experiment._runner._events._run(-1, constants.RESPONSE_VIDEO, [])\n  }\n}\n","import Item from '../items/item.js'\nimport Video from '../backends/video.js'\n\n/**\n * Class representing a video player item.\n * @extends Item\n */\nexport default class MediaPlayer extends Item {\n  /**\n     * Create a video player plugin item which plays videos.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script)\n\n    // Define and set the public properties.\n    this.description = 'A video player'\n\n    // Define and set the private properties.\n    this._script_executed = false\n\n    // Process the script.\n    this.from_string(script)\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    if (this._script_executed === false) {\n      // Stop the video playing.\n      this._video_player.stop()\n\n      // execute script.\n      if ((this._video_player._script !== null) && (this.vars.get('event_handler_trigger') === 'on keypress')) {\n        // Set the execute toggle.\n        this._script_executed = true\n\n        // Execute the script code.\n        this._runner._pythonParser._run(this, this._video_player._script)\n      } else {\n        // Inherited.\n        super._complete()\n      }\n    } else {\n      // Inherited.\n      super._complete()\n    }\n  }\n\n  /** Implements the update phase of an item. */\n  _update (response) {\n    // Update the video canvas.\n    this._video_player._update()\n  }\n\n  /** Implements the prepare phase of an item. */\n  prepare () {\n    // Opens the video file for playback.\n    this._video = this.experiment.pool[this.vars.get('video_src')]\n    this._video_player = new Video(this.experiment, this._video)\n\n    // Set the inline code options.\n    if (this.vars.event_handler !== '') {\n      this._video_player._script = this._runner._pythonParser._parse(this.vars.event_handler)\n    }\n    this._video_player._event_handler_always = (this.vars.event_handler_trigger === 'after every frame')\n\n    // Set the audio option.\n    this._video_player.audio = (this.vars.get('playaudio') === 'yes')\n\n    // Set the full screen option (if enabled).\n    this._video_player.full_screen = (this.vars.get('resizeVideo') === 'yes')\n\n    // Adjust the duration parameter from sound to video if defined.\n    if (this.vars.duration === 'sound') {\n      this.vars.duration = 'video'\n    }\n    this._video_player.duration = this.vars.duration\n\n    // Inherited.\n    super.prepare()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Set the onset time.\n    this.set_item_onset()\n    this.set_sri()\n\n    // Start the video player.\n    this._video_player.play()\n\n    // Start response processing.\n    this.process_response()\n  }\n}\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a notepad item.\r\n * @extends Item\r\n */\r\nexport default class Notepad extends Item {\r\n  /**\r\n     * Create a notepad plugin item which only shows some text in the console.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'A simple notepad to document your experiment. This plug-in does nothing.'\r\n\r\n    // Read the item definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Complete the current cycle.\r\n    this._complete()\r\n  }\r\n}\r\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a repeat cycle item.\r\n * @extends Item\r\n */\r\nexport default class RepeatCycle extends Item {\r\n  /**\r\n     * Create a repeat cycle item which repeat a cycle within a loop.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Optionally repeat a cycle from a loop'\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n    // Prepare the condtion for which the repeat_cycle must fire.\r\n    const condition = this.syntax.compile_cond(this.vars.get('condition', undefined, false))\r\n    // Run item only one time.\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      if (this.experiment._runner._pythonWorkspace._eval(condition) === true) {\r\n        this.experiment.vars.repeat_cycle = 1\r\n      }\r\n\r\n      // Complete the current cycle.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a reset feedback item.\r\n * @extends Item\r\n */\r\nexport default class ResetFeedback extends Item {\r\n  /**\r\n     * Create a reset feedback  item which resets the feedback values.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Resets the feedback variables, such as \"avg_rt\" and \"acc\"'\r\n\r\n    // Read the item definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Run item only one time.\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      // Run the item.\r\n      this.experiment.reset_feedback()\r\n\r\n      // Complete the current cycle.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import MouseResponse from '../items/mouse_response.js'\n\n/**\n * Class representing a reset feedback item.\n * @extends Item\n */\nexport default class TouchResponse extends MouseResponse {\n  /**\n     * Create a reset feedback  item which resets the feedback values.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script)\n\n    // Define and set the public properties.\n    this.description = 'A grid-based response item, convenient for touch screens'\n  }\n\n  /** Resets all item variables to their default value. */\n  reset () {\n    super.reset()\n    this.vars.set('allowed_responses', null)\n    this.vars._ncol = 2\n    this.vars._nrow = 1\n  }\n\n  /** Implements the prepare phase of an item. */\n  prepare () {\n    // Temp hack\n    this.experiment.vars.correct = -1\n    // Inherited.\n    super.prepare()\n  }\n\n  /**\n     * Process a mouse click response.\n     * @param {Object} pRetval - The mouse response to process.\n     */\n  process_response_mouseclick (retval) {\n    this.experiment._start_response_interval = this.sri\n    this.experiment._end_response_interval = retval.rtTime\n    this.set_mouse_coordinates(retval.event.clientX, retval.event.clientY)\n    // Calulate the row, column and cell.\n    this.col = Math.floor(\n      (this.experiment.vars.cursor_x + this.experiment.vars.width / 2) /\n        (this.experiment.vars.width / this.vars._ncol)\n    )\n    this.row = Math.floor(\n      (this.experiment.vars.cursor_y + this.experiment.vars.height / 2) /\n        (this.experiment.vars.height / this.vars._nrow)\n    )\n    this.cell = this.row * this.vars._ncol + this.col + 1\n    this.experiment.vars.response = this.cell\n    this.synonyms = [this.experiment.vars.get('response').toString()]\n    this.response_bookkeeping()\n  }\n}\n","/** Class representing a general visual element. */\r\nexport default class BaseElement {\r\n  /**\r\n   * Create a log object which stores all the response data.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   * @param {Object} defaults - The default property values of the visual element.\r\n   */\r\n  constructor (sketchpad, script, defaults) {\r\n    // Set class parameter properties.\r\n    this.canvas = sketchpad.canvas\r\n    this.defaults = defaults\r\n    this.defaults.show_if = 'always'\r\n    this.defaults.z_index = 0\r\n    this.experiment = sketchpad.experiment\r\n    this.fix_coordinates = (sketchpad.vars.uniform_coordinates === 'yes')\r\n    this.name = sketchpad.name\r\n    this.only_keywords = false\r\n    this.pool = sketchpad.experiment.pool\r\n    this.properties = {}\r\n    this.sketchpad = sketchpad\r\n    this.syntax = sketchpad.syntax\r\n    this.vars = sketchpad.vars\r\n\r\n    // Set the private properties.\r\n    this._properties = null\r\n\r\n    // Read the definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n   * Parses the element from a definition string.\r\n   *\r\n   * @param {String} script The definition script line to be parsed.\r\n   * @memberof BaseElement\r\n   */\r\n  from_string (script) {\r\n    this.properties = this.sketchpad.syntax.parse_cmd(script)[2]\r\n  }\r\n\r\n  /**\r\n   * Determines the drawing order of the elements.\r\n   *\r\n   * @returns {Number}\r\n   * @memberof BaseElement\r\n   */\r\n  z_index () {\r\n    return this.properties.z_index\r\n  }\r\n\r\n  /**\r\n   * Calculate the dynamic elements within properties.\r\n   *\r\n   * @memberof BaseElement\r\n   */\r\n  eval_properties () {\r\n    // Evaluates all properties and return them.\r\n    const xc = this.experiment.vars.width / 2\r\n    const yc = this.experiment.vars.height / 2\r\n\r\n    this._properties = Object.entries(this.properties).reduce((result, [prop, val]) => {\r\n      let value = this.syntax.eval_text(val, this.vars, false)\r\n\r\n      if (['x', 'x1', 'x2'].includes(prop)) {\r\n        value = Math.round(Number(value) + xc)\r\n      }\r\n\r\n      if (['y', 'y1', 'y2'].includes(prop)) {\r\n        value = Math.round(Number(value) + yc)\r\n      }\r\n\r\n      result[prop] = value\r\n      return result\r\n    }, {})\r\n  }\r\n\r\n  /**\r\n   * Determines whether the element should be shown, based on the show-if statement.\r\n   *\r\n   * @returns {Boolean} Returns true if the element must be shown.\r\n   * @memberof BaseElement\r\n   */\r\n  is_shown () {\r\n    // Set the self of the current workspace.\r\n    this.experiment.python_workspace.self = this.sketchpad\r\n\r\n    // Determines whether the element should be shown, based on the show-if statement.\r\n    return this.experiment.python_workspace._eval(this.experiment.syntax.compile_cond(this.properties.show_if))\r\n  }\r\n\r\n  /**\r\n   * Draws the element\r\n   *\r\n   * @memberof BaseElement\r\n   */\r\n  draw () {\r\n    // Calculate the dynamic properties.\r\n    this.eval_properties()\r\n  }\r\n}\r\n","// Control elements\r\nimport Loop from '../items/loop.js'\r\nimport Sequence from '../items/sequence.js'\r\nimport Coroutines from '../items/coroutines.js'\r\n// Slides\r\nimport Sketchpad from '../items/sketchpad.js'\r\nimport Feedback from '../items/feedback.js'\r\n// Scripts\r\nimport InlineScript from '../items/inline_script.js'\r\nimport InlineJavaScript from '../items/inline_javascript.js'\r\n// Responses\r\nimport KeyboardResponse from '../items/keyboard_response.js'\r\nimport MouseResponse from '../items/mouse_response'\r\nimport Logger from '../items/logger.js'\r\n// Audio\r\nimport Sampler from '../items/sampler.js'\r\nimport Synth from '../items/synth.js'\r\n// Plugins\r\nimport AdvancedDelay from '../items/advanced_delay.js'\r\nimport FormConsent from '../items/form_consent.js'\r\nimport InlineHTML from '../items/inline_html.js'\r\nimport FormMultipleChoice from '../items/form_multiple_choice.js'\r\nimport FormTextDisplay from '../items/form_text_display.js'\r\nimport FormTextInput from '../items/form_text_input.js'\r\nimport MediaPlayer from '../items/media_player.js'\r\nimport Notepad from '../items/notepad.js'\r\nimport RepeatCycle from '../items/repeat_cycle.js'\r\nimport ResetFeedback from '../items/reset_feedback.js'\r\nimport TouchResponse from '../items/touch_response.js'\r\n// Elements\r\nimport Arrow from '../elements/arrow.js'\r\nimport Circle from '../elements/circle.js'\r\nimport Ellipse from '../elements/ellipse.js'\r\nimport Fixdot from '../elements/fixdot.js'\r\nimport Gabor from '../elements/gabor.js'\r\nimport ImageElement from '../elements/image.js' // Image is a reserved JS class\r\nimport Line from '../elements/line.js'\r\nimport Noise from '../elements/noise.js'\r\nimport Rect from '../elements/rect.js'\r\nimport TextLine from '../elements/textline.js'\r\n\r\n\r\n/**\r\n * this variable maps the string representation of each element to the corresponding\r\n * class names.\r\n * @type {Object}\r\n */\r\nexport const itemClasses = {\r\n  // Items\r\n  loop: Loop,\r\n  sequence: Sequence,\r\n  sketchpad: Sketchpad,\r\n  feedback: Feedback,\r\n  inline_script: InlineScript,\r\n  inline_javascript: InlineJavaScript,\r\n  inline_html: InlineHTML,\r\n  keyboard_response: KeyboardResponse,\r\n  mouse_response: MouseResponse,\r\n  logger: Logger,\r\n  sampler: Sampler,\r\n  synth: Synth,\r\n  coroutines: Coroutines,\r\n  advanced_delay: AdvancedDelay,\r\n  form_consent: FormConsent,\r\n  form_multiple_choice: FormMultipleChoice,\r\n  form_text_display: FormTextDisplay,\r\n  form_text_input: FormTextInput,\r\n  media_player_mpy: MediaPlayer,\r\n  notepad: Notepad,\r\n  repeat_cycle: RepeatCycle,\r\n  reset_feedback: ResetFeedback,\r\n  touch_response: TouchResponse,\r\n  // Elements\r\n  arrow: Arrow,\r\n  circle: Circle,\r\n  ellipse: Ellipse,\r\n  fixdot: Fixdot,\r\n  gabor: Gabor,\r\n  image: ImageElement,\r\n  line: Line,\r\n  noise: Noise,\r\n  rect: Rect,\r\n  textline: TextLine,\r\n}\r\n\r\nexport const constants = {\r\n  // Type of used collection mode.\r\n  PRESSES_ONLY: 1,\r\n  RELEASES_ONLY: 2,\r\n  PRESSES_AND_RELEASES: 3,\r\n\r\n  // Type of response used.\r\n  RESPONSE_NONE: 0,\r\n  RESPONSE_DURATION: 1,\r\n  RESPONSE_KEYBOARD: 2,\r\n  RESPONSE_MOUSE: 3,\r\n  RESPONSE_SOUND: 4,\r\n  RESPONSE_AUTOKEYBOARD: 5,\r\n  RESPONSE_AUTOMOUSE: 6,\r\n\r\n  // Running status of an item.\r\n  STATUS_NONE: 0,\r\n  STATUS_BUILD: 1,\r\n  STATUS_INITIALIZE: 2,\r\n  STATUS_EXECUTE: 3,\r\n  STATUS_FINALIZE: 4,\r\n\r\n  // Definition of the event loop status contstants.\r\n  TIMER_NONE: 0,\r\n  TIMER_WAIT: 1,\r\n  TIMER_EXIT: 2,\r\n  TIMER_PAUSE: 3,\r\n  TIMER_RESUME: 4,\r\n  TIMER_DONE: 5,\r\n  TIMER_BREAK: 6,\r\n  TIMER_ERROR: 7,\r\n  TIMER_FORM: 8\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Arrow extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.arrow_body_length = 0.8\r\n    defaults.arrow_body_width = 0.5\r\n    defaults.arrow_head_width = 30\r\n    defaults.fill = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x1 = null\r\n    defaults.y1 = null\r\n    defaults.x2 = null\r\n    defaults.y2 = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.background_color = this._properties.color\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the arrow element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.arrow(this._properties.x1, this._properties.y1,\r\n      this._properties.x2, this._properties.y2, this._properties.arrow_body_width,\r\n      this._properties.arrow_body_length, this._properties.arrow_head_width,\r\n      styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Circle extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.fill = 0\r\n    defaults.penwidth = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.r = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the circle element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.circle(this._properties.x, this._properties.y,\r\n      this._properties.r, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Ellipse extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    const defaults = {\r\n      fill: 1,\r\n      color: sketchpad.vars.get('foreground'),\r\n      penwidth: 1,\r\n      x: null,\r\n      y: null,\r\n      w: null,\r\n      h: null\r\n    }\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.background_color = this._properties.color\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the ellipse element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.ellipse(Number(this._properties.x),\r\n      Number(this._properties.y), Number(this._properties.w),\r\n      Number(this._properties.h), styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Fixdot extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.style = 'default'\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles(this.sketchpad)\r\n    styles.color = this._properties.color\r\n    // Draw the fixdot element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.fixdot(this._properties.x, this._properties.y,\r\n      this._properties.style, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Gabor extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.bgmode = 'avg'\r\n    defaults.color1 = 'white'\r\n    defaults.color2 = 'black'\r\n    defaults.env = 'gaussian'\r\n    defaults.freq = 1\r\n    defaults.orient = 0\r\n    defaults.phase = 0\r\n    defaults.size = 96\r\n    defaults.stdev = 12\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the gabor element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.gabor(this._properties.x, this._properties.y,\r\n      this._properties.orient, this._properties.freq, this._properties.env,\r\n      this._properties.size, this._properties.stdev, this._properties.phase,\r\n      this._properties.color1, this._properties.color2, this._properties.bgmode)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an image element.\r\n * @extends BaseElement\r\n */\r\nexport default class ImageElement extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    const defaults = {}\r\n    defaults.center = 1\r\n    defaults.file = null\r\n    defaults.scale = 1\r\n    defaults.rotation = 0\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n\r\n    // Set the class private properties.\r\n    this._file = null\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the image element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.image(this._properties.file, this._properties.center,\r\n      this._properties.x, this._properties.y, this._properties.scale,\r\n      this._properties.rotation)\r\n  }\r\n}\r\n","/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nimport BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\nexport default class Line extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x1 = null\r\n    defaults.y1 = null\r\n    defaults.x2 = null\r\n    defaults.y2 = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.color = this._properties.color\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the line element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.line(this._properties.x1, this._properties.y1,\r\n      this._properties.x2, this._properties.y2, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Noise extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color1 = 'white'\r\n    defaults.color2 = 'black'\r\n    defaults.env = 'gaussian'\r\n    defaults.size = 96\r\n    defaults.stdev = 12\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.bgmode = 'avg'\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the noise element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.noise(this._properties.x, this._properties.y,\r\n      this._properties.env, this._properties.size, this._properties.stdev,\r\n      this._properties.color1, this._properties.color2, this._properties.bgmode)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Rect extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.fill = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.w = null\r\n    defaults.h = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.fill = this._properties.fill\r\n    styles.color = this._properties.color\r\n    styles.background_color = this._properties.color\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the rectangle element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.rect(this._properties.x, this._properties.y,\r\n      this._properties.w, this._properties.h, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing a textline element.\r\n * @extends BaseElement\r\n */\r\nexport default class Textline extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.center = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.font_family = sketchpad.vars.get('font_family')\r\n    defaults.font_size = sketchpad.vars.get('font_size')\r\n    defaults.font_bold = sketchpad.vars.get('font_bold')\r\n    defaults.font_italic = sketchpad.vars.get('font_italic')\r\n    defaults.html = 'yes'\r\n    defaults.text = null\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n    const text = this._properties.text\r\n    // Create a styles object containing style information\r\n    const styles = new Styles()\r\n    styles.color = this._properties.color\r\n    styles.font_family = this._properties.font_family\r\n    styles.font_size = Number(this._properties.font_size)\r\n    styles.font_italic = (this._properties.font_italic === 'yes')\r\n    styles.font_bold = (this._properties.font_bold === 'yes')\r\n    styles.font_underline = (this._properties.font_underline === 'yes')\r\n\r\n    this.sketchpad.canvas.text(text, this._properties.center,\r\n      this._properties.x, this._properties.y, this._properties.html,\r\n      styles)\r\n  }\r\n}\r\n","import {\n  constants\n} from './constants.js'\n\nimport isFunction from 'lodash/isFunction'\nimport isPlainObject from 'lodash/isPlainObject'\n\n/** Class representing a debugger. */\nexport default class Debugger {\n  /**\n   * Create a debugger which handles errors and messahes during an session.\n   * @param {Object} runner - The runner class to which the debugger belongs.\n   */\n  constructor (runner) {\n    // Create and set private properties.\n    this._runner = runner // Parent runner attached to the debugger.\n\n    // Create and set public properties.\n    this.enabled = true // Enable the debugger.\n    this.error = false // True if an error occured.\n    this.messageLog = [] // Arraty with alle log messages.\n  }\n\n  /** Initialize the debugger object class. */\n  _initialize () {\n    // Clear the log.\n    this.messageLog = []\n  }\n\n  /** Finalize the debugger object class. */\n  _finalize () {\n    // If enabled push the messages to the javascript console.\n    if (this.enabled === true) {\n      console.log(this.messageLog)\n    }\n\n    // Clear the log.\n    this.messageLog = []\n  }\n\n  /**\n   * Show a fatal error to the user and stops the running of the experiment.\n   * @param {String} errorText - The error shown to the user.\n   */\n  addError (errorText, context = null) {\n    this.error = true\n    this._runner._events.state = constants.TIMER_ERROR\n    console.error('OSWeb has stopped running due to a fatal error.')\n    if (isPlainObject(context)) {\n      if (context.notify === true && isFunction(this._runner._onError)) {\n        const url = context.url || null\n        this._runner._onError(errorText, url)\n      }\n    }\n    const itemStack = []\n    for (let itemInfo of this._runner._itemStack._items) {\n      itemStack.push(itemInfo['item'] + '[' + itemInfo['phase'] + ']')\n    }\n    console.log('item-stack: ' + itemStack.join('.'))\n    throw errorText\n  }\n\n  /**\n   * Add a message to the debugger list.\n   * @param {String} message - The message to be added to the list.\n   */\n  addMessage (messageText) {\n    // Push the error message to the log.\n    this.messageLog.push(messageText)\n\n    if (this.enabled === true) {\n      console.log(messageText)\n    }\n  }\n\n  /**\n   * Mirror function for the AddMessage method.\n   * @param {String} messageText - The message to be added to the list.\n   */\n  msg (messageText) {\n    // Push the error message to the log.\n    this.addMessage(messageText)\n  }\n}\n","import {\n  isNumber\n} from 'lodash'\n\n/** Class representing a convertor. */\nexport default class Convertor {\n  /**\n   * Create a convertor which converts an osexp script to a JSON object stucture.\n   * @param {Object} runner - The runner class to which the debugger belongs.\n   */\n  constructor (runner) {\n    // Create and set private properties.\n    this.item = null // Current item to process.\n    this.runner = runner // Parent runner attached to the debugger.\n    this.variable = null // Container for global multiline variable.\n    this.variabelName = '' // Name of a global multiline variable.\n  }\n\n  /**\n   * Strip additional quotes for value token.\n   * @param {String} value - The value to check and (optional) convert.\n   * @return {String} - The converted value.\n   */\n  parseValue (value) {\n    // Strip additional quotes.\n    if ((value.length >= 4) && (value.substr(0, 1) === '\"') && (value.substr(value.length - 1, 1) === '\"')) {\n      return value.substr(1, value.length - 2)\n    } else {\n      return value\n    }\n  }\n\n  /**\n   * Process a single line within the osexp script.\n   * @param {String} line - The string line to parse.\n   */\n  parseLine (line) {\n    // Split a line into items and process them.\n    var items = line.match(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g)\n    if (this.variable !== null) {\n      // If we're currently inside a multiline variable, check whether the\n      // variable ends.\n      if (items !== null && items[0] === '__end__') {\n        this.item.vars[this.variableName] = this.variable\n        this.variable = null\n      } else {\n        this.variable.push(line)\n      }\n      return\n    }\n    // if defined process a single line.\n    if (items !== null) {\n      // Select action on first token.\n      switch (items[0]) {\n      case 'define':\n        // Process a define statement.\n        this.item = this.runner._itemStore.newItem(items[1], items[2], '')\n        break\n      case 'draw':\n        // Create the element.\n        var element = this.runner._itemStore._newElementClass(items[1], this.item, '')\n\n        // Split the properties and process them.\n        for (var i = 2; i < items.length; i++) {\n          var pair = items[i].split('=', 2)\n          element.properties[pair[0]] = pair[1]\n        }\n\n        // Add the element to the item.\n        this.item.elements.push(element)\n        break\n      case 'run':\n        if (this.item.type === 'sequence') {\n          // Process a run statement for a sequence item.\n          this.item.items.push({\n            item: items[1],\n            cond: items[2]\n          })\n        } else {\n          // Process a run statement for a loop item.\n          this.item.vars.item = items[1]\n        }\n        break\n      case 'set':\n        // Process a set statement.\n        this.item.vars[items[1]] = this.parseValue(items[2])\n        break\n      case 'setcycle':\n        // Process a setcycle statement.\n        var value = this.parseValue(items[3])\n\n        // Convert the python expression to javascript.\n        if (value[0] === '=') {\n          // Parse the python statement.\n          value = this.runner._pythonParser._prepare(value.slice(1))\n          if (value !== null) {\n            value = value.body[0]\n          }\n        } else {\n          // Check if the value is numeric\n          value = isNumber(value) ? Number(value) : value\n        }\n\n        // Set the matrix with the proper values.\n        if (this.item.orig_matrix[items[1]] === undefined) {\n          this.item.orig_matrix[items[1]] = {}\n        }\n        this.item.orig_matrix[items[1]][items[2]] = value\n        break\n      case 'widget':\n        // Remove the widget token from the list.\n        items.shift()\n\n        // Add the element to the item.\n        this.item._widgets.push(items)\n        break\n      default:\n        // check for multiline variables.\n        if ((items[0].length > 5) && (items[0].substr(0, 2) === '__') && (items[0].substr(-2) === '__')) {\n          this.variableName = items[0].substr(2, items[0].length - 4)\n          this.variable = []\n        }\n      }\n    } else {\n      // Return to default level.\n      this.item = this.runner._experiment\n    }\n  }\n\n  /** Initialize the debugger object class. */\n  parseScript (script) {\n    // Set first item.\n    this.item = this.runner._experiment\n\n    // Split the script into lines.\n    if (script !== null) {\n      // Split the script into lines.\n      var lines = script.split('\\n')\n      for (var i = 0; i < lines.length; i++) {\n        // Parse a single line\n        this.parseLine(lines[i])\n      }\n    }\n  }\n}\n","import { constants } from '../system/constants.js'\r\nimport { Ticker } from 'pixi.js'\r\n\r\n/** Class representing the event system. */\r\nexport default class Events {\r\n  /** The events class controls the running of an experiment. */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._currentItem = null // The current active item.\r\n    this._keyDownEvent = null // Container for last key event.\r\n    this._keyDownHandler = null // Key down event handler.\r\n    this._keyPressMode = constants.PRESSES_ONLY // Keyboard press mode.\r\n    this._keyUpHandler = null // Key up event handler.\r\n    this._mouseDownEvent = null // Container for last mouse event.\r\n    this._mouseDownHandler = null // Mouse down event handler.\r\n    this._mouseMoveEvent = null // Container for last mouse move event.\r\n    this._mouseMoveHandler = null // Mouse move event handler.\r\n    this._mousePressMode = constants.PRESSES_ONLY // Mouse press mode.\r\n    this._mouseUpHandler = null // Mouse up event handler.\r\n    this._runner = runner // Parent runner class.\r\n    this._responseGiven = false // Valid response toggle\r\n    this._responseList = null // Items to respond on.\r\n    this._responseType = constants.RESPONSE_NONE // Set type of response (0 = none, 1 = keyboard, 2 = mouse, 3 = sound).\r\n    this._soundHasEnded = false // Sound play is finished.\r\n    this._state = constants.TIMER_NONE // Current status of the runner.\r\n    this._statePrevious = constants.TIMER_NONE // Previous state, used when pausing experiment.\r\n    this._timeHandler = null // Timing event handler.\r\n    this._timeOut = -1 // Duration before timeout occures.\r\n    this._timeStamp = -1 // Moment of update checking.\r\n    this._videoHasEnded = false // Video play is finished.\r\n\r\n    // Definition of the conversion table to convert keycodes to OpenSesame codes.\r\n    this._KEY_CODES = [\r\n      '', '', '', '', '', '', 'help', '', 'backspace', 'tab', '', '', 'clear', 'enter', 'enter_special', '', 'shift', 'ctrl', 'alt', 'pause', // 00  .. 19\r\n      'caps', '', '', '', '', '', '', 'escape', '', '', '', '', 'space', 'page up', 'page down', 'end', 'home', 'left', 'up', 'right', // 20  .. 39\r\n      'down', 'select', 'print', 'execute', 'print screen', 'insert', 'delete', '', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', // 40  .. 59\r\n      '<', '=', '>', '?', '@', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', // 60  .. 79\r\n      'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'left meta', 'right meta', 'menu', '', '', 'kp0', 'kp1', 'kp2', 'kp3', // 80  .. 99\r\n      'kp4', 'kp5', 'kp6', 'kp7', 'kp8', 'kp9', 'kp_multiply', 'kp_plus', '', 'kp_minus', 'kp_period', 'kp_divide', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', // 100 .. 119\r\n      'f9', 'f10', 'f11', 'f12', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 120 .. 139\r\n      '', '', '', '', 'numlock', 'scrollock', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 140 .. 159\r\n      '^', '!', '\"', '#', '$', '%', '&', '_', '(', ')', '*', '+', '|', '_', '{', '}', '~', '', '', '', // 160 .. 179\r\n      '', '', '', '', '', '', ';', '=', ',', '-', '.', '/', '`', '', '', '', '', '', '', '', // 180 .. 199\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '[', // 200 .. 219\r\n      '\\\\', ']', '\\'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 220 .. 239\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' // 240 .. 255\r\n    ]\r\n\r\n    // Definition of the conversion table to convert shift keycodes to OpenSesame codes.\r\n    this._KEY_SHIFTCODES = [\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'pause', // 00  .. 19\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 20  .. 39\r\n      '', '', '', '', '', '', '', '', ')', '!', '@', '#', '$', '%', '^', '&', '*', '(', '', ':', // 40  .. 59\r\n      '', '+', '', '', '', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', // 60  .. 79\r\n      'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'y', 'z', '', '', '', '', '', '', '', '', '', '', // 80  .. 99\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 100 .. 119\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 120 .. 139\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 140 .. 159\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '_', '', '', '', '', '', '', // 160 .. 179\r\n      '', '', '', '', '', '', '', '', '<', '', '>', '?', '~', '', '', '', '', '', '', '', // 180 .. 199\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '{', // 200 .. 219\r\n      '|', '}', '\"', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 220 .. 239\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' // 240 .. 255\r\n    ]\r\n  }\r\n\r\n  /** Initialize the event system. */\r\n  _initialize () {\r\n    // Create and set the keyboard event listeners.\r\n    this._keyDownHandler = this._keyDown.bind(this)\r\n    this._keyUpHandler = this._keyUp.bind(this)\r\n    window.addEventListener('keydown', this._keyDownHandler)\r\n    window.addEventListener('keyup', this._keyUpHandler)\r\n\r\n    // Create and set the mouse event listeners.\r\n    this._mouseDownHandler = this._mouseDown.bind(this)\r\n    this._mouseMoveHandler = this._mouseMove.bind(this)\r\n    this._mouseUpHandler = this._mouseUp.bind(this)\r\n    this._touchStartHandler = this._touchStart.bind(this)\r\n    this._runner._renderer.view.addEventListener('mousedown', this._mouseDownHandler)\r\n    this._runner._renderer.view.addEventListener('mousemove', this._mouseMoveHandler)\r\n    this._runner._renderer.view.addEventListener('mouseup', this._mouseUpHandler)\r\n    this._runner._renderer.view.addEventListener('touchstart', this._touchStartHandler)\r\n\r\n    // Set the current item to the experiment object.\r\n    this._currentItem = this._runner._experiment\r\n    this._state = constants.TIMER_NONE\r\n\r\n    // Create the time handler and start the experiment.\r\n    this._timeHandler = new Ticker()\r\n    this._timeHandler.add(this._time.bind(this))\r\n    this._timeHandler.start()\r\n  }\r\n\r\n  /** Finalize the event system. */\r\n  _finalize () {\r\n    // Remove the keyboard event listeners.\r\n    window.removeEventListener('keydown', this._keyDownHandler)\r\n    window.removeEventListener('keyup', this._keyUpHandler)\r\n\r\n    // Remove the mouse event listeners.\r\n    this._runner._renderer.view.removeEventListener('mousedown', this._mouseDownHandler)\r\n    this._runner._renderer.view.removeEventListener('mousemove', this._mouseMoveHandler)\r\n    this._runner._renderer.view.removeEventListener('mouseup', this._mouseUpHandler)\r\n    this._runner._renderer.view.removeEventListener('touchstart', this._touchStartHandler)\r\n\r\n    // Stop the timing event listener.\r\n    this._timeHandler.stop()\r\n    this._timeHandler.remove(this._time)\r\n\r\n    // Clear the properties.\r\n    this._currentItem = null\r\n    this._mouseDownEvent = null\r\n    this._mouseMoveEvent = null\r\n    this._responseList = null\r\n    this._timeHandler = null\r\n  }\r\n\r\n  /**\r\n     * Convert a keyboard code to a OpenSesame code (including special characters ctrl/shift/alt).\r\n     * @param {Object} event - The keyboard event to process.\r\n     * @return {String} - The converted keyboard code.\r\n     */\r\n  _convertKeyCode (event) {\r\n    // Check for special characters\r\n    var key = ''\r\n    if ((event.shiftKey === true) && (event.keyCode !== 16)) {\r\n      // Shift key pressed with other key, so convert shift keys.\r\n      key = this._KEY_SHIFTCODES[event.keyCode]\r\n    } else if ((event.shiftKey === true) && (event.keyCode === 16)) {\r\n      // Shift code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lshift' : 'rshift'\r\n    } else if ((event.ctrlKey === true) && (event.keyCode === 17)) {\r\n      // Ctrl code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lctrl' : 'rctrl'\r\n    } else if ((event.altKey === true) && (event.keyCode === 18)) {\r\n      // Alt code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lalt' : 'ralt'\r\n    } else {\r\n      // Convert standard keycode.\r\n      key = this._KEY_CODES[event.keyCode]\r\n    }\r\n\r\n    // Return function result.\r\n    return key\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving key down events.\r\n     * @param {Object} event - system keydown event.\r\n     */\r\n  _keyDown (event) {\r\n    // Ignore events if the key was already down. This is to avoid keypresses\r\n    if (event.repeat) return\r\n    // Store the keyboard event.\r\n    this._keyDownEvent = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time()\r\n    }\r\n\r\n    // Check for esc key to pause the experiment.\r\n    if ((event.keyCode === 27) && (this._state !== constants.TIMER_PAUSE)) {\r\n      // Set system to paused.\r\n      this._statePrevious = this._state\r\n      this._state = constants.TIMER_PAUSE\r\n\r\n      // Show the pause screen.\r\n      this._runner._screen._showPauseScreen()\r\n    } else if ((this._state === constants.TIMER_WAIT) &&\r\n      ((this._keyPressMode === constants.PRESSES_ONLY) ||\r\n      (this._keyPressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processKeyboardEvent(event, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving key up events.\r\n     * @param {Object} event - system keyup event.\r\n     */\r\n  _keyUp (event) {\r\n    if (event.repeat) return\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._keyPressMode === constants.RELEASES_ONLY) ||\r\n      (this._keyPressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processKeyboardEvent(event, 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Process and convert keyboard events into response objects.\r\n     * @param {Object} event - system keyboard event.\r\n     * @param {Number} keyboardState - type of keyboard event.\r\n     */\r\n  _processKeyboardEvent (event, keyboardState) {\r\n    // Create a new keyboard response object.\r\n    const keyboardResponse = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time(),\r\n      state: keyboardState,\r\n      type: constants.RESPONSE_KEYBOARD\r\n    }\r\n\r\n    // Convert response to proper keyboard token.\r\n    keyboardResponse.resp = this._convertKeyCode(event)\r\n\r\n    // Process the response to the current object.\r\n    if ((this._responseType === constants.RESPONSE_KEYBOARD) &&\r\n      ((this._responseList === null) ||\r\n      (this._responseList.indexOf(keyboardResponse.resp) >= 0))) {\r\n      // Process the current item.\r\n      if (this._currentItem !== null) {\r\n        // Process the response.\r\n        this._currentItem._update(keyboardResponse)\r\n      }\r\n\r\n      // Set the valid response given toggle.\r\n      this._responseGiven = true\r\n    }\r\n    return keyboardResponse\r\n  }\r\n\r\n  /** Prevent the right mouse context menu from showing. */\r\n  _mouseContext (event) {\r\n    // Prevent default action.\r\n    event.preventDefault()\r\n\r\n    // Return false to prevent the context menu from pushing up.\r\n    return false\r\n  }\r\n\r\n  /** Store the last mouse move event for later use. */\r\n  _mouseMove (event) {\r\n    // Store the mouse move event and its timestamp for use in the mouse class.\r\n    this._mouseMoveEvent = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time()\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for touch start events, which for now are translated to\r\n     * moudown events.\r\n     * @param {Object} event - system touchstart event.\r\n     */\r\n  _touchStart (event) {\r\n    event.button = 0\r\n    event.clientX = event.changedTouches[0].clientX\r\n    event.clientY = event.changedTouches[0].clientY\r\n    this._mouseDown(event)\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving mouse down events.\r\n     * @param {Object} event - system mousedown event.\r\n     */\r\n  _mouseDown (event) {\r\n    // Store the mouse down event and its timestamp for use in the mouse class.\r\n    this._mouseDownEvent = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time()\r\n    }\r\n\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._mousePressMode === constants.PRESSES_ONLY) || (this._mousePressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processMouseEvent(event, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving mouse up events.\r\n     * @param {Object} event - system mouseup event.\r\n     */\r\n  _mouseUp (event) {\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._mousePressMode === constants.RELEASES_ONLY) || (this._mousePressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      this._processMouseEvent(event, 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Process and convert mouse events into response objects.\r\n     * @param {Object} event - system mouse event.\r\n     * @param {Number} mouseState - type of mouse event.\r\n     */\r\n  _processMouseEvent (event, mouseState) {\r\n    // Create a mouse response object.\r\n    var mouseResponse = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time(),\r\n      state: mouseState,\r\n      type: constants.RESPONSE_MOUSE\r\n    }\r\n\r\n    // Adjust mouse response.\r\n    mouseResponse.resp = String(event.button + 1)\r\n\r\n    // Process the response to the current object.\r\n    if ((this._responseType === constants.RESPONSE_MOUSE) && ((this._responseList === null) ||\r\n      (this._responseList.indexOf(mouseResponse.resp) >= 0))) {\r\n      // Process the response to the current object.\r\n      if (this._currentItem !== null) {\r\n        this._currentItem._update(mouseResponse)\r\n      }\r\n\r\n      // Set the valid response given toggle.\r\n      this._responseGiven = true\r\n    }\r\n    return mouseResponse\r\n  }\r\n\r\n  /**\r\n     * Event handler for sound event processing.\r\n     * @param {Object} event - sound end event.\r\n     */\r\n  _audioEnded (sampler) {\r\n    // If duration isequal to sound exit the sound item.\r\n    if (sampler.duration === 'sound') {\r\n      this.proceed()\r\n    }\r\n  }\r\n\r\n  /** Definition of methods for video event processing. */\r\n  _videoEnded (event) {\r\n    // If duration is set to video end respons to this.\r\n    var video = this\r\n    if (video.duration === 'video') {\r\n      video._experiment._runner._events._videoHasEnded = true\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for video play processing.\r\n     * @param {Object} event - sound end event.\r\n     */\r\n  _videoPlay (event) {\r\n  }\r\n\r\n  /**\r\n     * Event handler for experiment execution.\r\n     * @param {Object} event - system timer event.\r\n     */\r\n  _time (event) {\r\n    // Select the proper state.\r\n    switch (this._state) {\r\n    case constants.TIMER_NONE:\r\n      // Do nothing in the loop\r\n      break\r\n    case constants.TIMER_WAIT:\r\n      // Set current time stamp\r\n      this._timeStamp = this._currentItem.clock.time()\r\n\r\n      // Check if a time out occures or a valid response is given.\r\n      if (((this._timeOut === -1) && ((this._responseGiven === true) || (this._videoHasEnded === true))) ||\r\n                    ((this._timeOut > 0) && ((this._responseType === constants.RESPONSE_KEYBOARD) || (this._responseType === constants.RESPONSE_MOUSE)) && (this._responseGiven === true)) ||\r\n                    ((this._timeOut > 0) && ((this._timeStamp - this._currentItem.experiment.vars.get('time_' + this._currentItem.name)) > this._timeOut))) {\r\n        this.proceed()\r\n      } else {\r\n        // Update the current item without response.\r\n        this._currentItem._update(null)\r\n      }\r\n      break\r\n    case constants.TIMER_PAUSE:\r\n      // Do nothing in the loop\r\n      break\r\n    case constants.TIMER_RESUME:\r\n      // Do nothing in the loop\r\n      break\r\n    case constants.TIMER_BREAK:\r\n    case constants.TIMER_EXIT:\r\n      // Adjus the status.\r\n      this._state = constants.TIMER_NONE\r\n\r\n      // Exit the runner.\r\n      this._runner._finalize()\r\n      break\r\n    case constants.TIMER_FORM:\r\n      // Update the current item without response.\r\n      this._currentItem._update(null)\r\n      break\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Execute a stimulus/response wait period for a certain item.\r\n     * @param {Number} timeout - maximum time to wait for a response.\r\n     * @param {Number} responseType - type of response to wait for.\r\n     * @param {Array} responseList - list of acceptable respones.\r\n     */\r\n  _run (timeOut, responseType, responseList) {\r\n    // Set the event run|ning properties.\r\n    this._responseList = responseList\r\n    this._responseType = responseType\r\n    this._timeOut = timeOut\r\n\r\n    // Activate the event running.\r\n    this._responseGiven = false\r\n    this._soundHasEnded = false\r\n    this._state = constants.TIMER_WAIT\r\n    this._videoHasEnded = false\r\n  }\r\n\r\n  proceed () {\r\n    // Adjust the status.\r\n    this._state = constants.TIMER_NONE\r\n\r\n    // Remove the items from the general stack.\r\n    this._runner._itemStack.pop()\r\n\r\n    // Execute the post-run phase after duration is finished or response is received.\r\n    this._currentItem._complete()\r\n  }\r\n}\r\n","import { isFunction } from 'lodash'\r\n\r\n/** Class representing a parameter processor. */\r\nexport default class Parameters {\r\n  /**\r\n     * Create an session class which stores information about the client system.\r\n     * @param {Runner} runner - The runner class to which the debugger belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._itemCounter = 0 // Number of active parameter.\r\n    this._parameters = [] // All parameters to process.\r\n    this._runner = runner // Parent runner attached to the session object.\r\n  }\r\n\r\n  /** Initialize the parameters class. */\r\n  _initialize () {\r\n    // Check if subject parameter is already defined.\r\n    if (this._runner._subject !== null) {\r\n      // Set the subject number\r\n      this._runner._experiment.set_subject(this._runner._subject)\r\n\r\n      // Parameters are processed, next phase.\r\n      this._runner._screen._setupClickScreen(this._runner._welcomeText)\r\n    } else {\r\n      // Update inroscreen.\r\n      this._runner._screen._updateIntroScreen('Retrieving input parameters.')\r\n\r\n      // Set properties if defined.\r\n      var parameter = {\r\n        dataType: 'number',\r\n        defaultValue: '0',\r\n        name: 'subject_nr',\r\n        title: 'Starting the experiment',\r\n        prompt: 'Please enter the subject number',\r\n        promptEnabled: true\r\n      }\r\n\r\n      // Add the subject parameter to the parameters list.\r\n      this._parameters.push(parameter)\r\n\r\n      // Process the Parameters.\r\n      this._processParameters()\r\n    }\r\n  }\r\n\r\n  /** Process all parameters within the parameter list. */\r\n  _processParameters () {\r\n    // Process all items for which a user input is required.\r\n    if (this._itemCounter < this._parameters.length) {\r\n      // Process a  parameter.\r\n      this._processParameter(this._parameters[this._itemCounter])\r\n    } else {\r\n      // Transfer the startup info to the context.\r\n      this._transferParameters()\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Callback function for dialog when aits OK button has been clicked.\r\n     * @param {Object} parameter - The parameter to set.\r\n     * @param {String} value - The value to set.\r\n     */\r\n  _onParamConfirm (parameter, value) {\r\n    // Get the response information\r\n    parameter.response = value\r\n\r\n    // Increase the counter.\r\n    this._itemCounter++\r\n\r\n    // Continue processing.\r\n    this._processParameters()\r\n  }\r\n\r\n  /** Callback function for dialog when its cancel button has been clicked. */\r\n  _onParamCancel () {\r\n    // Exit the runner.\r\n    this._runner._exit()\r\n  }\r\n\r\n  /**\r\n     * Process a single parameter\r\n     * @param {Object} parameter - The parameter which must be processed.\r\n     */\r\n  _processParameter (parameter) {\r\n    // Check if a user request is required.\r\n    if (parameter.promptEnabled === true) {\r\n      // Use passed function that displays a prompt. This leaves the display\r\n      // of the prompt to the library or system that implements osweb.\r\n      if (isFunction(this._runner._prompt)) {\r\n        this._runner._prompt(parameter.title, parameter.prompt,\r\n          parameter.defaultValue, parameter.dataType,\r\n          this._onParamConfirm.bind(this, parameter), this._onParamCancel.bind(this))\r\n      } else {\r\n        // Fallback to the window prompt if no function has been passed.\r\n        const result = window.prompt(parameter.prompt, parameter.defaultValue)\r\n\r\n        if (result === null) {\r\n          this._onParamCancel()\r\n        } else {\r\n          this._onParamConfirm(parameter, result)\r\n        }\r\n      }\r\n    } else {\r\n      // Assign default value to the Startup item.\r\n      parameter.response = parameter.defaultValue\r\n\r\n      // Increase the counter.\r\n      this._itemCounter++\r\n\r\n      // Continue processing.\r\n      this._processParameters()\r\n    }\r\n  }\r\n\r\n  /** Transfer the startup info items to the context. */\r\n  _transferParameters () {\r\n    // Transfer the startup info items to the context.\r\n    for (var i = 0; i < this._parameters.length; i++) {\r\n      // Additional run for subject_nr\r\n      if (this._parameters[i].name === 'subject_nr') {\r\n        this._runner._experiment.set_subject(this._parameters[i].response)\r\n      } else {\r\n        this._runner._experiment.vars.set(this._parameters[i].name,\r\n          this._parameters[i].response)\r\n      }\r\n    }\r\n\r\n    // Parameters are processed, next phase.\r\n    this._runner._screen._setupClickScreen(this._runner._welcomeText)\r\n  }\r\n}\r\n","import { isFunction } from 'lodash'\r\nimport { Container, Sprite, Graphics, Text } from 'pixi.js'\r\nimport { VERSION_NUMBER } from '../index.js'\r\n\r\n/** Class representing a Screen. */\r\nexport default class Screen {\r\n  /**\r\n   * Create an introduction screen which handles the start of the experiment.\r\n   * @param {Object} runner - The runner class to which the screen belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the screen object.\r\n\r\n    // Set class properties.\r\n    this._active = true // If true the introduction screen is shown.\r\n    this._click = true // If true all is started with a mouse click.\r\n    this._container = null //  Container which holds the screen info.\r\n    this._exit = false // Exit toggle to prevent dialog when closing experiment.\r\n  }\r\n\r\n  screenCenter () {\r\n    return {\r\n      x: this._runner._renderer.width / 2,\r\n      y: this._runner._renderer.height / 2\r\n    }\r\n  }\r\n\r\n  /** Initialize the fullscreen mode if enabled. */\r\n  _fullScreenInit () {\r\n    // Check if fullscreen must be enabled.\r\n    if (this._runner._fullScreen === true) {\r\n      // Get the container element.\r\n      var element = this._runner._container\r\n\r\n      // Go full-screen\r\n      if (element.requestFullscreen) {\r\n        document.addEventListener('fullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('fullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.requestFullscreen()\r\n      } else if (element.webkitRequestFullscreen) {\r\n        document.addEventListener('webkitfullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('webkitfullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.webkitRequestFullscreen()\r\n      } else if (element.mozRequestFullScreen) {\r\n        document.addEventListener('mozfullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('mozfullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.mozRequestFullScreen()\r\n      } else if (element.msRequestFullscreen) {\r\n        document.addEventListener('MSFullscreenChange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('MSFullscreenError', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.msRequestFullscreen()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Finalize the fullscreen mode if if was enabled. */\r\n  _fullScreenExit () {\r\n    // Check if fullscreen must be enabled.\r\n    if (this._runner._fullScreen === true) {\r\n      // Set the exit toggle.\r\n      this._exit = true\r\n\r\n      // Exit the full screen mode.\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen()\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen()\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen()\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Event handler which responds to full-screen change. */\r\n  _fullScreenChanged () {\r\n    // Check if we are dropping out of full-screen.\r\n    if (document.fullscreenElement ||\r\n      document.webkitFullscreenElement ||\r\n      document.mozFullScreenElement ||\r\n      document.msFullscreenElement) {\r\n      // Scale the canvas\r\n      switch (this._runner._scaleMode) {\r\n      case 'noScale':\r\n        // Default mode, no scaling, canbas is centered on the screen.\r\n        this._runner._renderer.view.style.top = '0px'\r\n        this._runner._renderer.view.style.bottom = '0px'\r\n        this._runner._renderer.view.style.left = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.margin = 'auto'\r\n        this._runner._renderer.view.style.display = 'block'\r\n        this._runner._renderer.view.style.position = 'absolute'\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n        break\r\n      case 'showAll':\r\n        // Default mode, no scaling, canbas is centered on the screen.\r\n        this._runner._renderer.view.style.top = '0px'\r\n        this._runner._renderer.view.style.bottom = '0px'\r\n        this._runner._renderer.view.style.left = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.margin = 'auto'\r\n        this._runner._renderer.view.style.display = 'block'\r\n        this._runner._renderer.view.style.position = 'absolute'\r\n        if ((this._runner._container.clientWidth - this._runner._experiment.vars.width) >\r\n            (this._runner._container.clientHeight - this._runner._experiment.vars.height)) {\r\n          const ar = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n          this._runner._renderer.resize(Math.round(this._runner._experiment.vars.width * ar), this._runner._container.clientHeight)\r\n          this._runner._experiment._scale_x = Math.round(this._runner._experiment.vars.width * ar) / this._runner._experiment.vars.width\r\n          this._runner._experiment._scale_y = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n        } else {\r\n          const ar = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n          this._runner._renderer.resize(this._runner._container.clientWidth, Math.round(this._runner._experiment.vars.height * ar))\r\n          this._runner._experiment._scale_x = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n          this._runner._experiment._scale_y = Math.round(this._runner._experiment.vars.height * ar) / this._runner._experiment.vars.height\r\n        }\r\n        this._runner._experiment._currentCanvas._container.scale.x = this._runner._experiment._scale_x\r\n        this._runner._experiment._currentCanvas._container.scale.y = this._runner._experiment._scale_y\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n        break\r\n      case 'exactFit':\r\n        // Fit to the exact window size (cropping).\r\n        this._runner._experiment._scale_x = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n        this._runner._experiment._scale_y = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n\r\n        // Reize the current canvas.\r\n        this._runner._renderer.resize(this._runner._container.clientWidth, this._runner._container.clientHeight)\r\n        this._runner._experiment._currentCanvas._container.scale.x = this._runner._experiment._scale_x\r\n        this._runner._experiment._currentCanvas._container.scale.y = this._runner._experiment._scale_y\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n        break\r\n      }\r\n    } else {\r\n      // Check for exiting experiment.\r\n      if (this._exit === false) {\r\n        // Resclae to 1Fit to the exact window size (cropping).\r\n        this._runner._experiment._scale_x = 1\r\n        this._runner._experiment._scale_y = 1\r\n\r\n        // Fit to the exact window size (cropping).\r\n        this._runner._renderer.resize(this._runner._experiment.vars.width, this._runner._experiment.vars.height)\r\n        this._runner._experiment._currentCanvas._container.scale.x = 1\r\n        this._runner._experiment._currentCanvas._container.scale.y = 1\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n\r\n        // Open Sesame is running, request subject to continue of to stop.\r\n        if (isFunction(this._runner._confirm)) {\r\n          this._runner._confirm('Leaving full-screen mode, pausing experiment.',\r\n            'Please press ok the resume the experiment otherwise cancel to stop.',\r\n            this._onFullScreenConfirm.bind(this), this._onFullScreenCancel.bind(this))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Event handler which responds to full-screen change errors. */\r\n  _fullScreenError () {\r\n    // Show error message.\r\n    this._runner.debugger.addError('Could not start full-screen mode, experiment stopped.')\r\n  }\r\n\r\n  /** Event handler to respond to dialog ok conmfirmation. */\r\n  _onFullScreenConfirm () {\r\n    // Get the container element.\r\n    var element = this._runner._container\r\n    // Go full-screen\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen()\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen()\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen()\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen()\r\n    }\r\n  }\r\n\r\n  /** Event handler to respond to dialog cancel confirmation. */\r\n  _onFullScreenCancel () {\r\n    // Exit the experiment.\r\n    this._runner._finalize()\r\n  }\r\n\r\n  /** Set the introscreen elements. */\r\n  _setupIntroScreen ( logoSrc ) {\r\n    // Check if introscreen is used.\r\n    if (this._active === true) {\r\n      // Define introscreen elements.\r\n      this._introScreen = new Container()\r\n\r\n      const center = this.screenCenter()\r\n\r\n      const logoPath = (typeof logoSrc === 'undefined') ? 'img/opensesame.png' : logoSrc\r\n\r\n      const oswebLogo = Sprite.from(logoPath)\r\n      const oswebTitle = new Text('OSWeb', {\r\n        fontFamily: 'Arial',\r\n        fontSize: 26,\r\n        fill: '#FFFFFF'\r\n      })\r\n      const versionInfo = new Text(VERSION_NUMBER, {\r\n        fontFamily: 'Arial',\r\n        fontSize: 16,\r\n        fill: '#FFFFFF'\r\n      })\r\n\r\n      const copyrightText = new Text(\r\n        `Copyright Jaap Bos, Daniel Schreij & Sebastiaan Mathot, 2016 - ${(new Date()).getFullYear()}`,\r\n        {\r\n          fontFamily: 'Arial',\r\n          fontSize: 12,\r\n          fill: '#FFFFFF'\r\n        }\r\n      )\r\n\r\n      oswebLogo.width = oswebLogo.height = 150\r\n\r\n      oswebLogo.position.set(center.x - oswebLogo.width / 2, 50)\r\n      oswebTitle.position.set(center.x - oswebTitle.width / 2, 215)\r\n      versionInfo.position.set(center.x - versionInfo.width / 2, 250)\r\n      copyrightText.position.set(\r\n        center.x - copyrightText.width / 2,\r\n        center.y * 2 - copyrightText.height * 2\r\n      )\r\n\r\n      this._statusText = new Text('', {\r\n        fontFamily: 'Arial',\r\n        fontSize: 18,\r\n        fill: '#FFFFFF'\r\n      })\r\n      this._statusText.position.set(\r\n        center.x - this._statusText.width / 2,\r\n        center.y\r\n      )\r\n      this._introScreen.addChild(oswebLogo, oswebTitle,\r\n        versionInfo, copyrightText, this._statusText)\r\n\r\n      // Show the introduction screen.\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /** Check if the experiment must be clicked to start. */\r\n  _setupClickScreen (text) {\r\n    // Check if the experiment must be clicked to start.\r\n    if (this._click === true) {\r\n      // Update inroscreen.\r\n      if ((typeof text === \"undefined\") || (text.length === 0)) {\r\n        text = `\r\n    Your participation in this experiment should be anonymous.\r\n        Never provide any personal or sensitive information\r\n            (e.g. credit card or social security numbers).\r\n\r\n                    Click here with the mouse to begin.`\r\n      }\r\n      this._updateIntroScreen(text)\r\n\r\n      // Setup the mouse click response handler.\r\n      var clickHandler = function (event) {\r\n        // Briefly play each of the samples from the file pool. This is\r\n        // necessary in Safari so that the first happens as a direct \r\n        // consequence of a user interaction.\r\n        for (let item of this._runner._experiment.pool._items) {\r\n          if (item.type === 'audio') {\r\n            item.data.volume = 0\r\n            item.data.play()\r\n            item.data.pause()\r\n            item.data.currentTime = 0\r\n            item.data.volume = 1\r\n          }\r\n        }\r\n        // Remove the handler.\r\n        this._runner._renderer.view.removeEventListener('click', clickHandler)\r\n        this._runner._renderer.view.removeEventListener('touchstart', clickHandler)\r\n\r\n        // Finalize the introscreen elements.\r\n        this._clearIntroScreen()\r\n\r\n        // Start the task.\r\n        this._runner._initialize()\r\n      }.bind(this)\r\n\r\n      // Set the temporary mouse click.\r\n      this._runner._renderer.view.addEventListener('click', clickHandler, false)\r\n      this._runner._renderer.view.addEventListener('touchstart', clickHandler, false)\r\n    } else {\r\n      // Finalize the introscreen elements.\r\n      this._clearIntroScreen()\r\n\r\n      // Start the runner.\r\n      this._runner._initialize()\r\n    }\r\n  }\r\n\r\n  /** Clear the introscreen elements. */\r\n  _clearIntroScreen () {\r\n    // Update the introscreen elements.\r\n    if (this._active === true) {\r\n      // Clear the stage by temoving al the child elements.\r\n      for (var i = this._introScreen.children.length - 1; i >= 0; i--) {\r\n        this._introScreen.removeChild(this._introScreen.children[i])\r\n      }\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the progress bar used when loading the file pool.\r\n   * @param {Number} percentage - The percentage (0-100) of the progress bar.\r\n   */\r\n  _updateProgressBar (percentage) {\r\n    const center = this.screenCenter()\r\n\r\n    const xOuter = 200\r\n    const wOuter = 400\r\n    const hOuter = 20\r\n    const yOuter = center.y + 2 * hOuter\r\n\r\n    if (this._active === true) {\r\n      // Select the stage.\r\n      switch (percentage) {\r\n      case -1:\r\n        this._progressBarOuter = new Graphics()\r\n        this._progressBarOuter.lineStyle(1, 0xFFFFFF, 1)\r\n        this._progressBarOuter.drawRect(xOuter, yOuter, wOuter, hOuter)\r\n        this._progressBarOuter.x = 0\r\n        this._progressBarOuter.y = 0\r\n        this._progressBarInner = new Graphics()\r\n        this._progressBarInner.lineStyle(1, 0xFFFFFF, 1)\r\n        this._progressBarInner.drawRect(xOuter + 2, yOuter + 2, 1, hOuter - 4)\r\n        this._progressBarInner.x = 0\r\n        this._progressBarInner.y = 0\r\n        this._introScreen.addChild(this._progressBarInner)\r\n        this._introScreen.addChild(this._progressBarOuter)\r\n        this._runner._renderer.render(this._introScreen)\r\n        break\r\n      case 100:\r\n        this._introScreen.removeChild(this._progressBarInner)\r\n        this._introScreen.removeChild(this._progressBarOuter)\r\n        this._runner._renderer.render(this._introScreen)\r\n        break\r\n      default:\r\n        this._progressBarOuter.beginFill(0xFFFFFF)\r\n        this._progressBarOuter.drawRect(xOuter + 2, yOuter + 2, Math.round(percentage * (wOuter - 4)), hOuter - 4)\r\n        this._progressBarOuter.endFill()\r\n        this._runner._renderer.render(this._introScreen)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the introscreen elements.\r\n   * @param {String} text - The text which must be updated.\r\n   */\r\n  _updateIntroScreen (text) {\r\n    // Update the introscreen elements.\r\n    if (this._active === true) {\r\n      const center = this.screenCenter()\r\n      this._statusText.text = text.replace(/<br \\/>/g, '\\n').replace(/&#39;/g, \"'\").replace(/&#34;/g, '\"')\r\n      this._statusText.position.set(\r\n        center.x - this._statusText.width / 2,\r\n        center.y\r\n      )\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /** Show the pause screen. */\r\n  _showPauseScreen () {\r\n    // Open Sesame is running, request subject to continue of to stop.\r\n    if (isFunction(this._runner._confirm)) {\r\n      this._runner._confirm('Esc key pressed, pausing experiment.',\r\n        'Please press ok the resume the experiment otherwise cancel to stop.',\r\n        this._onPauseScreenConfirm.bind(this), this._onPauseScreenCancel.bind(this))\r\n    }\r\n  }\r\n\r\n  /** Event handler to respond to dialog ok conmfirmation. */\r\n  _onPauseScreenConfirm () {\r\n    // Restore the old state.\r\n    this._runner._events._state = this._runner._events._statePrevious\r\n  }\r\n\r\n  /** Event handler to respond to dialog cancel confirmation. */\r\n  _onPauseScreenCancel () {\r\n    // Exit the experiment.\r\n    this._runner._finalize()\r\n  }\r\n}\r\n","/** Class representing a client session information collector. */\r\nexport default class Session {\r\n  /**\r\n     * Create an session object which stores information about the client system.\r\n     * @param {Object} runner - The runner class to which the session belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._date = null // Date information container.\r\n    this._runner = runner // Parent runner attached to the session object.\r\n    this._session = null // Session information container.\r\n  }\r\n\r\n  /** Initialize the session. */\r\n  _initialize () {\r\n    // Update the loader text.\r\n    this._runner._screen._updateIntroScreen('Retrieving session information.')\r\n\r\n    // Get the session information.\r\n    this._getSessionInformation()\r\n  }\r\n\r\n  /** Retrieve session information from the client. */\r\n  _getSessionInformation () {\r\n    // Get the session information from the client system.\r\n    this._date = new Date()\r\n    this._session = {\r\n      browser: {\r\n        codename: navigator.appCodeName,\r\n        name: navigator.appName,\r\n        version: navigator.appVersion\r\n      },\r\n      date: {\r\n        startdate: ('0' + this._date.getDate()).slice(-2) + '-' + ('0' + this._date.getMonth()).slice(-2) + '-' + ('0' + this._date.getFullYear()).slice(-2),\r\n        starttime: ('0' + this._date.getHours()).slice(-2) + ':' + ('0' + this._date.getMinutes()).slice(-2) + ':' + ('0' + this._date.getSeconds()).slice(-2),\r\n        startdateUTC: ('0' + this._date.getUTCDate()).slice(-2) + '-' + ('0' + this._date.getUTCMonth()).slice(-2) + '-' + ('0' + this._date.getUTCFullYear()).slice(-2)\r\n      },\r\n      experiment: {\r\n        debug: 0,\r\n        parameters: 0,\r\n        pilot: 0,\r\n        taskname: 0,\r\n        taskversion: 0\r\n      },\r\n      screen: {\r\n        availableHeight: screen.availHeight,\r\n        availableWidth: screen.availWidth,\r\n        colorDepth: screen.colorDepth,\r\n        height: screen.height,\r\n        outerheight: window.outerheight,\r\n        outerwidth: window.outerwidth,\r\n        pixelDepth: screen.pixelDepth,\r\n        screenX: window.screenX,\r\n        screenY: window.screenY,\r\n        width: screen.width\r\n      },\r\n      system: {\r\n        os: navigator.platform\r\n      }\r\n    }\r\n  }\r\n}\r\n","import pako from 'pako'\nimport isFunction from 'lodash/isFunction'\nimport untar from 'js-untar'\n\n/**\n * FileStreamer makes it possible to asynchronously stream a file to another reader\n *\n * @class FileStreamer\n */\nclass FileStreamer {\n  constructor (file, chunkSize = 64 * 1024) {\n    this.file = file\n    this.offset = 0\n    this.chunkSize = chunkSize // bytes\n    this.rewind()\n  }\n\n  rewind () {\n    this.offset = 0\n  }\n\n  isEndOfFile () {\n    return this.offset >= this.getFileSize()\n  }\n\n  readBlock () {\n    const fileReader = new FileReader()\n    const blob = this.file.slice(this.offset, this.offset + this.chunkSize)\n\n    return new Promise((resolve, reject) => {\n      fileReader.onloadend = (event) => {\n        const target = (event.target)\n        if (target.error) {\n          return reject(target.error)\n        }\n\n        this.offset += target.result.byteLength\n\n        resolve({\n          data: target.result,\n          progress: Math.min(this.offset / this.file.size, 1)\n        })\n      }\n\n      fileReader.readAsArrayBuffer(blob)\n    })\n  }\n\n  getFileSize () {\n    return this.file.size\n  }\n}\n\n/**\n * Decompresses a cpmpressed experiment file\n *\n * @export\n * @param {File} zipfile The file to extract\n * @param {function} onProgress Function to be called during extraction progress. Receives proportion complete\n * @returns array of Files\n */\nexport async function decompress (zipfile, onProgress) {\n  const fs = new FileStreamer(zipfile)\n  const inflator = new pako.Inflate()\n  let block\n\n  while (!fs.isEndOfFile()) {\n    block = await fs.readBlock()\n    inflator.push(block.data, fs.isEndOfFile())\n    if (inflator.err) {\n      throw inflator.msg\n    }\n    if (isFunction(onProgress)) onProgress(block.progress)\n  }\n  return untar(inflator.result.buffer)\n}\n\n/**\n * Converts a File/Blob to a string representation\n *\n * @export\n * @param {File} inputFile The file to convert\n * @returns string\n */\nexport function readFileAsText (inputFile) {\n  const temporaryFileReader = new FileReader()\n\n  return new Promise((resolve, reject) => {\n    temporaryFileReader.onerror = () => {\n      temporaryFileReader.abort()\n      reject(new DOMException('Problem parsing input file.'))\n    }\n\n    temporaryFileReader.onload = () => {\n      resolve(temporaryFileReader.result)\n    }\n    temporaryFileReader.readAsText(inputFile)\n  })\n}\n\n/**\n * Returns current host as detected by browser\n *\n * @returns String\n */\nfunction getHost () {\n  return window.location.origin !== 'null' ? window.location.origin : 'http://nodejs.test'\n}\n\n/**\n * Checks if the passed string contains a valid URL\n *\n * @export\n * @param {String} str The string to check\n * @returns boolean\n */\nexport function parseUrl (str) {\n  try {\n    const host = getHost()\n    return new URL(str, host)\n  } catch (e) {\n    return false\n  }\n}\n","import WebFont from 'webfontloader'\r\nimport {\r\n  decompress,\r\n  readFileAsText,\r\n  parseUrl\r\n} from '../util/files'\r\nimport isString from 'lodash/isString'\r\nimport isObject from 'lodash/isObject'\r\nimport axios from 'axios'\r\n\r\n/** Class representing a information stream processor. */\r\nexport default class Transfer {\r\n  /**\r\n   * Create a transfer object used for streaming information.\r\n   * @param {Object} runner - The runner class to which the transfer belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._runner = runner // Parent runner attached to the transfer object.\r\n  }\r\n\r\n  /**\r\n   * Read an osexp file.\r\n   * @param {Object|String} source - A file object or a String containing the experiment or a download URL.\r\n   */\r\n  async _readSource (source) {\r\n    // Check type of object.\r\n    if (!isString(source) && (!isObject(source) || source.constructor !== File)) {\r\n      throw new Error('No osexp source file defined.')\r\n    }\r\n\r\n    // This var will hold the OS script after parsing\r\n    let osScript\r\n\r\n    if (source.constructor === File) {\r\n      // Source is a local file.\r\n      try {\r\n        osScript = await this._readOsexpFromFile(source)\r\n      } catch (e) {\r\n        throw new Error(`Could not read local osexp, ${e}`)\r\n      }\r\n    } else if (isString(source)) {\r\n      // Check if the source string is an URL\r\n      const uri = parseUrl(source)\r\n\r\n      if (uri !== false) {\r\n        // Attempt to download and load the remote experiment\r\n        try {\r\n          const remoteFile = await this.fetch(uri.href)\r\n          osScript = await this._readOsexpFromFile(remoteFile)\r\n        } catch (e) {\r\n          throw new Error(`Could not read remote osexp, ${e}`)\r\n        }\r\n      } else {\r\n        try {\r\n          osScript = this._processScript(source)\r\n        } catch (e) {\r\n          throw new Error(`Could not read source string, ${e}\\n\\n${source}`)\r\n        }\r\n      }\r\n    }\r\n    // Read in and generate the webfonts\r\n    await this._readWebFonts()\r\n\r\n    return osScript\r\n  }\r\n\r\n  /**\r\n   * Reads in an osexp from a string\r\n   *\r\n   * @param {File|String} osexpFile The osexp to parse, can be a string or a File containing a string\r\n   * @returns boolean\r\n   * @memberof Transfer\r\n   */\r\n  async _readExpFile (osexp) {\r\n    if ([File, Blob].includes(osexp.constructor)) {\r\n      osexp = await readFileAsText(osexp)\r\n    }\r\n    return this._processScript(osexp)\r\n  }\r\n\r\n  /**\r\n   * Reading and extracting an osexp file from a file location.\r\n   * @param {Object} file - A file object containing the experiment.\r\n   */\r\n  async _readOsexpFromFile (osexpFile) {\r\n    try {\r\n      return await this._readExpFile(osexpFile)\r\n    } catch (e) {\r\n      this._runner._debugger.addMessage(`Could not read osexp file as plain text: ${e.message}.\\nFile is probably binary`)\r\n    }\r\n    // Reading and extracting an osexp file from a file location.\r\n    const files = await decompress(\r\n      osexpFile,\r\n      (progress) => this._runner._screen._updateProgressBar(progress)\r\n    )\r\n\r\n    // Find the script in the array of extracted files. Throw an error if it isn't found.\r\n    const expFileIndex = files.findIndex((item) => item.name === 'script.opensesame')\r\n    if (expFileIndex === -1) throw new Error('Could not locate experiment script')\r\n    // Pop the script out of the file array and proccess it\r\n    const expFile = files.splice(expFileIndex, 1)[0]\r\n    const script = await this._readExpFile(expFile.blob)\r\n\r\n    // According to the zlib convention followed by the pako library we use to decompress\r\n    // the osexp file, files have a type of 0, so filter these out.\r\n    const poolFiles = files.filter(\r\n      (item) => item.type === '0'\r\n    )\r\n    // Process the file pool items\r\n    await this._processOsexpPoolItems(poolFiles)\r\n    return script\r\n  }\r\n\r\n  /**\r\n   * Reads an osexp file from a remote server, if its type is indicated to be\r\n   * 'text/plain' (opposed to being zipped)\r\n   * @param  {string} url The url at which the osexp can be found\r\n   * @return {void}\r\n   */\r\n  async fetch (url) {\r\n    const response = await axios.get(url, {\r\n      responseType: 'blob',\r\n      onDownloadProgress: (event) => {\r\n        if (event.lengthComputable) {\r\n          this._runner._screen._updateProgressBar(event.loaded / event.total)\r\n        }\r\n      }\r\n    })\r\n    let res\r\n    if (/Edge/.test(navigator.userAgent)) {\r\n      res = new Blob([response.data])\r\n      res.name = 'downloaded.osexp'\r\n    } else {\r\n      res = new File([response.data], 'downloaded.osexp')\r\n    }\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * Process an osexp script\r\n   * @param  {string} contents - The script contents\r\n   * @return {boolean} - True if script was successfully processed, false otherwise\r\n   */\r\n  _processScript (contents) {\r\n    if (contents.substr(0, 3) !== '---') {\r\n      throw new Error('Specified script file is not valid OpenSesame script')\r\n    }\r\n\r\n    // Disable the progressbar.\r\n    this._runner._screen._updateProgressBar(100)\r\n    // Set the script paramter.\r\n    // this._runner._script = contents\r\n    return contents\r\n  }\r\n  \r\n  /**\r\n   * Asynchronously iterate over file pool files and generate items for them.\r\n   *\r\n   * @param {array} poolFiles The array containing file pool files\r\n   * @returns void\r\n   * @memberof Transfer\r\n   */\r\n  async _processOsexpPoolItems (poolFiles) {\r\n    // Async iterator that handles each file in the poolFiles array\r\n    const asyncIterator = {\r\n      currentIndex: 0,\r\n      next () { // All the action happens here\r\n        const currentFile = poolFiles[this.currentIndex]\r\n\r\n        // If currentFile is undefined, then the array has been depleted and all\r\n        // files have been processed. This ends the async iteration properly\r\n        if (!currentFile) {\r\n          return {\r\n            value: undefined,\r\n            done: true\r\n          }\r\n        }\r\n\r\n        // Generate the item.\r\n        const item = {\r\n          data: null,\r\n          folder: currentFile.name.match(/(.*)[/\\\\]/)[1] || '',\r\n          name: currentFile.name.replace(/^.*[\\\\/]/, '').replace(\r\n            /U\\+([0-9A-F]{4})/g, (whole, group1) => {\r\n              // Parse encoded characters back to their unicode counterparts\r\n              return String.fromCharCode(parseInt(group1, 16))\r\n            }\r\n          ),\r\n          ext: currentFile.name.substr(currentFile.name.lastIndexOf('.') + 1).toLowerCase(),\r\n          size: currentFile.size,\r\n          type: 'undefined'\r\n        }\r\n\r\n        if (['jpg', 'jpeg', 'png', 'bmp'].includes(item.ext)) {\r\n          // Create a new file pool mage item.\r\n          const img = new Image()\r\n          img.src = currentFile.getBlobUrl()\r\n          item.data = img\r\n          item.type = 'image'\r\n        } else if (['wav', 'ogg', 'mp3'].includes(item.ext)) {\r\n          item.data = new Audio()\r\n          item.type = 'audio'\r\n          // Safari gives a NotSupportedError when trying to play sound from\r\n          // a blob URL. As a workaround, here the blob is converted to a\r\n          // data URI. The data type is explicitly changed to audio, and the\r\n          // result is assigned to the audio source. See also:\r\n          // - <https://github.com/open-cogsci/osweb/issues/96>\r\n          let reader = new FileReader()\r\n          reader.onload = ((e) => {\r\n            item.data.src = e.target.result.replace(\r\n              'data:application/octet-stream', 'data:audio/' + item.ext)\r\n            }\r\n          )\r\n          reader.readAsDataURL(currentFile.blob)\r\n        } else if (['ogv', 'mp4', 'm4v'].includes(item.ext)) {\r\n          const ado = document.createElement('VIDEO')\r\n          ado.src = currentFile.getBlobUrl()\r\n          item.data = ado\r\n          item.type = 'video'\r\n        } else if (['csv','txt','md'].includes(item.ext)) {\r\n          item.type = 'text'\r\n          currentFile.blob.text().then(text => (item.data = text))\r\n        }\r\n        // Increment the counter.\r\n        this.currentIndex++\r\n\r\n        return {\r\n          value: item,\r\n          done: false\r\n        }\r\n      },\r\n      // for-await calls this on whatever it's passed, so\r\n      // iterators tend to return themselves.\r\n      [Symbol.asyncIterator] () {\r\n        return this\r\n      }\r\n    }\r\n\r\n    // Iterate over the file pool items\r\n    for await (const item of asyncIterator) {\r\n      // Add the item to the virtual pool.\r\n      this._runner._pool.add(item)\r\n\r\n      // Update the progress bar.\r\n      this._runner._screen._updateProgressBar(asyncIterator.currentIndex / poolFiles.length)\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Read in webfonts\r\n   *\r\n   * @returns Promise\r\n   * @memberof Transfer\r\n   */\r\n  async _readWebFonts () {\r\n    // Update the introscreen\r\n    this._runner._screen._updateProgressBar(100)\r\n    this._runner._screen._updateIntroScreen('Retrieving required webfonts.')\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Load the required fonts using webfont.\r\n      WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Droid Serif', 'Droid Sans Mono'],\r\n          urls: ['//fonts.googleapis.com/css?family=Droid Sans',\r\n            '//fonts.googleapis.com/css?family=Droid Serif',\r\n            '//fonts.googleapis.com/css?family=Droid Sans Mono'\r\n          ]\r\n        },\r\n        active: () => resolve(),\r\n        inactive: () => reject(new Error('Could not load webfonts'))\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Writing experiment result data to a location.\r\n   * @param {String} target - An addres to store result data.\r\n   * @param {Object} resultData - The result data itself to store.\r\n   */\r\n  _writeDataFile (target, resultData) {\r\n    // Check if the target and resultData are defined.\r\n    if ((target !== null) && (resultData !== null)) {\r\n      // Add the data as a form element.\r\n      var data = new FormData()\r\n      data.append('data', resultData.toString())\r\n\r\n      // Create the request.\r\n      var xhr = new XMLHttpRequest()\r\n      xhr.open('post', target + '?file=subject-' + this._runner._experiment.vars.subject_nr, true)\r\n\r\n      // Send the actual data.\r\n      return xhr.send(data)\r\n    }\r\n  }\r\n}\r\n","/** Class representing an item stack. */\r\nexport default class ItemStack {\r\n  /**\r\n   * Create an stack array for running items.\r\n   * @param {Object} runner - The runner to which the item stack belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._items = [] // Container for all items.\r\n    this._runner = runner // Parent runner attached to the item stack class.\r\n  }\r\n\r\n  /** Clear the entire item stack. */\r\n  clear () {\r\n    // Clears the stack.\r\n    this._items = []\r\n  }\r\n\r\n  /**\r\n   * Push a new item onto the item stack.\r\n   * @param {Object} item - The item to add to the item stack.\r\n   * @param {String} phase - The phase in which the stack exists.\r\n   */\r\n  push (item, phase) {\r\n    // Create the stack item.\r\n    const stackItem = {\r\n      item: item,\r\n      phase: phase\r\n    }\r\n\r\n    // Push the item onto the stack.\r\n    this._items.push(stackItem)\r\n  }\r\n\r\n  /**\r\n   * Pops the last item from the stack.\r\n   * @return {Object} - The last added item from the stack.\r\n   */\r\n  pop () {\r\n    // Pops the last item from the stack.\r\n    return this._items.pop()\r\n  }\r\n}\r\n","// This itemClasses variable is a temporary solution. We should think of a simpler\r\n// method of converting string names (e.g. keyboard_response) to the associated\r\n// class names (e.g. KeyboardResponse), without relying on eval.\r\nimport {\r\n  itemClasses\r\n} from '../system/constants.js'\r\n\r\n/** Class representing an item store. */\r\nexport default class ItemStore {\r\n  /**\r\n   * Create an item store for all OpenSesame items.\r\n   * @param {Object} runner - The runner to which the item store belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set the class private properties.\r\n    this._items = {} // All the unique items in the item store.\r\n    this._runner = runner // Parent runner attached to the item store.\r\n  }\r\n\r\n  /** Clear all the items in the store. */\r\n  _clean_up () {\r\n    // Clear the items.\r\n    this._items = {}\r\n  }\r\n\r\n  /**\r\n   * Checks of the classname is defined within the osweb namespace.\r\n   * @param {String} className - name of the class to check.\r\n   * @return {Boolean} - True if the class is valid within the opsweb context.\r\n   */\r\n  _isClass (className) {\r\n    // Return true if the classname is found in the item classes.\r\n    return (className in itemClasses)\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame element to a sketchpad item.\r\n   * @param {String} type -type of the element to be created.\r\n   * @param {Object} sketchpad - sketchpad item to which the item belongs.\r\n   * @param {String} script - string definition of the ites.\r\n   * @return {Object} - The item which wass created.\r\n   */\r\n  _newElementClass (type, sketchpad, string) {\r\n    // Create the element.\r\n    var element = new itemClasses[type](sketchpad, string)\r\n\r\n    // Return the element\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame item to the experiment.\r\n   * @param {String} type -type of the item to be created.\r\n   * @param {Object} experiment - experiment item to which the item belongs.\r\n   * @param {String} name - name of the item to be created.\r\n   * @param {String} script - string definition of the ites.\r\n   * @return {Object} - The item which was created.\r\n   */\r\n  _newItemClass (type, experiment, name, script) {\r\n    // Create the element.\r\n    var element = new itemClasses[type](experiment, name, script)\r\n\r\n    // Set the type of the item.\r\n    element.type = type\r\n\r\n    // Return the element\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame widget to the experiment.\r\n   * @param {String} type -type of the widget to be created.\r\n   * @param {Object} form - form to which the widget belongs.\r\n   * @param {String} variables - variabled belonging to the widget.\r\n   * @return {Object} - The widget which was created.\r\n   */\r\n  _newWidgetClass (type, form, variables) {\r\n    // Create the widget.\r\n    var widget = new itemClasses[type + '_widget'](form, variables)\r\n\r\n    // Return the element\r\n    return widget\r\n  }\r\n\r\n  /**\r\n   * Executes the prepare and the run phase of an item.\r\n   * @param {String} name - name of the item to prepare and run\r\n   * @param {String} parent - parent of the item.\r\n   */\r\n  execute (name, parent) {\r\n    // Prepare the item.\r\n    this.prepare(name, parent)\r\n    // Remove the prepare phase call of the item from the stack\r\n    this._runner._itemStack.pop()\r\n    // Run the item.\r\n    this.run(name, parent)\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the items in the store.\r\n   * @return {Array} - An array containing all the items.\r\n   */\r\n  items () {\r\n    // Create a list o keys.\r\n    var items = []\r\n    for (var key in this._items) {\r\n      items.push([key, this._items[key]])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return items\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the names of the items in the store.\r\n   * @return {Array} - An array containing all the names.\r\n   */\r\n  keys () {\r\n    // Create a list o keys.\r\n    var keys = []\r\n    for (var key in this._items) {\r\n      keys.push(key)\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return keys\r\n  }\r\n\r\n  /**\r\n   * Create a new OpenSesame item and add it to the item store.\r\n   * @param {String} type - type of item to add.\r\n   * @param {String} name - unique name of the item to add.\r\n   * @param {String} script - script containing definitions of the item.\r\n   */\r\n  newItem (type, name, script) {\r\n    // Check if the element is part of the osweb name space\r\n    if (this._isClass(type) === true) {\r\n      // Add the new item as property of items.\r\n      this._items[name] = this._newItemClass(type, this._runner._experiment, name, script)\r\n\r\n      return this._items[name]\r\n    } else {\r\n      // Unknown class definition, show error message.\r\n      this._runner._debugger.addError('The item \"' + type + '\" is not yet supported by osweb', {\r\n        notify: true,\r\n        url: 'https://osdoc.cogsci.nl/manual/osweb/osweb/#supported-functionality'\r\n      })\r\n      this._runner.exit()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes the prepare phase of an item, and updates the item stack.\r\n   * @param {String} name - name of the item to prepare.\r\n   * @param {String} parent - parent of the item.\r\n   */\r\n  prepare (name, parent) {\r\n    // Add item to the stack.\r\n    this._runner._itemStack.push(name, 'prepare')\r\n\r\n    // Prepare the item.\r\n    this._items[name]._parent = parent\r\n    this._items[name].prepare()\r\n  }\r\n\r\n  /**\r\n   * Executes the run phase of an item, and updates the item stack.\r\n   * @param {String} name - name of the item to run.\r\n   * @param {String} pParent - parent of the item.\r\n   */\r\n  run (name, parent) {\r\n    // Set the current and its parent item.\r\n    this._runner._events._currentItem = this._items[name]\r\n    this._runner._events._currentItem._parent = parent\r\n\r\n    // Executes the run phase of an item, and updates the item stack.\r\n    this._runner._itemStack.push(name, 'run')\r\n    this._items[name].run()\r\n  }\r\n\r\n  /**\r\n   * Create a valid name for an item within the OpenSesame context.\r\n   * @param {String} itemType - type of the item for which a name must be build.\r\n   * @param {String} suggestion - An suggestion how to build up the name.\r\n   * @return {String} - A valid string name for the given item.\r\n   */\r\n  valid_name (itemType, suggestion) {\r\n    // Check the optional parameters.\r\n    suggestion = (typeof suggestion === 'undefined') ? null : suggestion\r\n\r\n    let name\r\n    if (suggestion === null) {\r\n      name = 'new_' + itemType\r\n    } else {\r\n      name = this._runner._experiment.syntax.sanitize(suggestion, true, false)\r\n    }\r\n\r\n    // Create a unique name.\r\n    var i = 1\r\n    var uniqueName = name\r\n    while (Object.prototype.hasOwnProperty.call(this._items, uniqueName) === true) {\r\n      uniqueName = name + '_' + String(i)\r\n      i++\r\n    }\r\n\r\n    // Return function result\r\n    return uniqueName\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the values (items) in the store.\r\n   * @return {Array} - An array containing all the items.\r\n   */\r\n  values () {\r\n    // Create a list o keys.\r\n    var values = []\r\n    for (var key in this._items) {\r\n      values.push(this._items[key])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return values\r\n  }\r\n}\r\n","/** Class representing a file pool. */\r\nexport default class FilePoolStore {\r\n  /**\r\n   * Create a file store object for all stimuli files.\r\n   * @param {Object} runner - The runner to which the file store belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._items = [] // Container for all pool items.\r\n    this._runner = runner // Parent runner attached to the file pool.\r\n  }\r\n\r\n  /** Clear all the items in the store. */\r\n  _clean_up () {\r\n    // Clear the items.\r\n    this._items = []\r\n  }\r\n\r\n  /**\r\n   * General function for adding an item to the pool.\r\n   * @param {Object} item - The item which is added to the pool.\r\n   */\r\n  add (item, new_name) {\r\n    // Check parameter new_name.\r\n    new_name = (typeof new_name === 'undefined') ? null : new_name\r\n\r\n    // Set the new name of the item.\r\n    if (new_name !== null) {\r\n      item.name = new_name\r\n    }\r\n\r\n    // Add the item to the pool.\r\n    this._items.push(item)\r\n\r\n    // Link the item as property\r\n    this[item.name] = item\r\n  }\r\n\r\n  /**\r\n   * Should return the fallback folder bunt osweb this is not functional.\r\n   * @return {null} - always null due to the nature of osweb.\r\n   */\r\n  fallback_folder () {\r\n    // Always returns null because this function is not possible.\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the files in the store.\r\n   * @return {Array} - An array containing all the files.\r\n   */\r\n  files () {\r\n    // Create a list o keys.\r\n    var files = []\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      files.push(this._items[i])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return files\r\n  }\r\n\r\n  /**\r\n   * Renames a file in the pool folder.\r\n   * @param {String} old_path - The olod file name.\r\n   * @param {String} new_path - The new file name.\r\n   */\r\n  rename (old_path, new_path) {\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      // Check for the old_name.\r\n      if (this._items[i].name === old_path) {\r\n        // Set the new property name.\r\n        this[new_path] = this._items[i]\r\n\r\n        // Remove the old property name.\r\n        delete this[old_path]\r\n\r\n        // Set the new name.\r\n        this._items[i].name = new_path\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates and returns the total size in bytes of all thje fioles.\r\n   * @return {Number} - The size of all files in bytes.\r\n   */\r\n  size () {\r\n    // Create a list of keys.\r\n    var size = 0\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      size = size + this._items[i].size\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return size\r\n  }\r\n}\r\n","import {\r\n  isNumber,\r\n  toNumber,\r\n  isObject,\r\n  isString\r\n} from 'lodash'\r\n\r\n/** Class representing a syntax checker. */\r\nexport default class Syntax {\r\n  /**\r\n   * Create a syntax checker within OpenSesame.\r\n   * @param {Object} runner - The runner to which the syntax checker belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._runner = runner // Parent runner attached to the syntax class.\r\n    this.isNumber = isNumber // attach lodash function to class;\r\n  }\r\n\r\n  /**\r\n   * Compile a os condition for further processing.\r\n   * @param {String} cnd - The condition to compile.\r\n   * @param {Boolean} bytecode - The condition is converted to a python AST tree.\r\n   * @return {String} - The compiled condition.\r\n   */\r\n  compile_cond (cnd, bytecode) {\r\n    // Check for conditional paramters.\r\n    bytecode = (typeof bytecode === 'undefined') ? true : bytecode\r\n\r\n    if (cnd.toLowerCase() === 'always') {\r\n      return true\r\n    } else if (cnd.toLowerCase() === 'never') {\r\n      return false\r\n    } else {\r\n      if (cnd[0] === '=') {\r\n        cnd = cnd.substr(1)\r\n      } else {\r\n        cnd = this.remove_quotes(cnd)\r\n        // Scan for literals (strings, ßnumbers, etc).\r\n        cnd = cnd.replace(/(?!(?:and|or|not)\\b)(?:\".*?\"|'.*?'|\\[(?:\\w+?|=.+)\\]|\\b\\w+\\b)/g, (match, offset, string) => {\r\n          if (string[offset] === '[' && string[offset + match.length - 1] === ']') {\r\n            // Check if match is a variable.\r\n            if (string[offset - 1] === '\\\\' && string[offset - 2] !== '\\\\') {\r\n              // Check if the current match is escaped, and simpl\\w+?|=.+y return it untouched if so.\r\n              return `\"${match}\"`\r\n            }\r\n            // Check if the variable contains a Python expression\r\n            if (match[1] === '=') {\r\n              const expression = match.substring(2, match.length - 1)\r\n              const ast = this._runner._pythonParser._parse(expression)\r\n              return this._runner._pythonParser._run_statement(ast)\r\n            }\r\n\r\n            // Return the var. notation otherwise\r\n            const content = match.substring(1, match.length - 1)\r\n            return `var.${content}`\r\n          } else if (['\"', '\\''].includes(string[offset]) &&\r\n            string[offset] === string[offset + match.length - 1]) {\r\n            // Check if match is between quotes. Don't do anything then\r\n            return match\r\n          } else if (!Number.isNaN(Number(match))) {\r\n            return Number(match)\r\n          } else {\r\n            return `\"${match}\"`\r\n          }\r\n        })\r\n\r\n        // Handle operators.\r\n        cnd = cnd.replace(/([^!<>=\\-+*])(=)([^=])/g, '$1==$3')\r\n      }\r\n    }\r\n    if (bytecode === true) {\r\n      return this._runner._pythonParser._parse(cnd)\r\n    } else {\r\n      return cnd\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts a string to a float or integer if possible.\r\n   * @param {String|Number} value -The variable to convert to a number.\r\n   * @return {String|Number} - An number or float if variable could be converted, original value otherwise.\r\n   */\r\n  convert_if_numeric (value) {\r\n    if (value === '')\r\n      return value\r\n    var result = Number(value)\r\n    return Number.isNaN(result) ? value : result\r\n  }\r\n\r\n  /**\r\n   * Counts the quotes occuring inside the provided string.\r\n   * @param {String} line - The string line to count the quotes in.\r\n   * @return {Number} - The number of quotes counted.\r\n   */\r\n  count_quotes (line) {\r\n    var res = 0\r\n    var in_entity = false\r\n    for (var i = 0; i < line.length; i++) {\r\n      if ((line[i] === '\\\\' && !in_entity) || in_entity) { // reverse the flag\r\n        in_entity = !in_entity\r\n      } else if (line[i] === '\"' && !in_entity) { // an unescaped \"\r\n        res += 1\r\n      }\r\n    }\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * Evaluate a given text with optional variable definitions.\r\n   * @param {Boolean|Number|Object|String} txt - The text to evaluate.\r\n   * @param {Object} vars - The variables used for evaluation.\r\n   * @param {Boolean} addQuotes - The add quotes toggle.\r\n   * @return {Boolean|Number|Object|String} - The result of the evaluated text.\r\n   */\r\n  eval_text (text, vars, addQuotes = false) {\r\n    // if pTxt is an object then it is a parsed python expression.\r\n    if (isObject(text)) return this._runner._pythonParser._run_statement(text)\r\n    // if pTxt is already a number simply return it\r\n    if (isNumber(text)) return text\r\n    // Try to convert text to a number. If this succeeds return it.\r\n    if ((text !== '') && !isNaN(toNumber(text))) return toNumber(text)\r\n    text = this.escapeBrackets(text)\r\n    // First, parse the regular variables. These should be parsed recursively\r\n    // to allow for [[nested]variables].\r\n    const reNormal = /\\[(?!=)(\\w+?)\\]/g\r\n    while (text.search(reNormal) >= 0) {\r\n      text = text.replace(reNormal, (match, content, offset, string) => {\r\n        content = this.unescapeBrackets(content)\r\n        let value\r\n        try {\r\n          if ((typeof vars === 'undefined') || (vars === null) || (typeof vars[content] === 'undefined')) {\r\n            value = this._runner._experiment.vars[content]\r\n          } else {\r\n            value = vars[content]\r\n          }\r\n          // Value could still be an expression, so evaluate again\r\n          if (typeof value === 'undefined') {\r\n            throw new ReferenceError(`Variable '${content}' not present in var store`)\r\n          }\r\n          if (isString(value)) {\r\n            if (value !== '') {\r\n              value = this.eval_text(value, vars, addQuotes)\r\n            }\r\n          }\r\n        } catch (err) {\r\n          this._runner._debugger.addError(`Could not resolve variable '${content}': ${err.message}`)\r\n          throw err\r\n        }\r\n        if (addQuotes === true) {\r\n          // Temporary hack for string types.\r\n          return isString(value) ? `\"${value}\"` : value\r\n        }\r\n        return value\r\n      })\r\n    }\r\n    // Next, parse the inline-Python defintions. Those should only be parsed\r\n    // once, not recursively, because they may contain literal [brackets]\r\n    const rePython = /\\[=(.+?)\\]/g\r\n    text = text.replace(rePython, (match, content, offset, string) => {\r\n        // Check if contents of [] start with an =. In this case they should be\r\n        // evaluated as a Python statement\r\n        content = this.unescapeBrackets(content)\r\n        const ast = this._runner._pythonParser._parse(content)\r\n        return this._runner._pythonParser._run_statement(ast)\r\n    })    \r\n    // Try to convert the result to a number again. If this succeeds return it.\r\n    if (text !== '') {\r\n      const nr = toNumber(text)\r\n      if (!isNaN(nr)) return nr\r\n    }\r\n    // Check if content has additional quotes\r\n    return this.strip_slashes(this.unescapeBrackets(text))\r\n  }\r\n\r\n  /**\r\n   * Wraps and escapes a text so that it can safely be embedded in a\r\n        command string. For example:\r\n        He said: \"hi\"\r\n        would become:\r\n        \"He said: \\\"hi\\\"\"\r\n   * @param  {string} s The string to wrap\r\n   * @return {string}   The wrapped string\r\n   */\r\n  safe_wrap (s) {\r\n    // If s is a number, return untouched.\r\n    if (!isNumber(s)) {\r\n      // see if there are any non-alphanumeric characters.\r\n      // Wrap the value in quotes if so.\r\n      if (/[^a-z0-9_]/i.test(s)) {\r\n        s = '\"' + this.add_slashes(s) + '\"'\r\n      }\r\n    } else {\r\n      s = Number(s)\r\n    }\r\n    return s\r\n  }\r\n\r\n  /**\r\n   * Add escape slashes to the given string\r\n   * @param  {string} str The string to escape.\r\n   * @return {string}     The escaped string.\r\n   */\r\n  add_slashes (str) {\r\n    return str.replace(/\\\\/g, '\\\\\\\\')\r\n      // eslint-disable-next-line no-control-regex\r\n      .replace(/\\u0008/g, '\\\\b')\r\n      .replace(/\\t/g, '\\\\t')\r\n      .replace(/\\n/g, '\\\\n')\r\n      .replace(/\\f/g, '\\\\f')\r\n      .replace(/\\r/g, '\\\\r')\r\n      .replace(/'/g, '\\\\\\'')\r\n      .replace(/\"/g, '\\\\\"')\r\n  }\r\n\r\n  /**\r\n   * Strip escape slashes from the given string.\r\n   * @param {String} line - The string to strip from escape backslashes\r\n   * @return {String} - The stripped string.\r\n   */\r\n  strip_slashes (line) {\r\n    // Negative lookbehinds require ECMA2018, therefore we fall\r\n    // back to a more clunky technique\r\n    // return line.replace(/(?<!\\\\)\\\\(?=['\"\\\\])/mg, '')\r\n    return line.replace(/\\\\(?=['\"])/mg, '').replace(/\\\\\\\\/mg, '\\\\')\r\n  }\r\n  \r\n  /**\r\n   * Removes tab indentation from a script, if all lines are indented by a\r\n   * single tab.\r\n   * @param {String} script - A script\r\n   * @return {String} - A dedented script\r\n   */\r\n  dedent (script) {\r\n    const lines = script.split('\\n')\r\n    let dedented = []\r\n    for (const line of lines) {\r\n      if (line[0] !== '\\t') {\r\n        return script\r\n      }\r\n      dedented.push(line.slice(1))\r\n    }\r\n    return dedented.join('\\n')\r\n  }\r\n  \r\n  /**\r\n   * Extracts all multineline variable definitions from an OpenSesame script\r\n   * @param {String} script - The OpenSesame script of an item\r\n   * @return {Array} - An array of key, value mappings\r\n   */\r\n  parse_multiline_vars (script) {\r\n    const pattern = /__(\\w+)__\\n(.*?)\\n__end__/gms\r\n    let match\r\n    let vars = []\r\n    while ((match = pattern.exec(script)) !== null) {\r\n      vars[match[1]] = match[2]\r\n    }\r\n    return vars\r\n  }\r\n\r\n  /**\r\n   * Parses an instruction line of OpenSesame script\r\n   * @param {String} line - The line to parse\r\n   * @return {Array} - An array with command, list of arguments and an object with keyword arguments.\r\n   */\r\n  parse_cmd (line) {\r\n    // Check if quoted strings are properly closed.\r\n    if (this.count_quotes(line) % 2 !== 0) {\r\n      // Unequal number of quotes detected. Can't be right.\r\n      this._runner._debugger.addError('Invalid script definition, parsing error: ' + \" '\" + line + \"'\")\r\n    }\r\n\r\n    // Split the string line.\r\n    var tokens = this.split(line)\r\n    var cmd = tokens.shift()\r\n    var args = []\r\n    var kwargs = {}\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n      var value = tokens[i]\r\n      // Monster regex, splits into key/value pair.\r\n      let parsed = value.split(/(?:(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"))|(?:(\\w+)=(?:(?:(-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)|(\\w+))|(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")))/gm).filter(Boolean)\r\n      // This is a horrifying hack to deal with the fact that the regular\r\n      // expression above is not unicode-safe. This means that a single\r\n      // unquoted word is not seen as a word when it doesn't consist of ascii\r\n      // characters (e.g. text=λάθος). See also:\r\n      // - https://github.com/open-cogsci/osweb/issues/49\r\n      if (parsed.length === 1 && parsed[0].startsWith('text=')) {\r\n        parsed = ['text', parsed[0].slice(5)]\r\n      }\r\n      // parsed will have length 1 if the variable has no keyword, and will be\r\n      // of length 2 (split over the = symbol) if the variable had a keyword\r\n      if (parsed.length < 2) {\r\n        args.push(this.convert_if_numeric(this.sanitize(parsed[0])))\r\n      } else {\r\n        kwargs[parsed[0]] = this.convert_if_numeric(this.sanitize(parsed[1]))\r\n      }\r\n    }\r\n    return [cmd, args, kwargs]\r\n  }\r\n\r\n  create_cmd (cmd, args, kwargs) {\r\n    var result = cmd\r\n    if (typeof (args) !== 'undefined' && args instanceof Array && args.length > 0) {\r\n      for (var i = 0; i < args.length; i++) {\r\n        result += ' ' + this.safe_wrap(args[i])\r\n      }\r\n    }\r\n    if (typeof (kwargs) !== 'undefined' && args instanceof Object) {\r\n      for (var key in kwargs) {\r\n        result += ' ' + key + '=' + this.safe_wrap(kwargs[key])\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Remove additional quotes from a string line.\r\n   * @param {String} line - The string width additional quotes.\r\n   * @return {String} - Updated string.\r\n   */\r\n  remove_quotes (line) {\r\n    if (line === '\"\"') {\r\n      return ''\r\n    } else if ((line[0] === '\"') && (line[line.length - 1] === '\"')) {\r\n      return line.slice(1, line.length - 1)\r\n    } else if ((line[0] === \"'\") && (line[line.length - 1] === \"'\")) {\r\n      return line.slice(1, line.length - 1)\r\n    } else {\r\n      return line\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove invalid characters (notably quotes) from the string.\r\n   * @param {String} line - The string to restrecut.\r\n   * @param {Boolean} strict - If true use strict conversion (not implemented yet).\r\n   * @param {Boolean} allowVars -If true allow variable definitions in the string (not implemented yet).\r\n   * @return {String} - The restructured string.\r\n   */\r\n  sanitize (line, strict, allowVars) {\r\n    // Replace quotes.\r\n    line = line.replace(/^\"(.*(?=\"$))\"$/, '$1')\r\n\r\n    // Replace slashes and return result.\r\n    return this.strip_slashes(line)\r\n  }\r\n\r\n  /**\r\n   * Return an array with tokens ignoring whitespaces within.\r\n   * @param {String} line - line the line to split in tokens\r\n   * @return {Array} - The list of tokens\r\n   */\r\n  split (line) {\r\n    var result = line.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g)\r\n    return (result !== null) ? result : []\r\n  }\r\n\r\n  /**\r\n   * Replaces all escaped brackets by a placeholder string of the format\r\n   * `%%OPEN:1:%%`\r\n   * @param {String} text - The text to escape.\r\n   * @return {String} - The escaped text.\r\n   */\r\n  escapeBrackets (text) {\r\n    const result = text.replace(/\\\\+[[\\]]/g, (match, content, offset, str) => {\r\n      const NBrackets = match.length - 1\r\n      if (NBrackets % 2 === 1) {\r\n        const chartype = match[match.length - 1] === '[' ? 'OPEN' : 'CLOSE'\r\n        return `%%${chartype}:${NBrackets}:%%`\r\n      }\r\n      return match\r\n    })\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Replaces all placeholder strings by escaped brackets.\r\n   * `%%OPEN:1:%%`\r\n   * @param {String} text - The text to unescape.\r\n   * @return {String} - The unescaped text.\r\n   */\r\n  unescapeBrackets (text) {\r\n    const result = text.replace(/%%(OPEN|CLOSE):\\d+:%%/g, (match, content, offset, str) => {\r\n      const chartype = match.substr(2, 4) === 'OPEN' ? '[' : ']'\r\n      const i1 = match.indexOf(':') + 1\r\n      const i2 = match.lastIndexOf(':')\r\n      const nBrackets = parseInt(match.substr(i1, i2 - i1))\r\n      return Array(nBrackets).join('\\\\') + chartype\r\n    })\r\n    return result\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\n\r\n/** Class implementing a python math library. */\r\nexport default class PythonMath {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n\r\n    // Set class properties.\r\n    this.e = Math.E\r\n    this.pi = Math.PI\r\n  }\r\n\r\n  /** Initialization phase of the python_math class. */\r\n  _initialize () {\r\n    // Insert math library methods into the python interpreter.\r\n    filbert.pythonRuntime.imports.math = {}\r\n    filbert.pythonRuntime.imports.math.ceil = this.ceil\r\n    filbert.pythonRuntime.imports.math.copysign = this.copysign\r\n    filbert.pythonRuntime.imports.math.fabs = this.fabs\r\n    filbert.pythonRuntime.imports.math.factorial = this.factorial\r\n    filbert.pythonRuntime.imports.math.floor = this.floor\r\n    filbert.pythonRuntime.imports.math.fmod = this.fmod\r\n    filbert.pythonRuntime.imports.math.frexp = this.frexp\r\n    filbert.pythonRuntime.imports.math.fsum = this.fsum\r\n    filbert.pythonRuntime.imports.math.acos = this.acos\r\n    filbert.pythonRuntime.imports.math.asin = this.asin\r\n    filbert.pythonRuntime.imports.math.atan = this.atan\r\n    filbert.pythonRuntime.imports.math.atan2 = this.atan2\r\n    filbert.pythonRuntime.imports.math.cos = this.cos\r\n    filbert.pythonRuntime.imports.math.hypot = this.hypot\r\n    filbert.pythonRuntime.imports.math.sin = this.sin\r\n    filbert.pythonRuntime.imports.math.tan = this.tan\r\n    filbert.pythonRuntime.imports.math.e = this.e\r\n    filbert.pythonRuntime.imports.math.pi = this.pi\r\n  }\r\n\r\n  /** Import 'ceil' function for osweb script. */\r\n  ceil (x) {\r\n  }\r\n\r\n  /** Import 'copysign' function for osweb script. */\r\n  copysign (x, y) {\r\n  }\r\n\r\n  /** Import 'fabs' function for osweb script. */\r\n  fabs (x) {\r\n  }\r\n\r\n  /** Import 'factorial' function for osweb script. */\r\n  factorial (x) {\r\n  }\r\n\r\n  /** Import 'floor' function for osweb script. */\r\n  floor (x) {\r\n    return Math.floor(x)\r\n  }\r\n\r\n  /** Import 'fmod' function for osweb script. */\r\n  fmod (x, y) {\r\n  }\r\n\r\n  /** Import 'frexp' function for osweb script. */\r\n  frexp (x) {\r\n  }\r\n\r\n  /** Import 'fsum' function for osweb script. */\r\n  fsum (iterable) {\r\n  }\r\n\r\n  /** Import 'acos' function for osweb script. */\r\n  acos (x) {\r\n    return Math.acos(x)\r\n  }\r\n\r\n  /** Import 'asin' function for osweb script. */\r\n  asin (x) {\r\n    return Math.asin(x)\r\n  }\r\n\r\n  /** Import 'atan' function for osweb script. */\r\n  atan (x) {\r\n    return Math.atan(x)\r\n  }\r\n\r\n  /** Import 'atan2' function for osweb script. */\r\n  atan2 (y, x) {\r\n    return Math.atan2(y, x)\r\n  }\r\n\r\n  /** Import 'cos' function for osweb script. */\r\n  cos (x) {\r\n    return Math.cos(x)\r\n  }\r\n\r\n  /** Import 'hypot' function for osweb script. */\r\n  hypot (x, y) {\r\n  }\r\n\r\n  /** Import 'sin' function for osweb script. */\r\n  sin (x) {\r\n    return Math.sin(x)\r\n  }\r\n\r\n  /** Import 'tan' function for osweb script. */\r\n  tan (x) {\r\n    return Math.tan(x)\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\nimport Canvas from '../backends/canvas.js'\r\n\r\n/** Class implementing a python opensesame library. */\r\nexport default class PythonOpenSesame {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n  }\r\n\r\n  /** Initialization phase of the python_library class. */\r\n  _initialize () {\r\n    this._objects = {}\r\n\r\n    // Insert clock class into the python interpreter.\r\n    filbert.pythonRuntime.imports.clock = {}\r\n    filbert.pythonRuntime.imports.clock.sleep = this._runner._experiment.clock.sleep\r\n    filbert.pythonRuntime.imports.clock.time = this._runner._experiment.clock.time\r\n\r\n    // Insert log class into the python interpreter.\r\n    filbert.pythonRuntime.imports.log = {}\r\n    filbert.pythonRuntime.imports.log.close = this._runner._experiment._log.close\r\n    filbert.pythonRuntime.imports.log.open = this._runner._experiment._log.open\r\n    filbert.pythonRuntime.imports.log.write = this._runner._experiment._log.write\r\n    filbert.pythonRuntime.imports.log.write_vars = this._runner._experiment._log.write_vars\r\n\r\n    // Insert var class into the python interpreter.\r\n    filbert.pythonRuntime.imports.var = this._runner._experiment.vars\r\n    filbert.pythonRuntime.imports.var.get = this._runner._experiment.vars.get\r\n    filbert.pythonRuntime.imports.var.has = this._runner._experiment.vars.has\r\n    filbert.pythonRuntime.imports.var.set = this._runner._experiment.vars.set\r\n    filbert.pythonRuntime.imports.var.unset = this._runner._experiment.vars.unset\r\n\r\n    // Insert general opensesame methods into the python interpreter.\r\n    filbert.pythonRuntime.functions.reset_feedback = this._runner._experiment.reset_feedback\r\n    filbert.pythonRuntime.functions.set_subject_nr = this._runner._experiment.set_subject\r\n    filbert.pythonRuntime.functions.canvas = this.canvas\r\n    filbert.pythonRuntime.functions.copy_sketchpad = this.copy_sketchpad\r\n    filbert.pythonRuntime.functions.keyboard = this.keyboard\r\n    filbert.pythonRuntime.functions.mouse = this.mouse\r\n    filbert.pythonRuntime.functions.pause = this.pause\r\n    filbert.pythonRuntime.functions.set_subject_nr = this.set_subject_nr\r\n    filbert.pythonRuntime.functions.sometimes = this.sometimes\r\n    filbert.pythonRuntime.functions.synth = this.synth\r\n    filbert.pythonRuntime.functions.xy_circle = this.xy_circle\r\n    filbert.pythonRuntime.functions.xy_distance = this.xy_distance\r\n    filbert.pythonRuntime.functions.xy_from_polar = this.xy_from_polar\r\n    filbert.pythonRuntime.functions.xy_grid = this.xy_grid\r\n    filbert.pythonRuntime.functions.xy_random = this.xy_random\r\n    filbert.pythonRuntime.functions.xy_to_polar = this.xy_to_polar\r\n  }\r\n\r\n  /** Import 'canvas' function for osweb script. */\r\n  canvas (auto_prepare, style_args) {\r\n    return new Canvas(this._runner._experiment, auto_prepare, style_args)\r\n  }\r\n\r\n  /** Import 'copy_sketchpad' function for osweb script. */\r\n  copy_sketchpad (name) {\r\n  }\r\n\r\n  /** Import 'keyboard' function for osweb script. */\r\n  keyboard (resp_args) {\r\n  }\r\n\r\n  /** Import 'mouse' function for osweb script. */\r\n  mouse (resp_args) {\r\n  }\r\n\r\n  /** Import 'pause' function for osweb script. */\r\n  pause (test) {\r\n  }\r\n\r\n  /** Import 'sampler' function for osweb script. */\r\n  sampler (src, playback_args) {\r\n  }\r\n\r\n  /** Import 'set_response' function for osweb script. */\r\n  set_response (response, response_time, correct) {\r\n  }\r\n\r\n  /** Import 'sometimes' function for osweb script. */\r\n  sometimes (p) {\r\n  }\r\n\r\n  /** Import 'synth' function for osweb script. */\r\n  synth (osc, freq, length, attack, decay) {\r\n  }\r\n\r\n  /** Import 'xy_circle' function for osweb script. */\r\n  xy_circle (n, rho, phi0, pole) {\r\n  }\r\n\r\n  /** Import 'xy_distance' function for osweb script. */\r\n  xy_distance (x1, y1, x2, y2) {\r\n  }\r\n\r\n  /** Import 'xy_from_polar' function for osweb script. */\r\n  xy_from_polar (rho, phi, pole) {\r\n  }\r\n\r\n  /** Import 'xy_grid' function for osweb script. */\r\n  xy_grid (n, spacing, pole) {\r\n  }\r\n\r\n  /** Import 'xy_random' function for osweb script. */\r\n  xy_random (n, width, height, min_dist, pole) {\r\n  }\r\n\r\n  /** Import 'xy_to_polar' function for osweb script. */\r\n  xy_to_polar (x, y, pole) {\r\n  }\r\n}\r\n","import filbert from 'filbert'\n\n/** Class implementing a python random library. */\nexport default class PythonRandom {\n  /**\n     * Create a python AST runner.\n     * @param {Object} runner - The runner to which the library belongs.\n     */\n  constructor (runner) {\n    // Set class parameter properties.\n    this._runner = runner // Parent runner attached to the library.\n  }\n\n  /** Initialization phase of the python_library class. */\n  _initialize () {\n    // Insert math library methods into the python interpreter.\n    filbert.pythonRuntime.imports.random = {}\n    filbert.pythonRuntime.imports.random.random = this.random\n    filbert.pythonRuntime.imports.random.shuffle = this.shuffle\n  }\n\n  /** Import 'Random' function for osweb script. */\n  random () {\n    return Math.random()\n  }\n\n  /** Import 'Shuffle' function for osweb script. */\n  shuffle (x, random) {\n    // Fisher-Yates (aka Knuth) Shuffle.\n    var currentIndex = x.length; var temporaryValue; var randomIndex\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = x[currentIndex]\n      x[currentIndex] = x[randomIndex]\n      x[randomIndex] = temporaryValue\n    }\n    return x\n  }\n}\n","/** Class implementing a python string library. */\r\nexport default class PythonString {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n  }\r\n\r\n  /** Initialization phase of the python_library class. */\r\n  _initialize () {\r\n  }\r\n\r\n  /** Import 'capitalize' function for osweb script. */\r\n  capitalize () {\r\n  }\r\n\r\n  /** Import 'center' function for osweb script. */\r\n  center (width, fillchar) {\r\n  }\r\n\r\n  /** Import 'upper' function for osweb script. */\r\n  upper () {\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\nimport PythonMath from './python_math.js'\r\nimport PythonOpenSesame from './python_opensesame.js'\r\nimport PythonRandom from './python_random.js'\r\nimport PythonString from './python_string.js'\r\nimport toNumber from 'lodash/toNumber'\r\n\r\n/** Class implementing a python AST interpreter. */\r\nexport default class PythonParser {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the AST object belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the AST object.\r\n\r\n    // Set class properties.\r\n    this.python_math = new PythonMath(this._runner)\r\n    this.python_opensesame = new PythonOpenSesame(this._runner)\r\n    this.python_random = new PythonRandom(this._runner)\r\n    this.python_string = new PythonString(this._runner)\r\n\r\n    // Definition of private properties.\r\n    this._classes = {} // Accessible classes within the script code.\r\n    this._function_stack = [] // Function call stack.\r\n    this._global_return_value = null // Global return value for blocking calls.\r\n    this._inline_script = null // Parent inline_script item.\r\n    this._node = null // Current active node.\r\n    this._onConsole = null\r\n    this._stack = 0 // Stack counter (hack to precent stack overflow).\r\n    this._statement = null // process one statement or an script.\r\n    this._status = 0 // Status of the walker.\r\n    this._variables = {} // Object containing all global objects and variables.\r\n  }\r\n\r\n  /** Initialization phase of the python class. */\r\n  _initialize () {\r\n    // Set the python variable connections with opensesame.\r\n    this._variables.clock = this._runner._experiment.clock\r\n    this._variables.exp = this._runner._experiment\r\n    this._variables.items = this._runner._itemStore\r\n    this._variables.pool = this._runner._pool\r\n    this._variables.var = this._runner._experiment.vars\r\n\r\n    // Set the console handler.\r\n    if (this._runner._onConsole !== null) {\r\n      this._onConsole = this._runner._onConsole\r\n    }\r\n\r\n    // Initialize internal libraries to the interpreter.\r\n    this.python_math._initialize()\r\n    this.python_opensesame._initialize()\r\n    this.python_random._initialize()\r\n    this.python_string._initialize()\r\n  }\r\n\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {String} script - Parse a python script using the filbert library.\r\n     */\r\n  _parse (script) {\r\n    // Check if the script exists.\r\n    if (script !== '\"\"') {\r\n      var locations = false\r\n      var parseFn = filbert.parse\r\n      var ranges = false\r\n\r\n      // Try to parse the script.\r\n      try {\r\n        var code = script\r\n        var ast = parseFn(code, {\r\n          locations: locations,\r\n          ranges: ranges\r\n        })\r\n        return ast\r\n      } catch (e) {\r\n        this._runner._debugger.addError('Script parsing error: ' + e.message)\r\n        return null\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get the context part of a identifier (before the dot '.').\r\n     * @param {String} identifier - Full name of the identifier.\r\n     */\r\n  _get_context (identifier) {\r\n    // Split the identifer\r\n    var items = identifier.value.split('.')\r\n\r\n    if ((items[0] === '__pythonRuntime') && (items[1] === 'imports')) {\r\n      return this._variables[items[2]]\r\n    } else {\r\n      // Return the object context\r\n      if (this._variables[items[0]] !== undefined) {\r\n        return this._variables[items[0]]\r\n      } else {\r\n        return window[items[0]]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get an element form a library of the variable container.\r\n     * @param {String} element - Full name of the element to retrieve.\r\n     * @return {Object} - The given element found in the context.\r\n     */\r\n  _get_element (element) {\r\n    // Split the identifier name space.\r\n    var items = element.value.split('.')\r\n\r\n    // Check if the identifier is part of the internal scope.\r\n    if (items[0] === '__pythonRuntime') {\r\n      // Check if the identifier is part of the import scope.\r\n      if (items[1] === 'imports') {\r\n        var import_lib = filbert.pythonRuntime.imports[items[2]]\r\n        const value = import_lib[items[3]]\r\n        // Attempt to convert the value to a number,\r\n        // if this fails return the original value\r\n        return isNaN(toNumber(value)) ? value : toNumber(value)\r\n      } else {\r\n        var default_lib = filbert.pythonRuntime[items[1]]\r\n        return default_lib[items[2]]\r\n      }\r\n    } else {\r\n      // No internal scope, check if it is defined in the global scope\r\n      if (this._variables[items[0]] !== undefined) {\r\n        if (items.length === 1) {\r\n          return this._variables[items[0]]\r\n        } else {\r\n          return this._variables[items[0]][items[1]]\r\n        }\r\n      } else {\r\n        if (window[items[0]] !== undefined) {\r\n          if (items.length === 1) {\r\n            return window[items[0]]\r\n          } else {\r\n            return window[items[0]][items[1]]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get the value of an element form a library of the variable container.\r\n     * @param {String} element - Full name of the element to retrieve.\r\n     * @return {Boolean|Number|Object|String} - The value of the given element.\r\n     */\r\n  _get_element_value (element) {\r\n    switch (element.type) {\r\n    case 'identifier':\r\n      // Split the identifier name space.\r\n      var items = element.value.split('.')\r\n\r\n      // Set the element value in the global scope.\r\n      if (items.length === 1) {\r\n        if (this._variables[items[0]] !== undefined) {\r\n          return this._variables[items[0]]\r\n        } else {\r\n          return window[items[0]]\r\n        }\r\n      } else {\r\n        if (items[0].indexOf('__filbertRight') !== -1) {\r\n          if (items[1].indexOf('__filbertIndex') !== -1) {\r\n            var container = this._variables[items[0]]\r\n            var index = this._variables[items[1]]\r\n            return container[index]\r\n          } else {\r\n            if (this._variables[items[0]] !== undefined) {\r\n              return this._variables[items[0]][items[1]]\r\n            } else {\r\n              return window[items[0]][items[1]]\r\n            }\r\n          }\r\n        } else if (items[0] === '__pythonRuntime') {\r\n          if (items[1] === 'imports') {\r\n            const import_lib = filbert.pythonRuntime.imports[items[2]]\r\n            const value = import_lib[items[3]]\r\n            // Attempt to convert the value to a number,\r\n            // if this fails return the original value\r\n            return isNaN(toNumber(value)) ? value : toNumber(value)\r\n          } else {\r\n            var default_lib = filbert.pythonRuntime[items[1]]\r\n            return default_lib[items[2]]\r\n          }\r\n        } else {\r\n          if (this._variables[items[0]] !== undefined) {\r\n            return this._variables[items[0]][items[1]]\r\n          } else {\r\n            return window[items[0]][items[1]]\r\n          }\r\n        }\r\n      }\r\n    case 'literal':\r\n      // return the value of the literal.\r\n      return element.value\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set the value of an element.\r\n     * @param {String} element - Full name of the element to set.\r\n     * @param {Boolean|Number|Object|String} value - The value for the given element.\r\n     */\r\n  _set_element_value (element, value) {\r\n    // Split the identifier name space.\r\n    var items = element.value.split('.')\r\n\r\n    // Set the element value in the global scope.\r\n    if (items.length === 1) {\r\n      if (window[items[0]] !== undefined) {\r\n        window[items[0]] = value\r\n      } else {\r\n        this._variables[items[0]] = value\r\n      }\r\n    } else {\r\n      if (window[items[0]] !== undefined) {\r\n        window[items[0]][items[1]] = value\r\n      } else {\r\n        this._variables[items[0]][items[1]] = value\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set the given node to the current node.\r\n     * @param {Object} node - The node to set as current node.\r\n     */\r\n  _set_node (node) {\r\n    // Set the current node as the parent node\r\n    node.parent = this._node\r\n\r\n    // Set the new node as the current node.\r\n    this._node = node\r\n  }\r\n\r\n  /**\r\n     * Set the return value of a node.\r\n     * @param {Boolean|Number|Object|String} value - The return value for the processed node.\r\n     */\r\n  _set_return_value (value) {\r\n    // Create or acces the return_values array.\r\n    this._node.parent.return_values = (typeof this._node.parent.return_values === 'undefined') ? [] : this._node.parent.return_values\r\n\r\n    // Push the value.\r\n    this._node.parent.return_values.push(value)\r\n  }\r\n\r\n  /** Process an AST array expression. */\r\n  _array_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.elements.length) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.elements[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Redefine the return values.\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        this._node.return_values[i] = this._get_element_value(this._node.return_values[i])\r\n      }\r\n      var return_value = { type: 'literal', value: this._node.return_values }\r\n\r\n      // Set the return value.\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST assignment expression. */\r\n  _assignment_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // process id.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process init.\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // define variables\r\n      var tmp_value\r\n\r\n      // Select binary operator.\r\n      switch (this._node.operator) {\r\n      case '=':\r\n        // Process the init value.\r\n        this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      case '-=':\r\n        tmp_value = this._get_element_value(this._node.return_values[0])\r\n        this._set_element_value(this._node.return_values[0], tmp_value - this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      case '/=':\r\n        tmp_value = this._get_element_value(this._node.return_values[0])\r\n        this._set_element_value(this._node.return_values[0], tmp_value / this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      case '%=':\r\n        tmp_value = this._get_element_value(this._node.return_values[0])\r\n        this._set_element_value(this._node.return_values[0], tmp_value % this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      }\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST binary expression. */\r\n  _binary_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process property\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // define variables.\r\n      var left = this._get_element_value(this._node.return_values[0])\r\n      var right = this._get_element_value(this._node.return_values[1])\r\n      var return_value = { type: 'literal' }\r\n\r\n      // Select binary operator.\r\n      switch (this._node.operator) {\r\n      case '-':\r\n        return_value.value = left - right\r\n        break\r\n      case '/':\r\n        return_value.value = left / right\r\n        break\r\n      case '==':\r\n        return_value.value = (left === right)\r\n        break\r\n      case '!=':\r\n        return_value.value = (left !== right)\r\n        break\r\n      case '>':\r\n        return_value.value = (left > right)\r\n        break\r\n      case '<':\r\n        return_value.value = (left < right)\r\n        break\r\n      case '>=':\r\n        return_value.value = (left >= right)\r\n        break\r\n      case '<=':\r\n        return_value.value = (left <= right)\r\n        break\r\n      case '%':\r\n        if ((typeof left === 'number') && (typeof right === 'number')) {\r\n          return_value.value = left % right\r\n        } else {\r\n          return_value.value = left.replace(/%s/g, right)\r\n        }\r\n        break\r\n      case 'instanceof':\r\n        return_value.value = left instanceof right\r\n        break\r\n      }\r\n\r\n      // Set the return value.\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST block statement. */\r\n  _block_statement () {\r\n    // Initialize node specific properties.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if ((this._node.index < this._node.body.length) && (this._node.break === false)) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.body[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Reset node index and return to the parent node.\r\n      if (this._node.break === true) {\r\n        this._node.break = false\r\n        this._node.parent.break = true\r\n      }\r\n\r\n      this._node.index = 0\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST break statement. */\r\n  _break_statement () {\r\n    // Set break flag for parent element.\r\n    this._node.parent.break = true\r\n\r\n    // Return to the parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST call expression. */\r\n  _call_expression () {\r\n    // Initialize status properties.\r\n    this._node.arguments = (typeof this._node.arguments === 'undefined') ? [] : this._node.arguments\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process arguments and caller.\r\n      if (this._node.index < this._node.arguments.length) {\r\n        // Set current node to next node in list.\r\n        this._node.index++\r\n        this._set_node(this._node.arguments[this._node.index - 1])\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Set parent node.\r\n        this._node.status = 1\r\n        this._set_node(this._node.callee)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 1:\r\n      // Get the first return value, which is the name of the caller element.\r\n      var return_value = this._node.return_values.pop()\r\n\r\n      // Get the arguments used on the caller element.\r\n      var tmp_arguments = []\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        tmp_arguments.push(this._get_element_value(this._node.return_values[i]))\r\n      }\r\n\r\n      var caller = this._get_element(return_value)\r\n      var context = this._get_context(return_value)\r\n\r\n      if ((return_value.value === 'sleep') || (return_value.value === '__pythonRuntime.imports.clock.sleep')) {\r\n        // Adjust the status to special.\r\n        this._node.status = 2\r\n\r\n        // Check the context.\r\n        if (typeof context === 'undefined') {\r\n          context = this\r\n        }\r\n\r\n        // Execute the blocking call.\r\n        caller.apply(context, tmp_arguments)\r\n      } else {\r\n        // Check the context.\r\n        if (typeof context === 'undefined') {\r\n          context = this\r\n        }\r\n\r\n        // Execute the call, check first for internal function call.\r\n        if (this._node.callee.type === 'FunctionExpression') {\r\n          return_value = { type: 'literal', value: caller }\r\n        } else {\r\n          return_value = { type: 'literal', value: caller.apply(context, tmp_arguments) }\r\n        }\r\n\r\n        // Set the return value.\r\n        this._set_return_value(return_value)\r\n\r\n        // Reset node index and return to the parent node.\r\n        this._node.index = 0\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 2:\r\n      // Special state used when calling a blocking method (sleep, clock.sleep, keyboard.get_key(), mouse.get_click).\r\n      this._set_return_value(this.global_return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST empty statment. */\r\n  _empty_statement () {\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n\r\n    // Return to the node processessor.\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST expression statement. */\r\n  _expression_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.expression)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Set parent node.\r\n      this._node.status = 0\r\n      this._node = this._node.parent\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST for statement. */\r\n  _for_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.init)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process object.\r\n      this._node.status = 2\r\n      this._set_node(this._node.test)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Check if the test node has returned true.\r\n      if (this._node.return_values[0].value === true) {\r\n        // Process object.\r\n        this._node.status = 3\r\n        this._node.return_values = []\r\n        this._set_node(this._node.body)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Range has ended.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 3:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.update)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST for in statement. */\r\n  _for_in_statement () {\r\n    // Initialize status property.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process object.\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Retrieve the range on which the loop travels.\r\n      var tmp_range = this._get_element_value(this._node.return_values[1])\r\n\r\n      // Execute the range.\r\n      if (this._node.index < tmp_range.length) {\r\n        // Set the value of the range.\r\n        this._set_element_value(this._node.return_values[0], tmp_range[this._node.index])\r\n\r\n        // Increase the index.\r\n        this._node.index++\r\n\r\n        // Execute the body.\r\n        this._set_node(this._node.body)\r\n        this._process_nodes()\r\n      } else {\r\n        this._node.index = 0\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST function expression. */\r\n  _function_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process defaults.\r\n      this._node.status = 1\r\n      this._set_node(this._node.body)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Remove the last return value from the global function stack.\r\n      var return_value = this._function_stack.pop()\r\n\r\n      // Set the return value\r\n      this._set_return_value(return_value)\r\n\r\n      // Set parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST identifier. */\r\n  _identifier () {\r\n    // Retrieve the identifier information.\r\n    const return_value = { type: 'identifier', value: this._node.name }\r\n\r\n    // Set the return value.\r\n    this._set_return_value(return_value)\r\n\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST if statement. */\r\n  _if_statement () {\r\n    // Initialize status property.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.test)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Check if expression is true.\r\n      if (this._node.return_values[0].value === true) {\r\n        this._node.status = 2\r\n        this._set_node(this._node.consequent)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      } else if (this._node.alternate !== null) {\r\n        this._node.status = 2\r\n        this._set_node(this._node.alternate)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      } else {\r\n        this._node.status = 2\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 2:\r\n      // Set parent node.\r\n      if (this._node.break === true) {\r\n        this._node.break = false\r\n        this._node.parent.break = true\r\n      }\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST literal. */\r\n  _literal () {\r\n    // Retrieve the identifier information.\r\n    var return_value = { type: 'literal', value: this._node.value }\r\n\r\n    // Set the return value.\r\n    this._set_return_value(return_value)\r\n\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST logical expression. */\r\n  _logical_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process property\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // define variables.\r\n      var left = this._get_element_value(this._node.return_values[0])\r\n      var right = this._get_element_value(this._node.return_values[1])\r\n      var return_value = { type: 'literal' }\r\n\r\n      // Select binary operator.\r\n      switch (this._node.operator) {\r\n      case '&&':\r\n        return_value.value = left && right\r\n        break\r\n      case '||':\r\n        return_value.value = left || right\r\n        break\r\n      }\r\n\r\n      // Set the return value.\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST member expression */\r\n  _member_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.object)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process property\r\n      this._node.status = 2\r\n      this._set_node(this._node.property)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Build the combing return value.\r\n      var return_value = { type: 'identifier', value: this._node.return_values[0].value + '.' + this._node.return_values[1].value }\r\n\r\n      // Set the return value\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST new expression. */\r\n  _new_expression () {\r\n    // Initialize status properties.\r\n    this._node.arguments = (typeof this._node.arguments === 'undefined') ? [] : this._node.arguments\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Process arguments and caller.\r\n      if (this._node.index < this._node.arguments.length) {\r\n        // Set current node to next node in list.\r\n        this._node.index++\r\n        this._set_node(this._node.arguments[this._node.index - 1])\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Set parent node.\r\n        this._node.status = 1\r\n        this._set_node(this._node.callee)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      }\r\n    } else {\r\n      // Get the caller and context element.\r\n      let returnValue = this._node.return_values.pop()\r\n      var caller = this._get_element(returnValue)\r\n      var context = this._get_context(returnValue)\r\n\r\n      // Create the aruments array.\r\n      var tmp_arguments = []\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        tmp_arguments.push(this._get_element_value(this._node.return_values[i]))\r\n      }\r\n\r\n      // Execute the call.\r\n      returnValue = { type: 'literal', value: caller.apply(context, tmp_arguments) }\r\n\r\n      // Set the return value\r\n      this._set_return_value(returnValue)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST program. */\r\n  _program () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.body.length) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.body[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Change status and end the running process.\r\n      this._node.index = 0\r\n      this._status = 2\r\n\r\n      // Complete the inline item.\r\n      if (this._inline_script !== null) {\r\n        this._inline_script._complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Process an AST return statement. */\r\n  _return_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    let returnValue\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Set return value.\r\n      returnValue = { type: 'identifier', value: this._node.return_values[0].value }\r\n\r\n      // Set the return value\r\n      this._function_stack.push(returnValue)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST unary expression. */\r\n  _unary_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      var return_value = { type: 'literal' }\r\n\r\n      // process the operator.\r\n      switch (this._node.operator) {\r\n      case '!' :\r\n        return_value.value = !(this._node.return_values[0].value)\r\n        break\r\n      case '-' :\r\n        return_value.value = -(this._node.return_values[0].value)\r\n        break\r\n      }\r\n\r\n      // Set the return value\r\n      this._set_return_value(return_value)\r\n\r\n      // Return to the node processessor.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST update expression. */\r\n  _update_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Process the init value.\r\n      switch (this._node.operator) {\r\n      case '++' :\r\n        this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[0]) + 1)\r\n        break\r\n      }\r\n\r\n      // Return to the node processessor.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST variable declaration. */\r\n  _variable_declaration () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.declarations.length) {\r\n      // Set current node to next node in list.\r\n      this._node.index++\r\n      this._set_node(this._node.declarations[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST variable declarator. */\r\n  _variable_declarator () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // process id.\r\n      this._node.status = 1\r\n      this._set_node(this._node.id)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process init.\r\n      this._node.status = 2\r\n      this._set_node(this._node.init)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Process the init value.\r\n      this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[1]))\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST while statement. */\r\n  _while_statement () {\r\n    // Initialize status property.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Check for the break flag.\r\n      if (this._node.break === true) {\r\n        this._node.break = false\r\n        // Set parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      } else {\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.test)\r\n\r\n        // Return to the node processeor.\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 1:\r\n      // Check if expression is true.\r\n      if (this._node.return_values[0].value === true) {\r\n        // Reset the test\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n\r\n        // execute the body.\r\n        this._set_node(this._node.body)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Set parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process all AST nodes. */\r\n  _process_nodes () {\r\n    // Select type of processing.\r\n    if (this._statement === null) {\r\n      // Script processing.\r\n      this._process_nodes_jump()\r\n    } else {\r\n      if (this._node === this._statement) {\r\n        // Return the result value of the expression.\r\n        return (this._node.body[0].return_values[0].value)\r\n      } else {\r\n        // Statement processing.\r\n        this._process_nodes_timeout()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Process a single AST nodes (timeout is for non-blocking) */\r\n  _process_nodes_jump () {\r\n    // Increase the stack counter.\r\n    this._stack++\r\n    if (this._stack > 500) {\r\n      // Clear the stack.\r\n      this._stack = 0\r\n\r\n      // Process nodes with a timeout (this is a hack for clearing the browser cache.\r\n      setTimeout(function () {\r\n        this._process_nodes_timeout()\r\n      }.bind(this), 1)\r\n    } else {\r\n      // Process the nodes without a timeout.\r\n      this._process_nodes_timeout()\r\n    }\r\n  }\r\n\r\n  /** Process a single AST nodes (timeout is for non-blocking) */\r\n  _process_nodes_timeout () {\r\n    // Select the type of node to process\r\n    switch (this._node.type) {\r\n    case 'ArrayExpression':\r\n      this._array_expression()\r\n      break\r\n    case 'AssignmentExpression':\r\n      this._assignment_expression()\r\n      break\r\n    case 'BinaryExpression':\r\n      this._binary_expression()\r\n      break\r\n    case 'BlockStatement':\r\n      this._block_statement()\r\n      break\r\n    case 'BreakStatement':\r\n      this._break_statement()\r\n      break\r\n    case 'CallExpression':\r\n      this._call_expression()\r\n      break\r\n    case 'EmptyStatement':\r\n      this._empty_statement()\r\n      break\r\n    case 'ExpressionStatement':\r\n      this._expression_statement()\r\n      break\r\n    case 'ForStatement':\r\n      this._for_statement()\r\n      break\r\n    case 'ForInStatement':\r\n      this._for_in_statement()\r\n      break\r\n    case 'FunctionExpression':\r\n      this._function_expression()\r\n      break\r\n    case 'Identifier':\r\n      this._identifier()\r\n      break\r\n    case 'IfStatement':\r\n      this._if_statement()\r\n      break\r\n    case 'Literal':\r\n      this._literal()\r\n      break\r\n    case 'LogicalExpression':\r\n      this._logical_expression()\r\n      break\r\n    case 'MemberExpression':\r\n      this._member_expression()\r\n      break\r\n    case 'NewExpression':\r\n      this._new_expression()\r\n      break\r\n    case 'Program':\r\n      this._program()\r\n      break\r\n    case 'ReturnStatement':\r\n      this._return_statement()\r\n      break\r\n    case 'UnaryExpression':\r\n      this._unary_expression()\r\n      break\r\n    case 'UpdateExpression':\r\n      this._update_expression()\r\n      break\r\n    case 'VariableDeclaration':\r\n      this._variable_declaration()\r\n      break\r\n    case 'VariableDeclarator':\r\n      this._variable_declarator()\r\n      break\r\n    case 'WhileStatement':\r\n      this._while_statement()\r\n      break\r\n    default:\r\n      this._runner._debugger.addError('Invalid node type to process: ' + this._node.type)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Run a single line python AST statement.\r\n     * @param {Object} ast_tree - The AST tree to run.\r\n     * @return {Boolean|Number|Object|String} - The result value of the AST evaluation.\r\n     */\r\n  _run_statement (ast_tree) {\r\n    this._node = ast_tree.body[0]\r\n    this._node.parent = ast_tree\r\n    this._statement = ast_tree\r\n\r\n    // Adjust status of partser to running and start the process.\r\n    this._status = 1\r\n\r\n    // Process the nodes.\r\n    this._process_nodes()\r\n\r\n    // Return the result value of the expression.\r\n    let returnValue\r\n    if (ast_tree.body[0].return_values[0].type === 'identifier') {\r\n      returnValue = this._get_element_value(ast_tree.body[0].return_values[0])\r\n    } else {\r\n      returnValue = ast_tree.body[0].return_values[0].value\r\n    }\r\n\r\n    // Clear the return value container for next cycle.\r\n    ast_tree.body[0].return_values = []\r\n\r\n    // Retur value of the statement.\r\n    return returnValue\r\n  }\r\n\r\n  /**\r\n     * Run an AST python script.\r\n     * @param {Object} inline_script - The Inline Script item to which the AST tree belongs.\r\n     * @param {Object} ast_tree - The AST tree to run.\r\n     */\r\n  _run (inline_script, ast_tree) {\r\n    // Set the inline item.\r\n    this._inline_script = inline_script\r\n\r\n    // set the self parameter.\r\n    this._variables.self = inline_script\r\n\r\n    // Set the first node and its parent.\r\n    this._node = ast_tree\r\n    this._node.parent = null\r\n    this._statement = null\r\n\r\n    // Adjust status of partser to running and start the process.\r\n    this._status = 1\r\n    this._process_nodes()\r\n  }\r\n}\r\n","import isFunction from 'lodash/isFunction'\r\n\r\n/** Class representing a data logger. */\r\nexport default class Log {\r\n  /**\r\n   * Create a log object which stores all the response data.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   */\r\n  constructor (experiment) {\r\n    this._experiment = experiment // Anchor to the experiment object.\r\n  }\r\n\r\n  /**\r\n   * Write one signle line to the message log.\r\n   * @param {Array} varList - Array with variables to write to the log.\r\n   */\r\n  write_vars (varList) {\r\n    const entry = {}\r\n    for (const varName of varList) {\r\n      const value = this._experiment.vars.get(varName, 'NA', false)\r\n      if (isFunction(value)) continue\r\n      entry[varName] = value\r\n    }\r\n    if (isFunction(this._experiment.onLog)) {\r\n      this._experiment.onLog(entry)\r\n    }\r\n    this._experiment._runner._data.push(entry)\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport JavaScriptWorkspace from '../classes/javascript_workspace.js'\r\nimport Canvas from '../backends/canvas.js'\r\nimport Log from '../backends/log'\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\nimport {\r\n  VERSION_NAME,\r\n  VERSION_NUMBER\r\n} from '../index.js'\r\n\r\n/**\r\n * Class representing an Experiment item.\r\n * @extends Item\r\n */\r\nexport default class Experiment extends Item {\r\n  /** The experiment class defines the starting point for an experiment. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._canvas = new Canvas(this)\r\n    this._currentCanvas = this._canvas\r\n    this._log = new Log(this)\r\n    this._scale_x = 1 // Scaling of the canvas for fullscreen mode.\r\n    this._scale_y = 1 // Scaling of the canvas for fullscreen mode.\r\n    this._javascriptWorkspace = new JavaScriptWorkspace(this)\r\n\r\n    // Create and set public properties.\r\n    this.debug = this._runner._debugger.enabled\r\n    this.items = this._runner._itemStore\r\n    this.pool = this._runner._pool\r\n\r\n    // Set default variables\r\n    this.vars.start = 'experiment'\r\n    this.vars.title = 'My Experiment'\r\n    this.vars.bidi = 'no'\r\n    this.vars.round_decimals = 2\r\n    this.vars.form_clicks = 'no'\r\n    this.vars.uniform_coordinates = 'no'\r\n    this.vars.sessionid = new Date().valueOf() + Math.floor(Math.random() * 100000)\r\n\r\n    // Sound parameters.\r\n    this.vars.sound_freq = 48000\r\n    this.vars.sound_sample_size = -16\r\n    this.vars.sound_channels = 2\r\n    this.vars.sound_buf_size = 1024\r\n\r\n    // Default backend\r\n    this.vars.canvas_backend = 'xpyriment'\r\n\r\n    // Display parameters.\r\n    this.vars.width = 1024\r\n    this.vars.height = 768\r\n    this.vars.background = 0x000000\r\n    this.vars.foreground = 0xFFFFFF\r\n    this.vars.penwidth = 1\r\n\r\n    // Font parameters.\r\n    this.vars.font_size = 18\r\n    this.vars.font_family = 'mono'\r\n    this.vars.font_italic = 'no'\r\n    this.vars.font_bold = 'no'\r\n    this.vars.font_underline = 'no'\r\n  }\r\n\r\n  /** Resets the feedback variables (acc, avg_rt, etc.). */\r\n  reset_feedback () {\r\n    this.vars.total_responses = 0\r\n    this.vars.total_correct = 0\r\n    this.vars.total_response_time = 0\r\n    this.vars.avg_rt = 'undefined'\r\n    this.vars.average_response_time = 'undefined'\r\n    this.vars.accuracy = 'undefined'\r\n    this.vars.acc = 'undefined'\r\n  }\r\n\r\n  /**\r\n    * Sets the subject number and parity (even/ odd).\r\n    * @param  {Number} pNr - The subject number to be used.\r\n    */\r\n  set_subject (pNr) {\r\n    // Sets the subject number and parity (even/ odd).\r\n    this.vars.subject_nr = pNr\r\n    if ((pNr % 2) === 0) {\r\n      this.vars.subject_parity = 'even'\r\n    } else {\r\n      this.vars.subject_parity = 'odd'\r\n    }\r\n  }\r\n\r\n  /**\r\n    * Extracts a the definition of a single item from the string.\r\n    * @param {String} script - The script to read the definition form.\r\n    * @return {String} - The definition found from the script.\r\n    */\r\n  read_definition (script) {\r\n    // Extracts a the definition of a single item from the string.\r\n    var line = script.shift()\r\n    var def_str = ''\r\n    while ((line !== null) && (line.length > 0) && (line.charAt(0) === '\\t')) {\r\n      def_str = def_str + line.substring(1) + '\\n'\r\n      line = script.shift()\r\n    }\r\n    return def_str\r\n  }\r\n\r\n  /**\r\n   * Construct the experiment object from OpenSesame script.\r\n   * @param {String} script - The opensesame script contents\r\n   */\r\n  from_string (script) {\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      script = script.replace(/\\r\\n|\\r|\\n/g, '\\n')  // convert line endings\r\n      this._source = script.split('\\n')\r\n      var l = this._source.shift()\r\n      while (l != null) {\r\n        // Set the processing of the next line.\r\n        const get_next = true\r\n        // eslint-disable-next-line no-unused-vars\r\n        let cmd, args, kwargs\r\n        try {\r\n          // Split the single line into a set of tokens.\r\n          [cmd, args, kwargs] = this._runner._syntax.parse_cmd(l)\r\n        } catch (e) {\r\n          this._runner._debugger.addError('Failed to parse script. Maybe it contains illegal characters or unclosed quotes: ' + e.message)\r\n        }\r\n\r\n        if ((cmd !== null) && (args.length > 0)) {\r\n          // Try to parse the line as variable (or comment)\r\n          if (this.parse_variable(l) === false) {\r\n            if (cmd === 'define') {\r\n              if (args.length === 2) {\r\n                // Get the type, name and definition string of an item.\r\n                var item_type = args[0]\r\n                var item_name = this._runner._syntax.sanitize(args[1])\r\n                var def_str = this.read_definition(this._source)\r\n                this._runner._itemStore.newItem(item_type, item_name, def_str)\r\n              } else {\r\n                this._runner._debugger.addError('Failed to parse definition: ' + l)\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Get the next line.\r\n        if (get_next === true) {\r\n          l = this._source.shift()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Initializes the clock backend. */\r\n  init_clock () {\r\n    // Initializes the clock backend.\r\n    this.clock._initialize()\r\n  }\r\n\r\n  /** Initializes the canvas backend. */\r\n  init_display () {\r\n    // Initializes the canvas backend.\r\n    this._canvas.init_display(this)\r\n  }\r\n\r\n  /** Event handler for external data retrieval. */\r\n  onLog (data) {\r\n    // Function to be overwritten by external handler\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Runs the experiment.\r\n    switch (this._status) {\r\n    case constants.STATUS_INITIALIZE:\r\n      // Adjust the status of the item.\r\n      this._status = constants.STATUS_FINALIZE\r\n\r\n      // Save the date and time, and the version of OpenSesame\r\n      this.vars.datetime = new Date().toString()\r\n      this.vars.opensesame_version = VERSION_NUMBER\r\n      this.vars.opensesame_codename = VERSION_NAME\r\n      this.init_clock()\r\n      this.init_display()\r\n      this.reset_feedback()\r\n\r\n      // Add closing message to debug system.\r\n      this._runner._debugger.addMessage('experiment.run(): experiment started at ' + new Date().toUTCString())\r\n\r\n      if (this._runner._itemStore._items[this.vars.start] !== null) {\r\n        this._runner._itemStack.clear()\r\n        this._runner._itemStore.prepare(this.vars.start, this)\r\n      } else {\r\n        this._runner._debugger.addError('Could not find the item that is the entry point of the experiment: ' + this.vars.start)\r\n      }\r\n      break\r\n    case constants.STATUS_FINALIZE:\r\n      // Add closing message to debug system.\r\n      this._runner._debugger.addMessage('experiment.run(): experiment finished at ' + new Date().toUTCString())\r\n\r\n      // Complete the run process.\r\n      this.end()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Ends an experiment. */\r\n  end () {\r\n    this._runner._finalize()\r\n  }\r\n}\r\n","import { autoDetectRenderer } from 'pixi.js'\r\nimport {\r\n  constants\r\n} from './constants.js'\r\nimport Debugger from './debugger.js'\r\nimport Convertor from './convertor.js'\r\nimport Events from './events.js'\r\nimport Parameters from './parameters.js'\r\nimport Screen from './screen.js'\r\nimport Session from './session.js'\r\nimport Transfer from './transfer.js'\r\nimport ItemStack from '../classes/item_stack.js'\r\nimport ItemStore from '../classes/item_store.js'\r\nimport PythonWorkspace from '../classes/python_workspace.js'\r\nimport FilePoolStore from '../classes/file_pool_store.js'\r\nimport Syntax from '../classes/syntax.js'\r\nimport PythonParser from '../python/python.js'\r\nimport Experiment from '../items/experiment.js'\r\n\r\n/** Class representing the Runner. */\r\nexport default class Runner {\r\n  /** Create a runner which runs an experiment. */\r\n  constructor (content) {\r\n    // Create and set private properties.\r\n    this._confirm = null // Optionale confirm dialog function.\r\n    this._container = null // HTML: The container (div) element.\r\n    this._data = [] // Experiment result data.\r\n    this._experiment = null // The experiment container.\r\n    this._fullScreen = false // Full screen toggle mode.\r\n    this._mimetype = null // Distinction between text and binanry files.\r\n    this._name = 'noname.exp' // Name of the experiment which is run.\r\n    this._onConsole = null // Event handler for processing print messages.\r\n    this._onFinished = null // Event handler for finishing the experiment.\r\n    this._onLog = null // Event handler to call when logger is encountered.\r\n    this._onError = null // Event handler to call when an error is encountered.\r\n    this._prompt = null // Optional prompt dialog function.\r\n    this._renderer = null // PIXI: The visual stimuli renderer.\r\n    this._scaleMode = 'noScale' // Scale type used for full screen mode.\r\n    this._script = null // Container for the experiment script.\r\n    this._source = null // Link to the source experiment file.\r\n    this._subject = null // If defined containing the subject number.\r\n    this._target = null // Link to the target location for the data.\r\n\r\n    // Create and set private class properties.\r\n    this._debugger = new Debugger(this) // Internal error system.\r\n    this._convertor = new Convertor(this)\r\n    this._events = new Events(this) // The event processor.\r\n    this._itemStack = new ItemStack(this) // The global item stack.\r\n    this._itemStore = new ItemStore(this) // The global item store.\r\n    this._parameters = new Parameters(this) // Parameter processor.\r\n    this._pool = new FilePoolStore(this) // The virtual file pool store.\r\n    this._pythonParser = new PythonParser(this) // Python parser\r\n    this._pythonWorkspace = new PythonWorkspace(this) // Python workspace.\r\n    this._screen = new Screen(this) // Introduction screen renderer.\r\n    this._session = new Session(this) // Session information container.\r\n    this._syntax = new Syntax(this) // The script syntax checker.\r\n    this._transfer = new Transfer(this) // File transfer system.\r\n\r\n    // Create the content container.\r\n    this._setupContent(content)\r\n  }\r\n\r\n  /**\r\n   * Setup the content container which shows all the visual output.\r\n   * @param {String|Object} content - The content (div element) in which the experiment is projected.\r\n   */\r\n  _setupContent (content) {\r\n    // Check if the experiment container is defined.\r\n    if (typeof content !== 'undefined') {\r\n      // Get the div element from the DOM element tree\r\n      this._container = (typeof content === 'string') ? document.getElementById(content) : content\r\n\r\n      // Create and set the experiment canvas.\r\n      this._renderer = autoDetectRenderer(800, 600, {\r\n        antialias: true,\r\n        transparent: false,\r\n        resolution: 1\r\n      })\r\n      this._renderer.backgroundColor = 0x000000\r\n\r\n      // Append the canvas to the container.\r\n      this._container.appendChild(this._renderer.view)\r\n    } else {\r\n      // Show error message.\r\n      this._debugger.addError('No content parameter specified.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup the context from which the experiment is created.\r\n   * @param {Object} context - An JSON object containing information about the experiment.\r\n   */\r\n  async _setupContext (context) {\r\n    // Check if the script parameter is defined.\r\n    if (typeof context !== 'undefined') {\r\n      // Initialize the context parameters.\r\n      // Use ES6 destructuring to determine values and set default ones if\r\n      // required.\r\n      ({\r\n        confirm: this._confirm = null,\r\n        debug: this._debugger.enabled = false,\r\n        fullScreen: this._fullScreen = false,\r\n        introClick: this._screen._click = true,\r\n        introScreen: this._screen._active = true,\r\n        mimetype: this._mimetype = null,\r\n        name: this._name = 'noname.exp',\r\n        onConsole: this._onConsole = null,\r\n        onFinished: this._onFinished = null,\r\n        onLog: this._onLog = null,\r\n        onError: this._onError = null,\r\n        prompt: this._prompt = null,\r\n        scaleMode: this._scaleMode = 'noScale',\r\n        source: this._source = null,\r\n        subject: this._subject = null,\r\n        target: this._target = null,\r\n        welcomeText: this._welcomeText = null\r\n      } = context)\r\n\r\n      // Set up the introscreen.\r\n      this._screen._setupIntroScreen()\r\n\r\n      this._screen._updateIntroScreen('Loading experiment.')\r\n      this._screen._updateProgressBar(-1)\r\n\r\n      // Load the script file, using the source parameter.\r\n      try {\r\n        this._script = await this._transfer._readSource(this._source)\r\n      } catch (e) {\r\n        this._debugger.addError(`Error reading osexp: ${e}`)\r\n        this._exit()\r\n        return\r\n      }\r\n\r\n      // Update the introscreen\r\n      this._screen._updateIntroScreen('Building experiment structure.')\r\n\r\n      // Continue the experiment build.\r\n      this._build()\r\n\r\n      // Initialize the parameters class and request user input.\r\n      this._parameters._initialize()\r\n    } else {\r\n      // Show error message.\r\n      this.debugger.addError('No context parameter specified.')\r\n    }\r\n  }\r\n\r\n  /** Build the experiment system. */\r\n  _build () {\r\n    // Create the experiment item.\r\n    this._experiment = new Experiment(this, this._name, this._script)\r\n    this._convertor.parseScript(this._script)\r\n    this._experiment.from_string(this._script)\r\n\r\n    // Set the onlog event handler (if defined).\r\n    if (this._onLog) {\r\n      this._experiment.onLog = this._onLog\r\n    }\r\n  }\r\n\r\n  /** initialize the runner. */\r\n  _initialize () {\r\n    // Initialize the helper classes.\r\n    this._debugger._initialize()\r\n    this._events._initialize()\r\n    this._pythonParser._initialize()\r\n    this._session._initialize()\r\n\r\n    // Prepare and run the experiment item.\r\n    this._experiment.prepare()\r\n    this._experiment.run()\r\n  }\r\n\r\n  /** finalize the runner. */\r\n  _finalize () {\r\n    // Finalize the event system.\r\n    this._events._finalize()\r\n\r\n    // Finalize the debugger.\r\n    this._debugger._finalize()\r\n\r\n    // Clear the item store and file pool.\r\n    this._itemStore._clean_up()\r\n    this._pool._clean_up()\r\n\r\n    // Exit the runner.\r\n    this._exit()\r\n  }\r\n\r\n  /** Exit the experiment environment and execute the optional callback. */\r\n  _exit () {\r\n    // Leave the full screen mode\r\n    this._screen._fullScreenExit()\r\n\r\n    // Reset te size of the container and the canvas.\r\n    this._experiment._canvas._exitDisplay()\r\n\r\n    // Clear the experiment item.\r\n    this._experiment = null\r\n\r\n    // Check if a callback function is defined.\r\n    if (this._onFinished) {\r\n      // Execute callback function.\r\n      this._onFinished(this._data, this._session._session)\r\n    }\r\n  }\r\n\r\n  /** Exit a running experiment. */\r\n  exit () {\r\n    // Set state of the event system to break.\r\n    this._events._state = constants.TIMER_BREAK\r\n  }\r\n\r\n  /** Run an experiment */\r\n  run (context) {\r\n    // Build the experiment.\r\n    this._setupContext(context)\r\n  }\r\n}\r\n","/* eslint-disable no-undef */\n/* eslint-disable no-extend-native */\n/*\n * OsWeb\n *\n * An experiment research tool written in Javascript (ES2016) and HTML to be\n * used in Qualtrics or other web-based tools. Based upon OpenSesame.\n *\n * Author: drs. J. Bos, D. Schreij & S. Mathot\n *\n * Copyright (c) University of Groningen\n * Faculty of Behavioural and Social Sciences\n * Technical Support Service\n *\n */\n\nimport Runner from './system/runner.js'\n\nexport const VERSION_NAME = OSWEB_VERSION_NAME\nexport const VERSION_NUMBER = OSWEB_VERSION_NO\n\n// Add replaceAll function to string prototype\n// eslint-disable-next-line no-extend-native\nString.prototype.replaceAll = function (str1, str2, ignore) {\n  return this.replace(\n    new RegExp(\n      str1.replace(/([/,!\\\\^${}[]\\(\\)\\.\\*\\+\\?\\|<>-&])/g, '\\\\$&'),\n      (ignore ? 'gi' : 'g')),\n    (typeof (str2) === 'string') ? str2.replace(/\\$/g, '$$$$') : str2)\n}\n\n// Add _pySlide function to string prototype (HACK for the filbert interpreter).\nString.prototype._pySlice = function (start, end, step) {\n  if (end !== null) {\n    return this.slice(start, end)\n  } else {\n    return this.slice(start)\n  }\n}\n\n// Create the osweb library container.\nconst osweb = {\n  printVersionInfo: function () {\n    // Show library name and library version number in the console.\n    console.log(`${VERSION_NAME} v${VERSION_NUMBER}`)\n  },\n  getRunner: function (target) {\n    return new Runner(target)\n  }\n}\n\nexport default osweb\n","/* This is the entry script for the webpack builder\nThis script ties all needed modules or files together and provides the\ncorrect setting for the webpack-devserver\n*/\nimport './scss/osweb.scss'\nimport osweb from './js/osweb/index.js'\n\nif (typeof window !== 'undefined') {\n  window.alertify = require('alertifyjs')\n  require('alertifyjs/build/css/alertify.css')\n  require('alertifyjs/build/css/themes/default.css')\n  window.osweb = osweb\n  window.osweb.printVersionInfo()\n}\n\nif (module.hot) {\n  module.hot.accept()\n}\n","import { Container, Graphics, Sprite, Text, Texture } from 'pixi.js'\nimport Styles from './styles.js'\n\n/** Class representing a drawing canvas. */\nexport default class Canvas {\n  /**\n   * Create a canvas object which is used to show all visual stimuli.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   * @param {Boolean} auto_prepare - If true the canvas is prepared after drawing.\n   * @param {Object} style_args - Optional styling argument for the canvas.\n   */\n  constructor (experiment, auto_prepare) {\n    // Create and set public properties.\n    this.auto_prepare = (typeof auto_prepare === 'undefined') ? true : auto_prepare // Set autoprepare toggle (not supported yet).\n    this.experiment = experiment // Anchor to the experiment object.\n\n    // Create and set private properties.\n    this._container = new Container() // Create the container which represents the canvas.\n    this._font_string = 'bold 18px Courier New' // Default font definition string.\n    this._height = this.experiment._runner._renderer.height // Height of the HTML canvas used for drawing.\n    this._styles = new Styles() // The style container.\n    this._width = this.experiment._runner._renderer.width // Width of the HTML canvas used for drawing.\n    this._textures = []\n  }\n\n  /**\n   * Calculate the coordinates for the arraw shape.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Number} bodyWidth - The width of the element body.\n   * @param {Number} bodyLength - The height of the element body.\n   * @param {Number} headWidth - The width of the element head.\n   * @return {Array} - The coordinates defining the arrow element.\n   */\n  _arrow_shape (sx, sy, ex, ey, bodyWidth, bodyLength, headWidth) {\n    // Length\n    var d = Math.sqrt(Math.pow(ey - sy, 2) + Math.pow(sx - ex, 2))\n    var angle = Math.atan2(ey - sy, ex - sx)\n    var _headWidth = (1 - bodyWidth) / 2.0\n    bodyWidth = bodyWidth / 2.0\n\n    // calculate coordinates\n    var p4 = [ex, ey]\n    var p1 = [sx + bodyWidth * headWidth * Math.cos(angle - Math.PI / 2), sy + bodyWidth * headWidth * Math.sin(angle - Math.PI / 2)]\n    var p2 = [p1[0] + bodyLength * Math.cos(angle) * d, p1[1] + bodyLength * Math.sin(angle) * d]\n    var p3 = [p2[0] + _headWidth * headWidth * Math.cos(angle - Math.PI / 2), p2[1] + _headWidth * headWidth * Math.sin(angle - Math.PI / 2)]\n    var p7 = [sx + bodyWidth * headWidth * Math.cos(angle + Math.PI / 2), sy + bodyWidth * headWidth * Math.sin(angle + Math.PI / 2)]\n    var p6 = [p7[0] + bodyLength * Math.cos(angle) * d, p7[1] + bodyLength * Math.sin(angle) * d]\n    var p5 = [p6[0] + _headWidth * headWidth * Math.cos(angle + Math.PI / 2), p6[1] + _headWidth * headWidth * Math.sin(angle + Math.PI / 2)]\n\n    return [p1, p2, p3, p4, p5, p6, p7]\n  }\n\n  /**\n   * Checks if the supplied string contains HTML markup.\n   * @param {String} str - The string to check.\n   * @return {Boolean} - True if HTML markup was found, false if not.\n   */\n  _containsHTML (str) {\n    let doc\n    try {\n      doc = new DOMParser().parseFromString(str, 'text/html')\n      return Array.from(doc.childNodes).some(node => node.nodeType === 1)\n    } catch (e) {\n      console.error('Could not parse DOM: ' + e.message)\n    }\n  }\n\n  /** Exit the display and return to default settings. */\n  _exitDisplay () {\n    // Clear container.\n    this.clear()\n\n    // Set the cursor visibility to default (visible).\n    this.experiment._runner._renderer.view.style.cursor = 'default'\n\n    //  Set the renderer dimensions.\n    this.experiment._runner._renderer.resize(800, 600)\n\n    // Clear the renderer.\n    this.experiment._runner._renderer.backgroundColor = 0x000000\n    this.experiment._runner._renderer.clear()\n    this.experiment._runner._renderer.render(this._container)\n\n    try {\n      document.body.style.backgroundColor = '#FFFFFF'\n    } catch (e) {\n      console.log('Could not reset body color to white', e)\n    }\n  }\n\n  /**\n   * Checks if addiotional style is defined otherwise use default.\n   * @param {Object} styleArgs - The additional style.\n   * @return {Object} - returns a style object.\n   */\n  _getStyle (styleArgs) {\n    // Check if the supplied style does exist.\n    if (typeof (styleArgs) === 'undefined') {\n      return this._styles\n    } else {\n      const styles = new Styles()\n      Object.assign(styles, styleArgs)\n      return styles\n    }\n  }\n\n  /**\n   * Calculates the height, ascent en descent in pixels for the given font.\n   * @param {String} textLine The line of text.\n   * @param {String} fontFamily The font family to use.\n   * @param {Number} fontSize The size of the font.\n   * @return {Object} object containing the height, ascent en descent of the text.\n   */\n  _getTextBaseline (textLine, fontFamily, fontSize, fontBold) {\n    // Create the text element.\n    const text = document.createElement('span')\n    text.style.fontFamily = fontFamily || 'Arial'\n    text.style.fontWeight = (fontBold === true) ? 'bold' : 'normal'\n    text.style.fontSize = String(fontSize) + 'px'\n    text.innerHTML = textLine\n    // Create the calculation div.\n    const block = document.createElement('div')\n    block.style.display = 'inline-block'\n    block.style.lineHeight = 'normal'\n    // block.style.width = '1px'\n    // block.style.height = '0px'\n    // Create the container div.\n    const div = document.createElement('div')\n    div.append(text, block)\n    document.body.appendChild(div)\n\n    // Set the variables.\n    const result = {}\n    let rect\n    let top1\n    let top2\n\n    // Calculate the ascent\n    block.style.verticalAlign = 'baseline'\n    rect = block.getBoundingClientRect()\n    top1 = rect.top + document.body.scrollTop\n    rect = text.getBoundingClientRect()\n    top2 = rect.top + document.body.scrollTop\n    result.ascent = Math.round(top1 - top2)\n\n    // Calculate the descent and the heigt.\n    block.style.verticalAlign = 'bottom'\n    rect = block.getBoundingClientRect()\n    top1 = rect.top + document.body.scrollTop\n    rect = text.getBoundingClientRect()\n    top2 = rect.top + document.body.scrollTop\n    result.height = Math.round(top1 - top2)\n    result.descent = result.height - result.ascent\n\n    document.body.removeChild(div)\n\n    // Return the result.\n    return result\n  }\n\n  /**\n   * Returns the correct envelop setting to use.\n   * @param {String} env - Envelop parameter.\n   * @return {String} - The envelop type to use.\n   */\n  _match_env (env) {\n    if (['c', 'circular', 'round'].includes(env)) {\n      return 'c'\n    } else if (['g', 'gaussian', 'gauss', 'normal', 'rect', 'square'].includes(env)) {\n      return 'g'\n    } else if (['rectangular', 'rectangle'].includes(env)) {\n      return 'r'\n    } else if (['l', 'linear', 'lin', 'ln'].includes(env)) {\n      return 'l'\n    } else {\n      return 'g'\n    }\n  }\n\n  /**\n   * Parse recursively a HTML based text area and returns a set of text elements.\n   * @param {Object} htmlNode - The html node to process.\n   * @param {Object} textBlock - Object containing the translated text block.\n   * @param {Object} currentStyle - Object containing the current style to use.\n   */\n  _parseHtmlNode (htmlNode, textBlock, currentStyle) {\n    // Create a style for the current leven\n    var elementStyle = this._getStyle(currentStyle)\n\n    // Process the node content itself.\n    switch (htmlNode.nodeType) {\n    case 1:\n      // Select the proper html tag\n      switch (htmlNode.nodeName) {\n      case 'B':\n        // Process bold tag.\n        elementStyle.font_bold = true\n        break\n      case 'BR':\n        // Process break tag, get the total width of the line.\n        textBlock.row.height = (textBlock.row.height > 0) ? textBlock.row.height : textBlock.prev_height\n        textBlock.row.width = (textBlock.x_pos > textBlock.row.width) ? textBlock.x_pos : textBlock.row.width\n        textBlock.width = (textBlock.width > textBlock.row.width) ? textBlock.width : textBlock.row.width\n        textBlock.y_pos = textBlock.y_pos + textBlock.row.height\n        textBlock.x_pos = 4\n        textBlock.height = textBlock.height + textBlock.row.height\n        // new row with elements.\n        textBlock.rows.push(textBlock.row)\n        textBlock.row = {\n          ascent: 0,\n          width: 0,\n          height: 0,\n          text_elements: [],\n          text_dimensions: [],\n          text_underline: []\n        }\n        break\n      case 'I':\n        // Process italic tag.\n        elementStyle.font_italic = true\n        break\n      case 'SPAN':\n        // Get the style tokens.\n        if (htmlNode.attributes.length > 0) {\n          var tokens = htmlNode.attributes[0].value.split(';')\n          // parse through the style tokens.\n          for (var j = 0; j < tokens.length; j++) {\n            var property = tokens[j].slice(0, tokens[j].indexOf(':'))\n            var value = tokens[j].slice(tokens[j].indexOf(':') + 1, tokens[j].length)\n            // Set the supported properties.\n            switch (property) {\n            case 'color':\n              elementStyle.color = value\n              break\n            case 'font-size':\n              elementStyle.font_size = value\n              break\n            case 'font-family':\n              elementStyle.font_family = value\n              break\n            }\n          }\n        }\n        break\n      case 'U':\n        // Process underline tag.\n        elementStyle.font_underline = true\n        break\n      }\n      break\n    case 3:\n      // Create the text style element.\n      var textStyle = {\n        fontFamily: elementStyle.font_family,\n        fontStyle: (elementStyle.font_italic === true) ? 'italic' : 'normal',\n        fontWeight: (elementStyle.font_bold === true) ? 'bold' : 'normal',\n        fontSize: elementStyle.font_size,\n        fill: elementStyle.color\n      }\n\n      // Create the text element and get the dimension.\n      var bounds = {}\n      var textElement = new Text(htmlNode.textContent, textStyle)\n      this._textures.push(textElement)\n      textElement.getBounds(false, bounds)\n\n      // Get the height and descent (for vertical positioning);\n      var dimension = this._getTextBaseline(htmlNode.textContent, elementStyle.font_family, elementStyle.font_size, elementStyle.font_bold)\n\n      // Position the text element and update the width.\n      textElement.x = textBlock.x_pos\n      textElement.y = textBlock.y_pos\n      textBlock.x_pos = textBlock.x_pos + bounds.width\n      textBlock.row.width = (textBlock.x_pos > textBlock.row.width) ? textBlock.x_pos : textBlock.row.width\n      textBlock.width = (textBlock.width > textBlock.row.width) ? textBlock.width : textBlock.row.width\n      textBlock.row.height = ((bounds.height + 1) > textBlock.row.height) ? bounds.height + 1 : textBlock.row.height\n      textBlock.row.ascent = (dimension.ascent > textBlock.row.ascent) ? dimension.ascent : textBlock.row.ascent\n      textBlock.prev_height = textBlock.row.height\n      textBlock.row.text_elements.push(textElement)\n      textBlock.row.text_dimensions.push(dimension)\n      textBlock.row.text_underline.push(elementStyle.font_underline)\n      break\n    }\n\n    // Process the child nodes recursive (if any).\n    for (var i = 0; i < htmlNode.childNodes.length; i++) {\n      this._parseHtmlNode(htmlNode.childNodes[i], textBlock, elementStyle, (i === (htmlNode.childNodes.length - 1)))\n    }\n  }\n\n  /**\n   * Resizes the container div (osweb_div), which contains all elements on display\n   * @param {Number} width - Width to set.\n   * @param {Number} height -Hheight to set.\n   */\n  _resizeContainer (width, height) {\n    // Set the parent container dimensions.\n    this.experiment._runner._container.style.width = width + 'px'\n    this.experiment._runner._container.style.height = height + 'px'\n  }\n\n  /**\n   * Draws an arrow element on the canvas.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Number} bodyWidth - The width of the element body.\n   * @param {Number} bodyLength - The height of the element body.\n   * @param {Number} headWidth - The width of the element head.\n   * @param {Object} styleArgs - Optional styling arguments for the element.\n   */\n  arrow (sx, sy, ex, ey, bodyWidth, bodyLength, headWidth, styleArgs) {\n    // Calculate coordinate points for the arrow.\n    var points = this._arrow_shape(sx, sy, ex, ey, bodyWidth, bodyLength, headWidth)\n\n    // Draw the arrow as a polygon.\n    this.polygon(points, styleArgs)\n  }\n\n  /**\n   * Draws an arrow element on the canvas.\n   * @param {Number} sx - The x coordinate of the element.\n   * @param {Number} sy - The y coordinate of the element.\n   * @param {Number} ex - The radius the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  circle (x, y, r, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create a circle element.\n    var circle = new Graphics()\n    circle.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      circle.beginFill(elementStyle.color)\n      circle.drawCircle(0, 0, r)\n      circle.endFill()\n    } else {\n      circle.drawCircle(0, 0, r)\n    }\n    circle.x = x\n    circle.y = y\n\n    // Add the circle element to container.\n    this._container.addChild(circle)\n  }\n\n  /**\n   * Clear the current canvas.\n   * @param {Number} background_color - The color to draw (optional).\n   * @param {Object} style_args - JSON object containing style arguments (optional).\n   */\n  clear (backgroundColor, styleArgs) {\n    // Clear the stage by temoving al the child elements.\n    for (var i = this._container.children.length - 1; i >= 0; i--) {\n      this._container.removeChild(this._container.children[i])\n    }\n    let texture\n    while (this._textures.length > 0) {\n      texture = this._textures.pop()\n      texture.destroy(true)\n    }\n  }\n\n  /**\n   * Copies the contents of the passed canvas onto current one.\n   * @param  {osweb.canvas} canvas The source canvas to copy\n   * @return {void}\n   */\n  copy (canvas) {\n    this.clear()\n\n    // Loop over the shapes on the passed canvas and copy them onto the current one\n    for (const shape of canvas._container.children) {\n      this._container.addChild(shape.clone())\n    }\n  }\n\n  /**\n   * Draws an ellipse element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} w - The width the element.\n   * @param {Number} h - The height the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  ellipse (x, y, w, h, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create an ellipse element.\n    var ellipse = new Graphics()\n    ellipse.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      ellipse.beginFill(elementStyle.color)\n      ellipse.drawEllipse(0, 0, (w / 2), (h / 2))\n      ellipse.endFill()\n    } else {\n      ellipse.drawEllipse(0, 0, (w / 2), (h / 2))\n    }\n    ellipse.x = x + (w / 2)\n    ellipse.y = y + (h / 2)\n\n    // Add the ellipse element to container.\n    this._container.addChild(ellipse)\n  }\n\n  /**\n   * Draws a fixdot element on the canvas.\n   * @param {int} x - The x coordinate of the element.\n   * @param {int} y - The y coordinate of the element.\n   * @param {String} - The style of the fixation dot.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  fixdot (x, y, style, styleArgs) {\n    // Check the color and style arguments.\n    style = (typeof style === 'undefined') ? 'default' : style\n\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    if (typeof x === 'undefined') {\n      if (this.uniform_coordinates === true) {\n        x = 0\n      } else {\n        x = this._width / 2\n      }\n    }\n    if (typeof y === 'undefined') {\n      if (this.uniform_coordinates === true) {\n        y = 0\n      } else {\n        y = this._height / 2\n      }\n    }\n\n    var s = 4\n    var h = 2\n    if (style.indexOf('large') !== -1) {\n      s = 16\n    } else if ((style.indexOf('medium') !== -1) || (style === 'default')) {\n      s = 8\n    } else if (style.indexOf('small') !== -1) {\n      s = 4\n    } else {\n      this.experiment._runner._debugger.addError('Unknown style: ' + style)\n    }\n\n    var styles = new Styles()\n    if ((style.indexOf('open') !== -1) || (style === 'default')) {\n      styles._fill = true\n      styles._background_color = elementStyle.color\n      styles._color = elementStyle.color\n      this.ellipse(x - s, y - s, 2 * s, 2 * s, styles)\n      styles._background_color = elementStyle.background_color\n      styles._color = elementStyle.background_color\n      this.ellipse(x - h, y - h, 2 * h, 2 * h, styles)\n    } else if (style.indexOf('filled') !== -1) {\n      styles._fill = true\n      styles._background_color = elementStyle.color\n      styles._color = elementStyle.color\n      this.ellipse(x - s, y - s, 2 * s, 2 * s, styles)\n    } else if (style.indexOf('cross') !== -1) {\n      styles._penwidth = 1\n      styles._color = elementStyle.color\n      this.line(x, y - s, x, y + s, styles)\n      this.line(x - s, y, x + s, y, styles)\n    } else {\n      this.experiment._runner._debugger.addError('Unknown style: ' + style)\n    }\n  }\n\n  /**\n   * Draws a gabor element on the canvas.\n   *\n   * @param {Number} x The x coordinate of the element\n   * @param {Number} y The y coordinate of the element\n   * @param {float} orient The rotation of the element (range between 0 and 1)\n   * @param {float} freq The frequency of the bands\n   * @param {String} env The type of envelope used for the element\n   * @param {*} size The size of the gabor\n   * @param {*} stdev The standard deviation of the guass fade\n   * @param {*} phase The phase of the element (start offset)\n   * @param {*} color1 The first color for the element\n   * @param {*} color2 The second color for the element\n   * @param {*} bgmode The background mode of the element\n   * @memberof Canvas\n   */\n  gabor (x, y, orient, freq, env, size, stdev, phase, color1, color2, bgmode) {\n    // Returns a surface containing a Gabor patch.\n    env = this._match_env(env)\n\n    // Create a temporary canvas to make an image data array.\n    const canvas = document.createElement('canvas')\n    canvas.width = size\n    canvas.height = size\n    const ctx = canvas.getContext('2d')\n    const px = ctx.getImageData(0, 0, size, size)\n\n    // Conver the orientation to radians.\n    orient = Math.PI * orient / -180\n    color1 = this._styles._convertColorValueToRGB(color1)\n    color2 = this._styles._convertColorValueToRGB(color2)\n\n    // rx and ry reflect the real coordinates in the target image\n    for (let rx = 0; rx < size; rx++) {\n      for (let ry = 0; ry < size; ry++) {\n        // Distance from the center\n        const dx = rx - 0.5 * size\n        const dy = ry - 0.5 * size\n\n        // Get the coordinates (x, y) in the unrotated Gabor patch.\n        const t = Math.atan2(dy, dx) + orient\n        const r = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))\n        const ux = r * Math.cos(t)\n        const uy = r * Math.sin(t)\n        let f\n\n        // Get the amplitude without the envelope (0 .. 1).\n        let amp = 0.5 + 0.5 * Math.cos(2.0 * Math.PI * (ux * freq + phase))\n\n        // The envelope adjustment\n        if (env === 'g') {\n          // $f = exp(-0.5 * pow($x / $std, 2) - 0.5 * pow($y / $std, 2));\n          f = Math.exp(-0.5 * Math.pow(ux / stdev, 2) - 0.5 * Math.pow(uy / stdev, 2))\n        } else if (env === 'l') {\n          f = Math.max(0, (0.5 * size - r) / (0.5 * size))\n        } else if (env === 'c') {\n          if (r > 0.5 * size) {\n            f = 0.0\n          } else {\n            f = 1.0\n          }\n        } else {\n          f = 1.0\n        }\n\n        // Apply the envelope\n        if (bgmode === 'avg') {\n          amp = amp * f + 0.5 * (1.0 - f)\n        } else {\n          amp = amp * f\n        }\n\n        // Recalculate the color values.\n        const color = {\n          r: color1[0] * amp + color2[0] * (1.0 - amp),\n          g: color1[1] * amp + color2[1] * (1.0 - amp),\n          b: color1[2] * amp + color2[2] * (1.0 - amp)\n        }\n\n        // Set the color values at pixel level.\n        var position = rx * 4 + (ry * size * 4)\n        px.data[position] = color.r\n        px.data[position + 1] = color.g\n        px.data[position + 2] = color.b\n        px.data[position + 3] = 255\n      }\n    }\n\n    // Put the calculated data back on the canvas and create an image of it.\n    ctx.putImageData(px, 0, 0)\n\n    // Retrieve the image from the recourses\n    const texture = Texture.from(canvas)\n    this._textures.push(texture)\n    var sprite = new Sprite(texture)\n\n    // Position the image.\n    sprite.x = x - (size / 2)\n    sprite.y = y - (size / 2)\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Returns the canvas height\n   * @return {Number} - The height of the canvas in pixels.\n   */\n  get height () {\n    return this._height\n  }\n\n  /**\n   * Returns the canvas width\n   * @return {Number} - The width of the canvas in pixels.\n   */\n  get width () {\n    return this._width\n  }\n\n  /**\n   * Draws an image element on the canvas.\n   * @param {String} fname - The name of the element to draw.\n   * @param {Boolean|Number|String} center - If true the image is centered.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} scale - The scaling factor of the element.\n   * @param {Number} rotation - Clockwise rotation in degrees.\n   */\n  image (fname, center, x, y, scale, rotation) {\n    const name = this.experiment._runner._syntax.remove_quotes(fname)\n    const path = this.experiment._runner._pool[name]\n    if (typeof (path) === 'undefined')\n      this.experiment._runner._debugger.addError(`\"${fname}\" does not exist in the file pool`)\n    const img = path.data\n    // Create a temporary canvas to make an image data array.\n    const canvas = document.createElement('canvas')\n    canvas.width = img.width\n    canvas.height = img.height\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n    const texture = Texture.from(canvas)\n    this._textures.push(texture)\n    const sprite = new Sprite(texture)\n    // sprite.anchor.set(.5)\n    if (typeof scale !== 'undefined') {\n      sprite.scale.x = scale\n      sprite.scale.y = scale\n    }\n    if (typeof rotation !== 'undefined')\n      sprite.angle = rotation\n    // Position the image\n    if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n      sprite.x = Math.floor(x - (sprite.width / 2))\n      sprite.y = Math.floor(y - (sprite.height / 2))\n    } else {\n      sprite.x = x\n      sprite.y = y\n    }\n    console.log(sprite.x)\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Initializes the  display container on which the canvas is displayed.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   */\n  init_display (experiment) {\n    // Set the dimension properties.\n    this._height = experiment.vars.height\n    this._width = experiment.vars.width\n\n    // Set the renderer dimensions.\n    experiment._runner._renderer.resize(this._width, this._height)\n\n    // Set the renderer background color.\n    experiment._runner._renderer.clear(this._styles._convertColorValue(experiment.vars.background, 'number'))\n    experiment._runner._renderer.backgroundColor = this._styles._convertColorValue(experiment.vars.background, 'number')\n\n    // PIXU: Set the cursor visibility to none (default).\n    experiment._runner._renderer.view.style.cursor = 'none'\n\n    // Start the fullscreen mode (if enabled).\n    experiment._runner._screen._fullScreenInit()\n\n    // Set focus to the experiment canvas.\n    experiment._runner._renderer.view.focus()\n  }\n\n  /**\n   * Draws a line element on the canvas.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  line (sx, sy, ex, ey, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create a line element.\n    var line = new Graphics()\n    line.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    line.moveTo(0, 0)\n    line.lineTo(ex - sx, ey - sy)\n    line.x = sx\n    line.y = sy\n\n    // Add the line element to container.\n    this._container.addChild(line)\n  }\n\n  /**\n   * Draws a gabor element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {String} env - The type of envelop used  for the element.\n   * @param {Object} size - Optional styling argument for the element.\n   * @param {Number} stdev - The standard deviation  for the element.\n   * @param {Number|String} color1 - The first color for the element.\n   * @param {Number|String} color2 - Teh second color for the element.\n   * @param {String} bgmode - The type of background mode for the element.\n   */\n  noise (x, y, env, size, stdev, color1, color2, bgmode) {\n    // Returns a surface containing a noise patch.\n    env = this._match_env(env)\n\n    // Create a temporary canvas to make an image data array.\n    var canvas = document.createElement('canvas')\n    canvas.width = size\n    canvas.height = size\n    var ctx = canvas.getContext('2d')\n    var px = ctx.getImageData(0, 0, size, size)\n\n    // Create a surface\n    color1 = this._styles._convertColorValueToRGB(color1)\n    color2 = this._styles._convertColorValueToRGB(color2)\n\n    // rx and ry reflect the real coordinates in the target image\n    for (let rx = 0; rx < size; rx++) {\n      for (let ry = 0; ry < size; ry++) {\n        // Distance from the center\n        const ux = rx - 0.5 * size\n        const uy = ry - 0.5 * size\n        const r = Math.sqrt(Math.pow(ux, 2) + Math.pow(uy, 2))\n        let f\n        // Get the amplitude without the envelope (0 .. 1)\n        var amp = Math.random()\n        // The envelope adjustment\n        if (env === 'g') {\n          f = Math.exp(-0.5 * Math.pow(ux / stdev, 2) - 0.5 * Math.pow(uy / stdev, 2))\n        } else if (env === 'l') {\n          f = Math.max(0, (0.5 * size - r) / (0.5 * size))\n        } else if (env === 'c') {\n          if (r > 0.5 * size) {\n            f = 0.0\n          } else {\n            f = 1.0\n          }\n        } else {\n          f = 1.0\n        }\n\n        // Apply the envelope\n        if (bgmode === 'avg') {\n          amp = amp * f + 0.5 * (1.0 - f)\n        } else {\n          amp = amp * f\n        }\n\n        // Recalculate the collor values.\n        const color = {\n          r: color1[0] * amp + color2[0] * (1.0 - amp),\n          g: color1[1] * amp + color2[1] * (1.0 - amp),\n          b: color1[2] * amp + color2[2] * (1.0 - amp)\n        }\n\n        // Set the color values at pixel level.\n        var position = rx * 4 + (ry * size * 4)\n        px.data[position] = color.r\n        px.data[position + 1] = color.g\n        px.data[position + 2] = color.b\n        px.data[position + 3] = 255\n      }\n    }\n\n    // Put the calculated data back on the canvas and create an image of it.\n    ctx.putImageData(px, 0, 0)\n\n    // Retrieve the image from the recourses\n    const texture = Texture.from(canvas)\n    this._textures.push(texture)\n    var sprite = new Sprite(texture)\n\n    // Position the image.\n    sprite.x = x - (size / 2)\n    sprite.y = y - (size / 2)\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Draws a polygon element on the canvas.\n   * @param {Array} verticles - The coordinates of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  polygon (verticles, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Adjust the points.\n    var path = []\n    for (var i = 0; i < verticles.length; i++) {\n      path.push(verticles[i][0])\n      path.push(verticles[i][1])\n    }\n    path.push(verticles[0][0])\n    path.push(verticles[0][1])\n\n    // Create a polygon element.\n    var polygon = new Graphics()\n    polygon.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) polygon.beginFill(elementStyle.color)\n    polygon.drawPolygon(path)\n    if (elementStyle.fill === true) polygon.endFill()\n\n    // Add the polygon item to container.\n    this._container.addChild(polygon)\n  }\n\n  /** Implements the prepare phase of a canvas. */\n  prepare () {}\n\n  /**\n   * Draws a rectangle element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} w - The width of the element.\n   * @param {Number} h - The height of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  rect (x, y, w, h, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n    // Create a rectangle element.\n    var rectangle = new Graphics()\n    rectangle.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      rectangle.beginFill(elementStyle.color)\n      rectangle.drawRect(0, 0, w, h)\n      rectangle.endFill()\n    } else {\n      rectangle.drawRect(0, 0, w, h)\n    }\n    rectangle.x = x\n    rectangle.y = y\n\n    // Add the rectangle element to container.\n    this._container.addChild(rectangle)\n  }\n\n  /**\n   * Returns the size ion pixels of the canvas.\n   * @return {Array} - The widht an height as an array tupple.\n   */\n  size () {\n    // Create object tuple.\n    var size = {\n      width: this._width,\n      height: this._height\n    }\n    return size\n  }\n\n  /**\n   * Show a canvas on the ptimary canvas.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   * @return {Number} - The current time stamp.\n   */\n  show (experiment) {\n    // Check parameter.\n    experiment = (typeof experiment !== 'undefined') ? experiment : this.experiment\n\n    // Add the container to the stage object and update the stage.\n    this.experiment._currentCanvas = this\n\n    // Set the scaling.\n    this._container.scale.x = this.experiment._scale_x\n    this._container.scale.y = this.experiment._scale_y\n\n    // Set renderer background and render the content.\n    this.experiment._runner._renderer.backgroundColor = this._styles._background_color\n    try {\n      const c = this._styles.rgb\n      document.body.style.backgroundColor = `rgb(${c.r},${c.g},${c.b})`\n    } catch (e) {\n      console.error(e)\n    }\n    this.experiment._runner._renderer.render(this._container)\n    return (experiment != null ? experiment.clock.time() : null)\n  }\n\n  /**\n   * Draws a text element on the canvas.\n   * @param {String} txt - The x coordinate of the element.\n   * @param {Boolean} center - If true the text must be centered.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Boolean} html - If true the text parameter contains HTML tags.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  text (txt, center, x, y, html, styleArgs) {\n    // Newlines are not dealt with correctly, so we convert them to <br />\n    // tags, which results in the same behavior as the desktop.\n    txt = txt.toString().replace('\\n', '<br />')\n    // Get the style\n    const elementStyle = this._getStyle(styleArgs)\n\n    // Only jump through the HTML rendering hoops if the html == 'yes' and\n    // text actually contains HTML markup.\n    if ((html === 'yes') && (this._containsHTML(txt))) {\n      //  Define the text block object.\n      const textBlock = {\n        element_style: elementStyle,\n        height: 0,\n        prev_height: 0,\n        row: {\n          ascent: 0,\n          height: 0,\n          text_elements: [],\n          text_dimensions: [],\n          text_underline: [],\n          width: 0\n        },\n        rows: [],\n        styles: [],\n        width: 0,\n        x_pos: 4,\n        y_pos: 0\n      }\n\n      // First create a div container for parsing the html text.\n      const div = document.createElement('div')\n      document.body.appendChild(div)\n      div.style.fontFamily = elementStyle.font_family\n      div.style.fontSize = String(elementStyle.font_size) + 'px'\n      div.style.fontWeight = (elementStyle.font_bold === true) ? 'bold' : 'normal'\n      div.style.lineHeight = 'normal'\n      div.style.display = 'inline-block'\n      div.style.visibility = 'hidden'\n      div.innerHTML = txt\n\n      // Parse the html recursive.\n      this._parseHtmlNode(div, textBlock, elementStyle)\n\n      // Remove the html div.\n      document.body.removeChild(div)\n\n      // Add the last row (if any).\n      if (textBlock.row.text_elements.length !== 0) {\n        textBlock.height = textBlock.height + textBlock.row.height\n        textBlock.rows.push(textBlock.row)\n      }\n\n      // Recalculate the x and y positions depending on height, width and centering.\n      textBlock.y_pos = 0\n      for (let i = 0; i < textBlock.rows.length; i++) {\n        // Parse a textline.\n        for (let j = 0; j < textBlock.rows[i].text_elements.length; j++) {\n          // Check for vertical correction.\n          const adjust = textBlock.rows[i].ascent - textBlock.rows[i].text_dimensions[j].ascent\n          textBlock.rows[i].text_elements[j].y = textBlock.y_pos + adjust\n\n          // Check for horizontal centering.\n          if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n            textBlock.rows[i].text_elements[j].x = textBlock.rows[i].text_elements[j].x + x - Math.floor(textBlock.rows[i].width / 2)\n            textBlock.rows[i].text_elements[j].y = textBlock.rows[i].text_elements[j].y + y - Math.floor(textBlock.height / 2)\n          } else {\n            textBlock.rows[i].text_elements[j].x = textBlock.rows[i].text_elements[j].x + x\n            textBlock.rows[i].text_elements[j].y = textBlock.rows[i].text_elements[j].y + y + 6\n          }\n\n          // if underlined add additional styling.\n          if (textBlock.rows[i].text_underline[j] === true) {\n            this.line(textBlock.rows[i].text_elements[j].x,\n              textBlock.rows[i].text_elements[j].y + textBlock.rows[i].text_dimensions[j].ascent + 7,\n              textBlock.rows[i].text_elements[j].x + textBlock.rows[i].text_elements[j].width,\n              textBlock.rows[i].text_elements[j].y + textBlock.rows[i].text_dimensions[j].ascent + 7,\n              elementStyle)\n          }\n\n          //  Add text element to the stage.\n          this._container.addChild(textBlock.rows[i].text_elements[j])\n        }\n        textBlock.y_pos = textBlock.y_pos + textBlock.rows[i].height\n      }\n    } else {\n      //  Create the text element\n      var textStyle = {\n        fontFamily: elementStyle.font_family,\n        fontSize: elementStyle.font_size,\n        fontWeight: (elementStyle.font_bold === true) ? 'bold' : 'normal',\n        fill: elementStyle.color\n      }\n      var textElement = new Text(txt, textStyle)\n      this._textures.push(textElement)\n      if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n        textElement.x = Math.floor(x - (textElement.width / 2))\n        textElement.y = Math.floor(y - (textElement.height / 2))\n      } else {\n        textElement.x = x\n        textElement.y = y\n      }\n      console.log(textElement.x)\n\n      //  Add text element to the stage.\n      this._container.addChild(textElement)\n      \n    }\n  }\n}\n","import isInteger from 'lodash/isInteger'\nimport isArray from 'lodash/isArray'\nimport colorConvert from 'color-convert'\n\nconst colorHex = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i\nconst colorRGB255 = /rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)/i\nconst colorRGBPerc = /rgb\\(\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*%\\s*,\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*%\\s*,\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*%\\s*\\)/i\nconst colorHSV = /hsv\\(\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*\\s*,\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*%\\s*,\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*%\\s*\\)/i\nconst colorHSL = /hsl\\(\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*\\s*,\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*%\\s*,\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*%\\s*\\)/i\nconst colorLAB = /lab\\(\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*\\s*,\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*\\s*,\\s*([+-]?([0-9]+([.][0-9]*)?|[.][0-9]+))\\s*\\s*\\)/i\n\n/** Class representing a style container. */\nexport default class Styles {\n  /** Styles is a simple class that holds information about the style. */\n  constructor (item) {\n    this._initConstants()\n    // Set class private properties.\n    if (typeof (item) === 'undefined') {\n      this._background_color = 0x000000\n      this._bidi = false\n      this._color = 'white'\n      this._fill = false\n      this._font_bold = false\n      this._font_family = 'Arial'\n      this._font_italic = false\n      this._font_size = 24\n      this._font_underline = false\n      this._html = false\n      this._penwidth = 1\n    } else {\n      this.background_color = item.vars.get('background', 0x000000)\n      this.bidi = item.vars.get('bidi', 'no')\n      this.color = item.vars.get('foreground', 'white')\n      this.fill = item.vars.get('fill', 'no') === 'yes'\n      this.font_bold = item.vars.get('font_bold', 'no')\n      this.font_family = item.vars.get('font_family', 'Arial')\n      this.font_italic = item.vars.get('font_italic', 'no')\n      this.font_size = item.vars.get('font_size', 24)\n      this.font_underline = item.vars.get('font_underline', 'no')\n      this.html = item.vars.get('html', 'no')\n      this.penwidth = item.vars.get('penwidth', 1)\n    }\n  }\n\n  /**\n   * Converts a color value to a numeric value for use in PIXI. This should\n   * accept all color specifications as described here:\n   * - https://osdoc.cogsci.nl/3.3/manual/python/canvas/#colors\n   * @param {String|Number|Object} color - The color to convert.\n   * @return {Number} - The color value.\n   */\n  _convertColorValue (color) {\n    const [r, g, b] = this._convertColorValueToRGB(color).map(Math.round)\n    return 65536 * r + 256 * g + b\n  }\n  \n  /**\n   * Extracts three float numbers from a color based on a regular expression\n   * that matches three float numbers.\n   * @param {String} color\n   * @return {Array<Number>}\n   **/\n  _matchFloats(color, re) {\n    const m = color.match(re)\n    return [m[1], m[4], m[7]].map(Number)\n  }\n\n  _convertColorValueToRGB (color) {\n    if (typeof (color) === 'string') {\n      color = color.toLowerCase()\n      const rgb = colorConvert.keyword.rgb(color)\n      if (typeof rgb !== 'undefined')\n        return rgb\n      if (colorHex.test(color) === true)\n        return colorConvert.hex.rgb(color)\n      if (colorRGB255.test(color) === true)\n        return color.match(colorRGB255).slice(1, 4).map(Number)\n      if (colorRGBPerc.test(color) === true)\n        return this._matchFloats(color, colorRGBPerc).map(\n            perc => perc * 2.55)\n      if (colorHSV.test(color) === true)\n        return colorConvert.hsv.rgb(this._matchFloats(color, colorHSV))\n      if (colorHSL.test(color) === true)\n        return colorConvert.hsl.rgb(this._matchFloats(color, colorHSL))\n      if (colorLAB.test(color) === true)\n        return colorConvert.lab.rgb(this._matchFloats(color, colorLAB))\n      if (!isNaN(Number(color)))  // For single numbers a strings\n        color = Number(color)\n    }\n    if (isInteger(color))\n      return [color, color, color]\n    if (isArray(color) && color.length == 3)\n      return color.map(Number)\n    throw 'Invalid color specification: ' + color + ' (' + typeof color + ')'\n  }\n\n  get rgb () {\n    return this._convertColorValue(this._background_color)\n  }\n\n  set rgb (val) {\n  }\n\n  /**\n   * Checks if the passed value is an integer.\n   * @param {Number} value -  The value to check.\n   * @return {Boolean} - True if passed value is an integer.\n   */\n  _isInt (value) {\n    return isInteger(value)\n  }\n\n  /**\n   * Checks if value is possibly specified as 'yes'/'no' or 1/0 instead of\n   * true or false (as is done in OS script). Convert 'yes' and 'no' values\n   * to booleans\n   * @param {Number|String} value - The value to check.\n   * @return {Boolean} - The original boolean, or true if value was 'yes'.\n   */\n  _checkVal (value) {\n    return [true, 'yes', 1, '1'].indexOf(value) !== -1\n  }\n\n  /**\n   * Get the background_color value.\n   * @return {String} The background_color value.\n   */\n  get background_color () {\n    return this._background_color\n  }\n\n  /**\n   * Set the background_color value.\n   * @param {Number|String} val - The background_color value to set.\n   */\n  set background_color (val) {\n    this._background_color = this._convertColorValue(val, 'number')\n  }\n\n  /**\n   * Get the bidi value.\n   * @return {Boolean} The bidi value.\n   */\n  get bidi () {\n    return this._bidi\n  }\n\n  /**\n   * Set the bidi value.\n   * @param {Boolean} val - The bidi value to set.\n   */\n  set bidi (val) {\n    this._bidi = this._checkVal(val)\n  }\n\n  /**\n   * Get the color value.\n   * @return {String} The color value.\n   */\n  get color () {\n    return this._color\n  }\n\n  /**\n   * Set the color value.\n   * @param {Number|String} val - The color value to set.\n   */\n  set color (val) {\n    this._color = this._convertColorValue(val, 'number')\n  }\n\n  /**\n   * Get the fill value.\n   * @return {Boolean} The fill value.\n   */\n  get fill () {\n    return this._fill\n  }\n\n  /**\n   * Set the fill value.\n   * @param {Boolean} val - The fill value to set.\n   */\n  set fill (val) {\n    this._fill = ([1, '1', true, 'yes'].indexOf(val) !== -1)\n  }\n\n  /**\n   * Get the font_bold value.\n   * @return {Boolean} The font_bold value.\n   */\n  get font_bold () {\n    return this._font_bold\n  }\n\n  /**\n   * Set the font_bold value.\n   * @param {Boolean} val - The font_bold value to set.\n   */\n  set font_bold (val) {\n    this._font_bold = this._checkVal(val)\n  }\n\n  /**\n   * Get the font_family value.\n   * @return {String} The font_family value.\n   */\n  get font_family () {\n    return this._font_family\n  }\n\n  /**\n   * Set the font_family value.\n   * @param {String} val - The font_family value to set.\n   */\n  set font_family (val) {\n    if (val in this._DEFAULT_FONTS) {\n      this._font_family = this._DEFAULT_FONTS[val]\n    } else {\n      this._font_family = val\n    }\n  }\n\n  /**\n   * Get the font_italic value.\n   * @return {Boolean} The font_italic value.\n   */\n  get font_italic () {\n    return this._font_italic\n  }\n\n  /**\n   * Set the font_italic value.\n   * @param {Boolean} val - The font_bold value to set.\n   */\n  set font_italic (val) {\n    this._font_italic = this._checkVal(val)\n  }\n\n  /**\n   * Get the font_size value.\n   * @return {Number} The font_size value.\n   */\n  get font_size () {\n    return this._font_size\n  }\n\n  /**\n   * Set the font_size value.\n   * @param {Number} val - The font_size value to set.\n   */\n  set font_size (val) {\n    if (!this._isInt(val)) {\n      // remove px part\n      this._font_size = Number(val.slice(0, -2))\n    } else {\n      this._font_size = val\n    }\n  }\n\n  /**\n   * Get the font_underline value.\n   * @return {Boolean} The font_underline value.\n   */\n  get font_underline () {\n    return this._font_underline\n  }\n\n  /**\n   * Set the font_underline value.\n   * @param {Boolean} val - The font_underline value to set.\n   */\n  set font_underline (val) {\n    this._font_underline = this._checkVal(val)\n  }\n\n  /**\n   * Get the html value.\n   * @return {Boolean} The html value.\n   */\n  get html () {\n    return this._html\n  }\n\n  /**\n   * Set the html value.\n   * @param {Boolean} val - The html value to set.\n   */\n  set html (val) {\n    this._html = this._checkVal(val)\n  }\n\n  /**\n   * Get the penwidth value.\n   * @return {Boolean} The penwidth value.\n   */\n  get penwidth () {\n    return this._penwidth\n  }\n\n  /**\n   * Set the penwidth value.\n   * @param {Boolean} val - The penwidth value to set.\n   */\n  set penwidth (val) {\n    if (!this._isInt(val)) {\n      this._penwidth = 1\n    }\n    this._penwidth = val\n  }\n\n  _initConstants () {\n    this._DEFAULT_FONTS = {\n      sans: 'Droid Sans',\n      serif: 'Droid Serif',\n      mono: 'Droid Sans Mono',\n      'chinese-japanese-korean': 'WenQuanYi Micro Hei',\n      arabic: 'Droid Arabic Naskh',\n      hebrew: 'Droid Sans Hebrew',\n      hindi: 'Lohit Hindi'\n    }\n  }\n}\n","import Styles from '../backends/styles.js'\nimport Canvas from '../backends/canvas.js'\n\n/**\n * The `Canvas` class is used to present visual stimuli. You generally\n * create a `Canvas` object with the `Canvas()` factory function. Because\n * `Canvas()` is a function, you do *not* need to use `new` when calling it.\n * The JavaScript `Canvas` class mimicks the corresponding Python `Canvas`\n * class.\n * \n * __Style keywords__ can be passed to all functions that accept `styleArgs`.\n * Style keywords can also be set as properties of the `Canvas` object. For an\n * overview of style keywords, see the\n * [Python `Canvas` documentation](%url:manual/python/canvas%).\n * \n * __Important:__ JavaScript doesn't support named parameters (or: keywords).\n * Therefore, parameters are passed an `Object` with named properties and\n * default values. Like so:\n *\n * ```js\n * var myCanvas = Canvas()\n * // (correct) pass parameters as an Object ...\n * myCanvas.fixdot({color: 'red'})\n * // (incorrect) ... and *not* as named parameters\n * // myCanvas.fixdot(color='red')\n * myCanvas.show()\n * ```\n *\n * [TOC]\n *\n * @class\n * @name Canvas\n **/ \nexport default class CanvasHandler {\n\n  constructor (experiment, styleArgs = {}) {\n    this._style = new Styles(experiment)\n    this._canvas = new Canvas(experiment)\n    this._canvas._styles = this._style\n    Object.assign(this._style, styleArgs)\n    this._xc = this._canvas.width / (2 * experiment._scale_x)\n    this._yc = this._canvas.height / (2 * experiment._scale_y)\n  }\n  \n  get color() {return this._style.color}\n  set color(val) {this._style.color = val}\n  get background_color() {return this._style.background_color}\n  set background_color(val) {this._style.background_color = val}\n  get fill() {return this._style.fill}\n  set fill(val) {this._style.fill = val}\n  get html() {return this._style.html}\n  set html(val) {this._style.html = val}\n  get font_family() {return this._style.font_family}\n  set font_family(val) {this._style.font_family = val}\n  get font_size() {return this._style.font_size}\n  set font_size(val) {this._style.font_size = val}\n  get font_italic() {return this._style.font_italic}\n  set font_italic(val) {this._style.font_italic = val}\n  get font_bold() {return this._style.font_bold}\n  set font_bold(val) {this._style.font_bold = val}\n  get font_underline() {return this._style.font_underline}\n  set font_underline(val) {this._style.font_underline = val}\n  \n  _element_style (styleArgs) {\n    if (typeof styleArgs === \"undefined\") {\n      return this._style\n    }\n    const style = new Styles()\n    Object.assign(style, this._style)\n    Object.assign(style, styleArgs)\n    return style\n  }\n  \n  /**\n   * Draws an arrow. An arrow is a polygon consisting of 7 vertices, with an\n   * arrowhead pointing at (ex, ey).\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * var w = vars.width / 2\n   * var h = vars.height / 2\n   * // Important: parameters are passed as an Object\n   * myCanvas.arrow({sx: 0, sy: 0, w: w, h: h, head_width:100, body_length:0.5})\n   *\n   * @param {Object} obj\n   * @param {Number} obj.sx=0\n   * @param {Number} obj.sy=0\n   * @param {Number} obj.ex=50\n   * @param {Number} obj.ey=0\n   * @param {Number} obj.body_length=0.8\n   * @param {Number} obj.body_width=0.5\n   * @param {Number} obj.head_width=30\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.arrow\n   * @function\n   **/\n  arrow({sx = 0, sy = 0, ex = 50, ey = 0, body_length = 0.8, body_width = 0.5,\n      head_width = 30, ...styleArgs} = {}) {\n    this._canvas.arrow(\n        sx + this._xc,\n        sy + this._yc,\n        ex + this._xc,\n        ey + this._yc,\n        body_width,\n        body_length,\n        head_width,\n        this._element_style(styleArgs))\n  }\n  \n  /**\n   *\t Clears the canvas with the current background color. Note that it is\n   *\t generally faster to use a different canvas for each experimental\n   *\t display than to use a single canvas and repeatedly clear and redraw\n   *\t it.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * myCanvas.fixdot({color: 'green'})\n   * myCanvas.show()\n   * // do something\n   * myCanvas.clear()\n   * myCanvas.fixdot({color: 'red'})\n   * myCanvas.show()\n   *\n   * @param {Object} [styleArgs={}]\n   * @name Canvas.clear\n   * @function\n   **/\n  clear(styleArgs = {}) {\n    this._canvas.clear(this._element_style(styleArgs).background_color)\n  }\n  \n  /**\n   * Draws a circle.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * myCanvas.circle({x: 100, y: 100, r: 50, fill: true, color:'red'})\n   *\n   * @param {Object} obj\n   * @param {Number} obj.x=0\n   * @param {Number} obj.y=0\n   * @param {Number} obj.r=50\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.circle\n   * @function\n   **/\n  circle({x = 0, y = 0, r = 50, ...styleArgs} = {}) {\n    this._canvas.circle(\n        x + this._xc,\n        y + this._yc,\n        r,\n        this._element_style(styleArgs))\n  }\n\n  /**\n   * Draws an ellipse.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * myCanvas.ellipse({x: -10, y: -10, w: 20, h: 20, fill:true})\n   *\n   * @param {Object} obj\n   * @param {Number} obj.x=-50\n   * @param {Number} obj.y=-25\n   * @param {Number} obj.w=100\n   * @param {Number} obj.h=50\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.ellipse\n   * @function\n   **/\n  ellipse({x = -50, y = -25, w = 100, h = 50, ...styleArgs} = {}) {\n    this._canvas.ellipse(\n        x + this._xc,\n        y + this._yc,\n        w,\n        h,\n        this._element_style(styleArgs))\n  }\n  \n  /**\n   * Draws a fixation dot. The default style is medium-open.\n   * \n   * - 'large-filled' is a filled circle with a 16px radius.\n   * - 'medium-filled' is a filled circle with an 8px radius.\n   * - 'small-filled' is a filled circle with a 4px radius.\n   * - 'large-open' is a filled circle with a 16px radius and a 2px hole.\n   * - 'medium-open' is a filled circle with an 8px radius and a 2px hole.\n   * - 'small-open' is a filled circle with a 4px radius and a 2px hole.\n   * - 'large-cross' is 16px cross.\n   * - 'medium-cross' is an 8px cross.\n   * - 'small-cross' is a 4px cross.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * myCanvas.fixdot()\n   *\n   * @param {Object} obj\n   * @param {Number} obj.x=0\n   * @param {Number} obj.y=0\n   * @param {String} obj.style='default'\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.fixdot\n   * @function\n   **/\n  fixdot({x = 0, y = 0, style = 'default', ... styleArgs} = {}) {\n    this._canvas.fixdot(\n        x + this._xc,\n        y + this._yc,\n        style,\n        this._element_style(styleArgs))\n  }\n  \n  /**\n   * Draws a gabor patch.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * myCanvas.gabor({x: 100, y: 100, orient: 45, freq: .05})\n   *\n   * @param {Object} obj\n   * @param {Number} obj.x=0\n   * @param {Number} obj.y=0\n   * @param {Number} obj.orient=0\n   * @param {Number} obj.freq=.1\n   * @param {String} obj.env='gaussian'\n   * @param {Number} obj.size=96\n   * @param {Number} obj.stdev=12\n   * @param {Number} obj.phase=0\n   * @param {String} obj.col1='white'\n   * @param {String} obj.col2='black'\n   * @param {String} obj.bgmode='avg'\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.gabor\n   * @function\n   **/\n  gabor({x = 0, y = 0, orient = 0, freq = .1, env = 'gaussian', size = 96,\n      stdev = 12, phase = 0, col1 = 'white', col2 = 'black',\n      bgmode = 'avg'} = {}) {\n    this._canvas.gabor(\n        x + this._xc,\n        y + this._yc,\n        orient,\n        freq,\n        env,\n        size,\n        stdev,\n        phase,\n        col1,\n        col2,\n        bgmode)\n  }\n  \n  /**\n   * Draws an image from a file in the file pool.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * myCanvas.image({fname: 'image_in_pool.png'})\n   *\n   * @param {Object} obj\n   * @param {String} obj.fname\n   * @param {Boolean} obj.center=true\n   * @param {Number} obj.x=0\n   * @param {Number} obj.y=0\n   * @param {Number} obj.scale=1\n   * @param {Number} obj.rotation=0\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.image\n   * @function\n   **/\n  image({fname, center = true, x = 0, y = 0, scale = 1, rotation = 0} = {}) {\n    if (typeof fname === \"undefined\") {\n      throw \"fname is a required parameter for Canvas.image()\"\n    }\n    this._canvas.image(\n        fname,\n        center,\n        x + this._xc,\n        y + this._yc,\n        scale,\n        rotation)\n  }\n  \n  /**\n   * Draws a line.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * var ex = vars.width / 2\n   * var ey = vars.height / 2\n   * myCanvas.line({sx: 0, sy: 0, ex: ex, ey: ey})\n   * \n   * @param {Object} obj\n   * @param {Number} obj.sx=0\n   * @param {Number} obj.sy=0\n   * @param {Number} obj.ex=50\n   * @param {Number} obj.ey=0\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.line\n   * @function\n   **/\n  line({sx = 0, sy = 0, ex = 50, ey = 0, ...styleArgs} = {}) {\n    this._canvas.line(\n        sx + this._xc,\n        sy + this._yc,\n        ex + this._xc,\n        ey + this._yc,\n        this._element_style(styleArgs))\n  }\n  \n  /**\n   * Draws a patch of noise, with an envelope.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * myCanvas.noise_patch({x: 100, y: 100, env: 'circular'})\n   *\n   * @param {Object} obj\n   * @param {Number} obj.x=0\n   * @param {Number} obj.y=0\n   * @param {String} obj.env='gaussian'\n   * @param {Number} obj.size=96\n   * @param {Number} obj.stdev=12\n   * @param {String} obj.col1='white'\n   * @param {String} obj.col2='black'\n   * @param {String} obj.bgmode='avg'\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.noise_patch\n   * @function\n   **/\n  noise_patch({x = 0, y = 0, env = 'gaussian', size = 96, stdev = 12,\n      col1 = 'white', col2 = 'black', bgmode = 'avg'} = {}) {\n    this._canvas.noise(\n        x + this._xc,\n        y + this._yc,\n        env,\n        size,\n        stdev,\n        col1,\n        col2,\n        bgmode)\n  }\n  \n  /**\n   * Draws a polygon that defined by a list of vertices. I.e. a shape of\n   * points connected by lines.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * var n1 = [0,0]\n   * var n2 = [100, 100]\n   * var n3 = [0, 100]\n   * myCanvas.polygon({vertices: [n1, n2, n3]})\n   *\n   * @param {Object} obj\n   * @param {Array<Array<Number>>} obj.vertices\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.polygon\n   * @function\n   **/\n  polygon({vertices, ...styleArgs} = {}) {\n    if (typeof vertices === \"undefined\") {\n      throw \"vertices is a required parameter for Canvas.polygon()\"\n    }\n    // Adjust the coordinates of all vertices\n    const v = []\n    for (const [x, y] of vertices)\n      v.push([x + this._xc, y + this._yc])\n    this._canvas.polygon(v, this._element_style(styleArgs))\n  }\n\n  /**\n   * Draws a rectangle.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * myCanvas.rect({x: -10, y: -10, w: 20, h: 20, fill:true})\n   *\n   * @param {Object} obj\n   * @param {Number} obj.x=-50\n   * @param {Number} obj.y=-25\n   * @param {Number} obj.w=100\n   * @param {Number} obj.h=50\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.rect\n   * @function\n   **/\n  rect({x = -50, y = -25, w = 100, h = 50, ...styleArgs} = {}) {\n    this._canvas.rect(\n        x + this._xc,\n        y + this._yc,\n        w,\n        h,\n        this._element_style(styleArgs))\n  }\n  \n  /**\n   * Shows, or 'flips', the canvas on the screen.\n   *\n   * @return {Number} A timestamp of the time at which the canvas appeared on\n   *     the screen.\n   *\n   * @name Canvas.show\n   * @function\n   **/ \n  show() {\n    return this._canvas.show()\n  }\n  \n  /**\n   * Draws text.\n   *\n   * @example\n   * var myCanvas = Canvas()\n   * myCanvas.text({text: 'Some text'})\n   *\n   * @param {Object} obj\n   * @param {String} obj.text\n   * @param {Boolean} obj.center=true\n   * @param {Number} obj.x=0\n   * @param {Number} obj.y=0\n   * @param {Object} ..obj.styleArgs={}\n   *\n   * @name Canvas.text\n   * @function\n   **/\n  text({text, center = true, x = 0, y = 0, ...styleArgs} = {}) {\n    if (typeof text === \"undefined\") {\n      throw \"text is a required parameter for Canvas.text()\"\n    }    \n    let style = this._element_style(styleArgs)\n    this._canvas.text(\n        text,\n        center,\n        x + this._xc,\n        y + this._yc,\n        style.html,\n        style)\n  }\n}\n","import CanvasHandler from '../classes/canvas_handler'\nimport JavaScriptWorkspaceAPI from '../classes/javascript_workspace_api'\nimport randomExt from 'random-ext'\nimport colorConvert from 'color-convert'\nimport parse from \"csv-parse/lib/sync\"\nimport {\n    range as pyRange,\n    enumerate as pyEnumerate,\n    items as pyItems,\n    zip as pyZip,\n    zipLongest as pyZipLongest} from 'pythonic'\n\n/**\n * A proxy handler for the VarStore that maps properties onto calls to\n * VarStore.get(), so that variables are automatically evaluated, just like\n * in the OpenSesame `var` API.\n */\nclass VarStoreHandler {\n  get (target, prop) {\n    // The VarStore sets a property on itself to bypass this proxy. This\n    // avoids feedback loops when the VarStore tries to get a variable without\n    // evaluating it.\n    if (target._bypass_proxy === true) {\n      return target[prop]\n    }\n    return typeof target[prop] === 'string'\n      ? target.get(prop, null, true, null, false)\n      : target[prop]\n  }\n}\n\n\n/**\n * A workspace for executing inline JavaScript code. For now, the workspace is\n * not persistent, and only exposes the vars object.\n */\nexport default class JavaScriptWorkspace {\n  /**\n   * Create a JavaScript workspace.\n   * @param {Object} experiment - The experiment item to which the item belongs.\n   */\n  constructor (experiment) {\n    this.experiment = experiment\n    this.vars_proxy = new Proxy(this.experiment.vars, new VarStoreHandler())\n    this.api = new JavaScriptWorkspaceAPI(this.experiment)\n    this._persistent = {}\n  }\n\n  /**\n   * Executes JavaScript code in the workspace.\n   * @param {String} js - JavaScript code to execute\n   */\n  _eval (js) {\n    // OSWeb objects\n    const vars = this.vars_proxy\n    const Canvas = (styleArgs = {}) => new CanvasHandler(\n        this.experiment, styleArgs)\n    const pool = this.experiment.pool\n    const persistent = this._persistent\n    // Expose common functions. Binding is necessary to provide the correct\n    // scope for the functions.\n    const reset_feedback = this.api.reset_feedback.bind(this.api)\n    const set_subject_nr = this.api.set_subject_nr.bind(this.api)\n    const sometimes = this.api.sometimes.bind(this.api)\n    const xy_from_polar = this.api.xy_from_polar.bind(this.api)\n    const xy_to_polar = this.api.xy_to_polar.bind(this.api)\n    const xy_distance = this.api.xy_distance.bind(this.api)\n    const xy_circle = this.api.xy_circle.bind(this.api)\n    const xy_grid = this.api.xy_grid.bind(this.api)\n    const xy_random = this.api.xy_random.bind(this.api)\n    // Expose useful libraries\n    const random = randomExt\n    const convert = colorConvert\n    const csvParse = parse\n    // Expose the pythonic functions\n    const range = pyRange\n    const zip = pyZip\n    const zipLongest = pyZipLongest\n    const enumerate = pyEnumerate\n    const items = pyItems\n    eval(js)\n  }\n}\n","import {range} from 'pythonic'\n\n/**\n * Provides common functions based on the Python API.\n **/\nexport default class JavaScriptWorkspaceAPI {\n\n  constructor(experiment) {\n    this._experiment = experiment\n  }\n\n  /**\n   * Resets all feedback variables to their initial state.\n   *\n   * @example\n   * reset_feedback()\n   **/\n  reset_feedback() {\n    this._experiment.reset_feedback()\n  }\n\n  /**\n   * Sets the subject number and parity (even/ odd). This function is called\n   * automatically when an experiment is started, so you only need to call it\n   * yourself if you overwrite the subject number that was specified when the\n   * experiment was launched.\n   *\n   * @param {Number} nr The subject number\n   *\n   * @example\n   * set_subject_nr(1)\n   * console.log('Subject nr = ' + vars.subject_nr)\n   * console.log('Subject parity = ' + vars.subject_parity)\n   **/\n  set_subject_nr(nr) {\n    this._experiment.set_subject(nr)\n  }\n\n  /**\n   * Returns true with a certain probability. (For more advanced randomization,\n   * use the `random-ext` package, which is available as `random`.)\n   * \n   * @param {Number} [p=.5] The probability of returning true\n   *\n   * @example\n   * if (sometimes()) {\n   *   console.log('Sometimes you win')\n   * } else {\n   *   console.log('Sometimes you lose')\n   * }\n   **/\n  sometimes(p=.5) {\n    if (typeof p !== \"number\" || p < 0 || p > 1)\n      throw \"p should be a numeric value between 0 and 1\"\n    return Math.random() < p\n  }\n\n  /**\n   * Converts polar coordinates (distance, angle) to Cartesian coordinates\n   * (x, y).\n   *\n   * @param {Number} rho The radial coordinate, also distance or eccentricity.\n   * @param {Number} phi The angular coordinate. This reflects a clockwise\n   *     rotation in degrees (i.e. not radians), where 0 is straight right.\n   * @param {Array<Number>} [pole=[0, 0]] The reference point.\n   * @return {Array<Number>} An [x, y] array.\n   *\n   * @example\n   * // ECMA 5.1\n   * var xy1 = xy_from_polar(100, 45)\n   * var xy2 = xy_from_polar(100, -45)\n   * var c = Canvas()\n   * c.line({sx: xy1[0], sy: xy1[1], ex: -xy1[0], ey: -xy1[1]})\n   * c.line({sx: xy2[0], sy: xy2[1], ex: -xy2[0], ey: -xy2[1]})\n   * c.show()\n   * // ECMA 6\n   * let [x1, y1] = xy_from_polar(100, 45)\n   * let [x2, y2] = xy_from_polar(100, -45)\n   * let c = Canvas()\n   * c.line({sx: x1, sy: y1, ex: -x1, ey: -y1})\n   * c.line({sx: x2, sy: y2, ex: -x2, ey: -y2})\n   * c.show()\n   **/\n  xy_from_polar(rho, phi, pole=[0, 0]) {\n    if (typeof rho !== \"number\")\n      throw \"rho should be numeric in xy_from_polar()\"\n    if (typeof phi !== \"number\")\n      throw \"phi should be numeric in xy_from_polar()\"\n    phi = this._radians(phi)\n    const [ox, oy] = this._parse_pole(pole)\n    const x = rho * Math.cos(phi) + ox\n    const y = rho * Math.sin(phi) + oy\n    return [x, y]\n  }\n\n  /**\n   * Converts Cartesian coordinates (x, y) to polar coordinates (distance,\n   * angle).\n   *\n   * @param {Number} x The X coordinate.\n   * @param {Number} y The Y coordinate\n   * @param {Array<Number>} [pole=[0, 0]] The reference point.\n   * @return {Array<Number>} An [rho, phi] array. Here, `rho` is the radial\n   *     coordinate, also distance or eccentricity. `phi` is the angular\n   *     coordinate in degrees (i.e. not radians), and reflects a\n   *     counterclockwise rotation, where 0 is straight right.\n   *\n   * @example\n   * // ECMA 5.1 (browser + desktop)\n   * var rho_phi = xy_to_polar(100, 100)\n   * var rho = rho_phi[0]\n   * var phi = rho_phi[1]\n   * // ECMA 6 (browser only)\n   * let [rho, phi] = xy_to_polar(100, 100)\n   **/\n  xy_to_polar(x, y, pole=[0, 0]) {\n    if (typeof x !== \"number\")\n      throw \"x should be numeric in xy_to_polar()\"\n    if (typeof y !== \"number\")\n      throw \"y should be numeric in xy_to_polar()\"\n    const [ox, oy] = this._parse_pole(pole)\n    const dx = x - ox\n    const dy = y - oy\n    const rho = Math.sqrt(dx ** 2 + dy ** 2)\n    const phi = this._degrees(Math.atan2(dy, dx))\n    return [rho, phi]\n  }\n  \n  /**\n   * Gives the distance between two points.\n   *\n   * @param {Number} x1 The x coordinate of the first point.\n   * @param {Number} y1 The y coordinate of the first point.\n   * @param {Number} x2 The x coordinate of the second point.\n   * @param {Number} y2 The y coordinate of the second point.\n   * @return {Number} The distance between the two points.\n   **/\n  xy_distance(x1, y1, x2, y2) {\n    if (typeof x1 !== \"number\" || typeof y1 !== \"number\" || \n        typeof x2 !== \"number\" || typeof y2 !== \"number\")\n      throw \"Coordinates should be numeric in xy_distance()\"\n    return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)\n  }\n  \n  /**\n   * Generates a list of points (x,y coordinates) in a circle. This can be\n   * used to draw stimuli in a circular arrangement.\n   *\n   * @param {Number} n The number of x,y coordinates to generate.\n   * @param {Number} rho The radial coordinate, also distance or eccentricity,\n   *     of the first point.\n   * @param {Number} [phi0=0] The angular coordinate for the first coordinate.\n   *     This is a counterclockwise rotation in degrees (i.e. not radians),\n   *     where 0 is straight right.\n   * @param {Array<Number>} [pole=[0, 0]] The reference point.\n   * @return {Array<Array<Number>>} An array of [x,y] coordinate arrays.\n   *\n   * @example\n   * // Draw 8 rectangles around a central fixation dot\n   * // ECMA 5.1 (browser + desktop)\n   * var c = Canvas()\n   * c.fixdot()\n   * var points = xy_circle(8, 100)\n   * for (var i in points) {\n   *   var x = points[i][0]\n   *   var y = points[i][1]\n   *   c.rect({x: x - 10, y: y - 10, w: 20, h: 20})\n   * }\n   * c.show()\n   * // ECMA 6 (browser only)\n   * let c = Canvas()\n   * c.fixdot()\n   * for (let [x, y] of xy_circle(8, 100)) {\n   *   c.rect({x: x - 10, y: y - 10, w: 20, h: 20})\n   * }\n   * c.show()\n   **/\n  xy_circle(n, rho, phi0=0, pole=[0, 0]) {\n    if (typeof n !== \"number\" || n < 0)\n      throw \"n should be a non-negative integer in xy_circle()\"\n    if (typeof rho !== \"number\" || typeof phi0 !== \"number\")\n      throw \"rho and phi0 should be numeric in xy_circle()\"\n    const a = []\n    for (const i of range(n)) {\n      a.push(this.xy_from_polar(rho, phi0, pole))\n      phi0 += 360 / n\n    }\n    return a\n  }\n  \n  /**\n   * Generates a list of points (x,y coordinates) in a grid. This can be used\n   * to draw stimuli in a grid arrangement.\n   *\n   * @param {Number|Array<Number>} n A number that indicates the number of\n   *     columns and rows, so that `n=2` indicates a 2x2 grid, or a [n_col,\n   *     n_row] array, so that `n=[2,3]` indicates a 2x3 grid.\n   * @param {Number|Array<Number>} spacing A numeric value that indicates the\n   *     spacing between cells, or a [col_spacing, row_spacing] array.\n   * @param {Array<Number>} [pole=[0, 0]] The reference point.\n   * @return {Array<Array<Number>>} An array of [x,y] coordinate arrays.\n   *\n   * @example\n   * // Draw a 4x4 grid of rectangles\n   * // ECMA 5 (desktop + browser)\n   * var c = Canvas()\n   * c.fixdot()\n   * var points = xy_grid(4, 100)\n   * for (var i in points) {\n   *   var x = points[i][0]\n   *   var y = points[i][1]\n   *   c.rect({x: x - 10, y: y - 10, w: 20, h: 20})\n   * }\n   * c.show()\n   * // ECMA 6 (browser only)\n   * let c = Canvas()\n   * c.fixdot()\n   * for (let [x, y] of xy_grid(4, 100)) {\n   *   c.rect({x: x-10, y: y-10, w: 20, h: 20})\n   * }\n   * c.show()\n   **/\n  xy_grid(n, spacing, pole=[0, 0]) {\n    // Parse and validate the n\n    const n_err_msg = \"n should be a single non-negative number, or an array of two non-negative numbers in xy_grid()\"\n    let n_col\n    let n_row\n    if (typeof n === \"object\") {\n      if (n.length !== 2)\n        throw n_err_msg\n      [n_col, n_row] = n\n    } else {\n      n_col = n\n      n_row = n\n    }\n    if (typeof n_col !== \"number\" || typeof n_row !== \"number\")\n      throw n_err_msg\n    // Parse and validate the spacing\n    const spacing_err_msg = \"spacing should be a single non-negative number, or an array of two non-negative numbers xy_grid()\"\n    let s_col\n    let s_row\n    if (typeof spacing === \"object\") {\n      if (spacing.length !== 2)\n        throw spacing_err_msg\n      [s_col, s_row] = spacing\n    } else {\n      s_col = spacing\n      s_row = spacing\n    }\n    if (typeof s_col !== \"number\" || typeof s_row !== \"number\")\n      throw spacing_err_msg\n    // Generate the grid\n    const [ox, oy] = this._parse_pole(pole)\n    const a = []\n    let x\n    let y\n    for (const row of range(n_row)) {\n      y = (row - (n_row - 1) / 2) * s_row + oy\n      for (const col of range(n_col)) {\n        x = (col - (n_col - 1) / 2) * s_col + ox\n        a.push([x, y])\n      }\n    }\n    return a\n  }\n  \n  /**\n   * Generates a list of random points (x,y coordinates) with a minimum\n   * spacing between each pair of points. This function will throw an error\n   * when the coordinate list cannot be generated, typically because there are\n   * too many points, the min_dist is set too high, or the width or height are\n   * set too low.\n   *\n   * @param {Number} n The number of points to generate.\n   * @param {Number} width The width of the field with random points.\n   * @param {Number} height The height of the field with random points.\n   * @param {Number} [min_dist=0] The minimum distance between each point.\n   * @param {Array<Number>} [pole=[0, 0]] The reference point.\n   * @return {Array<Array<Number>>} An array of [x,y] coordinate arrays.\n   *\n   * @example\n   * // Draw a 50 rectangles in a random grid\n   * // ECMA 5 (desktop + browser)\n   * var c = Canvas()\n   * c.fixdot()\n   * var points = xy_random(50, 500, 500, 40)\n   * for (var i in points) {\n   *   var x = points[i][0]\n   *   var y = points[i][1]\n   *   c.rect({x: x - 10, y: y - 10, w: 20, h: 20})\n   * }\n   * c.show()   \n   * // ECMA 6 (browser only)\n   * let c = Canvas()\n   * c.fixdot()\n   * for (let [x, y] of xy_random(50, 500, 500, 40)) {\n   *   c.rect({x: x-10, y: y-10, w: 20, h: 20})\n   * }\n   * c.show()\n   **/\n  xy_random(n, width, height, min_dist=0, pole=[0, 0]) {\n    if (typeof n !== \"number\" || n < 0)\n      throw \"n should be a non-negative number in xy_circle()\"\n    if (typeof min_dist !== \"number\" || n < 0)\n      throw \"min_dist should be a non-negative number in xy_circle()\"\n    if (typeof width !== \"number\" || typeof height !== \"number\")\n      throw \"width and height should be numeric in xy_circle()\"\n    const [ox, oy] = this._parse_pole(pole)\n    const max_try = 1000\n    let a, i, t2, x1, y1, x2, y2, too_close\n    for (const t1 of range(max_try)) {\n      a = []\n      for (i of range(n)) {\n        // A loop for trying to find a single new point\n        for (t2 of range(max_try)) {\n          // Generate a point and check if it's not too close to the other\n          // points so far\n          x1 = (Math.random() - .5) * width + ox\n          y1 = (Math.random() - .5) * height + oy\n          too_close = false\n          for ([x2, y2] of a) {\n            if (this.xy_distance(x1, y1, x2, y2) < min_dist) {\n              too_close = true\n              break\n            }\n          }\n          // Add the point and the break the loop for finding a single point\n          if (!too_close) {\n            a.push([x1, y1])\n            break\n          }\n        }\n      }\n      // If the array is complete, return it. If not, the outer for loop will\n      // try again until max_try is reached\n      if (a.length === n)\n        return a\n    }\n    throw \"Failed to generate random coordinates in xy_random()\"\n  }\n  \n  _radians(a) {\n    return (a / 360) * 2 * Math.PI\n  }\n  \n  _degrees(a) {\n    return (a / (2 * Math.PI)) * 360\n  }\n  \n  _parse_pole(pole) {\n    if (pole.length !== 2)\n      throw \"pole should be an array of two numeric values\"\n    const [x, y] = pole\n    if (typeof x !== \"number\" || typeof y !== \"number\")\n      throw \"pole should be an array of two numeric values\"\n    return [x, y]\n  }\n}\n","import {\r\n  isBoolean\r\n} from 'lodash'\r\n\r\n/** Class representing a python workspace. */\r\nexport default class PythonWorkspace {\r\n  /**\r\n   * Create a python workspace object.\r\n   * @param {Object} runner - The runner to which the python workspace belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the python workspace class.\r\n  }\r\n\r\n  /**\r\n   * Evaluate an expression within osweb.\r\n   * @param {Boolean|Object|String} bytecode - The expression to evaluate.\r\n   * @return {Boolean|Number|Object|String} - The result of the evaluated expression.\r\n   */\r\n  _eval (bytecode) {\r\n    // Check wich type of expression must be evaled.\r\n    if (isBoolean(bytecode)) {\r\n      return bytecode\r\n    } else if (typeof bytecode === 'string') {\r\n      // Open sesame script, first check for parameter values.\r\n      bytecode = this._runner._syntax.eval_text(bytecode, null, true)\r\n\r\n      // Evaluate the expression.\r\n      var evalString = this._runner._syntax.remove_quotes(bytecode)\r\n      if (evalString === 'always') {\r\n        return true\r\n      } else if (evalString === 'never') {\r\n        return false\r\n      } else {\r\n        // eslint-disable-next-line no-eval\r\n        return eval(evalString)\r\n      }\r\n    } else {\r\n      // Python script, run the internal Python interpreter.\r\n      return this._runner._pythonParser._run_statement(bytecode)\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}