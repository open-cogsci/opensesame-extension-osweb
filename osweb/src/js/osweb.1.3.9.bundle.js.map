{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/osweb/classes/var_store.js","webpack:///./src/js/osweb/backends/clock.js","webpack:///./src/js/osweb/items/item.js","webpack:///./src/js/osweb/util/matrix.js","webpack:///./src/js/osweb/items/loop.js","webpack:///./src/js/osweb/backends/keyboard.js","webpack:///./src/js/osweb/items/sequence.js","webpack:///./src/js/osweb/items/coroutines.js","webpack:///./src/js/osweb/backends/mouse.js","webpack:///./src/js/osweb/items/generic_response.js","webpack:///./src/js/osweb/items/sketchpad.js","webpack:///./src/js/osweb/items/feedback.js","webpack:///./src/js/osweb/items/inline_script.js","webpack:///./src/js/osweb/items/inline_javascript.js","webpack:///./src/js/osweb/items/keyboard_response.js","webpack:///./src/js/osweb/items/mouse_response.js","webpack:///./src/js/osweb/items/logger.js","webpack:///./src/js/osweb/backends/sampler.js","webpack:///./src/js/osweb/items/sampler.js","webpack:///./src/js/osweb/items/synth.js","webpack:///./src/js/osweb/elements/base_element.js","webpack:///./src/js/osweb/elements/arrow.js","webpack:///./src/js/osweb/elements/circle.js","webpack:///./src/js/osweb/elements/ellipse.js","webpack:///./src/js/osweb/elements/fixdot.js","webpack:///./src/js/osweb/elements/gabor.js","webpack:///./src/js/osweb/elements/image.js","webpack:///./src/js/osweb/elements/line.js","webpack:///./src/js/osweb/elements/noise.js","webpack:///./src/js/osweb/elements/rect.js","webpack:///./src/js/osweb/elements/textline.js","webpack:///./src/js/osweb/widgets/widget.js","webpack:///./src/js/osweb/widgets/button.js","webpack:///./src/js/osweb/widgets/checkbox.js","webpack:///./src/js/osweb/widgets/themes.js","webpack:///./src/js/osweb/widgets/form.js","webpack:///./src/js/osweb/widgets/image_widget.js","webpack:///./src/js/osweb/widgets/image_button.js","webpack:///./src/js/osweb/widgets/label.js","webpack:///./src/js/osweb/widgets/rating_scale.js","webpack:///./src/js/osweb/widgets/text_input.js","webpack:///./src/js/osweb/plugins/advanced_delay.js","webpack:///./src/js/osweb/plugins/form_base.js","webpack:///./src/js/osweb/plugins/form_consent.js","webpack:///./src/js/osweb/plugins/form_multiple_choice.js","webpack:///./src/js/osweb/plugins/form_text_display.js","webpack:///./src/js/osweb/plugins/form_text_input.js","webpack:///./src/js/osweb/backends/video.js","webpack:///./src/js/osweb/system/constants.js","webpack:///./src/js/osweb/plugins/media_player.js","webpack:///./src/js/osweb/plugins/notepad.js","webpack:///./src/js/osweb/plugins/repeat_cycle.js","webpack:///./src/js/osweb/plugins/reset_feedback.js","webpack:///./src/js/osweb/plugins/touch_response.js","webpack:///./src/js/osweb/system/debugger.js","webpack:///./src/js/osweb/system/convertor.js","webpack:///./src/js/osweb/system/events.js","webpack:///./src/js/osweb/system/parameters.js","webpack:///./src/js/osweb/system/screen.js","webpack:///./src/js/osweb/system/session.js","webpack:///./src/js/osweb/util/files.js","webpack:///./src/js/osweb/system/transfer.js","webpack:///./src/js/osweb/classes/item_stack.js","webpack:///./src/js/osweb/classes/item_store.js","webpack:///./src/js/osweb/classes/file_pool_store.js","webpack:///./src/js/osweb/classes/syntax.js","webpack:///./src/js/osweb/python/python_math.js","webpack:///./src/js/osweb/python/python_opensesame.js","webpack:///./src/js/osweb/python/python_random.js","webpack:///./src/js/osweb/python/python_string.js","webpack:///./src/js/osweb/python/python.js","webpack:///./src/js/osweb/backends/log.js","webpack:///./src/js/osweb/items/experiment.js","webpack:///./src/js/osweb/system/runner.js","webpack:///./src/js/osweb/index.js","webpack:///./src/app.js","webpack:///./src/js/osweb/backends/canvas.js","webpack:///./src/js/osweb/backends/styles.js","webpack:///./src/js/osweb/classes/javascript_workspace.js","webpack:///./src/js/osweb/classes/python_workspace.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","slice","VarStore","item","parent","this","_item","_parent","_ignored_properties","variable","defaultValue","evaluate","valid","addQuotes","_bypass_proxy","syntax","eval_text","inspect","includes","variables","pairs","has","preserve","unset","Clock","experiment","_experiment","_startTime","_now","performance","now","Math","round","webkitNow","Date","getTime","ms","_runner","_events","_run","constants","RESPONSE_DURATION","Item","script","constructor","_status","STATUS_NONE","clock","count","python_workspace","_pythonWorkspace","response_store","_responseStore","_syntax","vars","STATUS_FINALIZE","_currentItem","run","response","pMs","sleep","time","line","trim","charAt","comments","fromAscii","parse_comment","parse_cmd","cmd","args","set","_debugger","addError","parse_multiline_vars","reset","lines","split","parse_variable","parse_line","STATUS_INITIALIZE","addMessage","type","_prepare_complete","unstack","srcMatrix","TypeError","values","reduce","acc","cycle","entries","val","stack","columns","keys","map","row","fullfactorial","matrix","combos","shuffleVert","grouped","cols","prev","shuffleHoriz","vals","res","sortCol","col","Error","sort","reverseRows","ReferenceError","roll","amount","column","parseInt","rollN","list","unshift","pop","weight","weightCol","Loop","description","_break_if","_cycles","_index","_keyboard","_operations","_initialized","from_string","el","_eval_args","remove_quotes","orig_matrix","cycles","repeat","skip","offset","order","break_if","instruction","params","Number","_pythonParser","_prepare","body","undefined","_runstatement","e","items","_items","set_item_onset","wholeRepeats","floor","partialRepeats","allCycles","Array","remainder","k","mtrx","func","repeat_cycle","msg","apply_cycle","break_if_val","compile_cond","_eval","_complete","_itemStore","prepare","execute","Keyboard","timeOut","keyList","_keyList","_timeOut","_SYNONIEM_MAP","responses","synonyms","defaults","_synonyms","button","RESPONSE_KEYBOARD","moderators","keyDownEvent","event","shiftKey","ctrlKey","altKey","visible","_renderer","view","focus","tmp","document","createElement","appendChild","removeChild","Sequence","flush_keyboard","cond","_itemStack","tokens","strip_slashes","flush","currentItem","self","Coroutines","tasks","schedule","arglist","kwdict","task","item_name","start_time","start","end_time","end","run_if","runif","taskParams","Task","sortBy","launch","active","dt","t0","running","_loop","started","_active","status","step","RUNNING","ABORTED","stopped","TIMER_BREAK","TIMER_EXIT","TIMER_ERROR","_state","setTimeout","kill","abort_on_end","state","UNINITIALISED","_coroutine","isFunction","coroutine","next","newState","done","FINISHED","Mouse","buttonList","_buttonList","_visible","synoniem","show_cursor","RESPONSE_MOUSE","_mouseMoveEvent","rtTime","x","clientX","y","clientY","events","_mouse_press","buttons","_mouseDownEvent","pos","show","style","cursor","GenericResponse","_allowed_responses","_duration","_duration_func","_mouse","_responsetype","RESPONSE_NONE","_timeout","auto_response","process_feedback","timeout","_timeStamp","process_response_timeout","process_response_keypress","process_response_mouseclick","allowed_responses","String","replace","filter","Boolean","duration","_get_default_from_synoniem","prepare_duration_keypress","prepare_duration_mouseclick","RESPONSE_SOUND","RESPONSE_VIDEO","auto_responder","final_duration","_set_config","auto_responder_mouse","sleep_for_duration","get_key","get_click","_sampler","wait","_video_player","rect","getBoundingClientRect","scale","min","right","left","width","bottom","top","height","center_x","center_y","cursor_x","cursor_y","retval","_start_response_interval","sri","_end_response_interval","sanitize","resp","response_bookkeeping","set_mouse_coordinates","correct","toString","total_correct","total_response_time","response_time","total_responses","accuracy","average_response_time","avg_rt","prepare_timeout","prepare_allowed_responses","prepare_duration","Sketchpad","canvas","Canvas","elements","a","b","z_index","_isClass","element","_newElementClass","_compare","clear","is_shown","draw","backgroundColor","_styles","background_color","set_sri","process_response","Feedback","reset_variables","reset_feedback","InlineScript","_prepare_run","_prepare_tree","_run_tree","_process_nodes","_parse","InlineJavaScript","workspace","_javascriptWorkspace","read_run_lines","read_prepare_lines","KeyboardResponse","_flush","correct_response","keyDownHandler","keypress","_processKeyboardEvent","addEventListener","proceed","removeEventListener","MouseResponse","resp_codes","mouseDownHandler","_processMouseEvent","touchHandler","changedTouches","Logger","logvars","auto_log","_log","write_vars","concat","audioCtx","AudioContext","webkitAudioContext","console","warning","SamplerBackend","source","volume","pitch","pan","fade","block","sample","cloneNode","error","onended","_audioEnded","createMediaElementSource","resume","connect","applyFilters","play","nodes","destination","gainNode","createGain","gain","setValueAtTime","currentTime","linearRampToValueAtTime","StereoPannerNode","Sampler","_sample","fade_in","stop_after","_pool","Synth","BaseElement","sketchpad","show_if","fix_coordinates","uniform_coordinates","only_keywords","pool","properties","_properties","xc","yc","prop","eval_properties","Arrow","color","penwidth","x1","y1","x2","y2","styles","Styles","fill","arrow","arrow_body_width","arrow_body_length","arrow_head_width","Circle","circle","Ellipse","w","h","ellipse","Fixdot","fixdot","Gabor","gabor","orient","freq","env","size","stdev","phase","color1","color2","bgmode","ImageElement","_file","image","file","center","Line","Noise","noise","Rect","Textline","font_family","font_size","font_bold","font_italic","html","text","font_underline","Widget","form","var","_container","Container","Graphics","lineStyle","_canvas","_convertColorValue","_themes","theme","gray","lineColorLeftTop","moveTo","_width","lineTo","_height","lineColorRightBottom","rectangle","beginFill","drawRect","endFill","addChild","ButtonWidget","frame","set_var","text_style","fontFamily","fontSize","fontStyle","fontWeight","foreground","text_element","Text","only_render","interactive","buttonMode","hitArea","Rectangle","on","draw_frame","draw_text","CheckBoxWidget","checked","click_accepts","group","_checkbox","box_lines","box_fill","removeChildren","set_checked","widgets","pVal","pVar","join","Themes","box_size","FormWidget","rows","spacing","margins","clicks","span","colNr","rowNr","_groupId","background","focus_widget","render","setFocus","TIMER_FORM","widget","colSpan","rowSpan","form_width","form_height","range","ImageWidget","adjust","path","img","getContext","drawImage","sprite","PIXI","Sprite","Texture","fromCanvas","ar","ImageButtonWidget","LabelWidget","buffer_context","font","words","line_length","word","word_length","measureText","text_elements","text_lines","lineProperties","_getTextBaseline","RatingScaleWidget","default","orientation","_checkBoxes","_getGroupId","_processNodes","_nodes","isNaN","parseFloat","isFinite","labels","box_check","container","horizontal","cx","cy","_h","dx","_drawBorder","_x","_drawCheckBox","_drawText","dy","_y","children","set_value","currentTarget","TextInputWidget","stub","return_accepts","inputField","keyCode","AdvancedDelay","mean","std","u","v","random","max","sqrt","log","cos","PI","jitter","jitter_mode","_random_uniform","_random_gauss","FormBase","itemType","options","_form_options","_form_text","item_type","TIMER_NONE","_theme","_widgets","form_text","form_clicks","parameters","varName","substr","indexOf","varValue","substring","_type","colspan","rowspan","_w","_newWidgetClass","set_widget","_exec","FormConsent","decline_form","decline_message","exit","FormMultipleChoice","FormTextDisplay","FormTextInput","Video","audio","full_screen","_playing","_script","_video","_texture","from","_videoSprite","pause","_videoEnded","onplay","_videoPlay","_event_handler_always","itemClasses","loop","sequence","feedback","inline_script","inline_javascript","keyboard_response","mouse_response","logger","sampler","synth","coroutines","textline","TextLine","button_widget","checkbox_widget","form_widget","image_button_widget","image_widget","label_widget","rating_scale_widget","text_input_widget","themes","advanced_delay","form_base","form_consent","form_multiple_choice","form_text_display","form_text_input","media_player_mpy","_script_executed","stop","_update","event_handler","event_handler_trigger","notepad","condition","touch_response","_ncol","_nrow","cell","PRESSES_ONLY","RELEASES_ONLY","PRESSES_AND_RELEASES","RESPONSE_AUTOKEYBOARD","RESPONSE_AUTOMOUSE","STATUS_BUILD","STATUS_EXECUTE","TIMER_WAIT","TIMER_PAUSE","TIMER_RESUME","TIMER_DONE","Debugger","runner","enabled","messageLog","errorText","context","isPlainObject","notify","_onError","url","messageText","Convertor","variabelName","match","newItem","pair","parseValue","variableName","parseLine","Events","_keyDownEvent","_keyDownHandler","_keyPressMode","_keyUpHandler","_mouseDownHandler","_mouseMoveHandler","_mousePressMode","_mouseUpHandler","_responseGiven","_responseList","_responseType","_soundHasEnded","_statePrevious","_timeHandler","_videoHasEnded","_KEY_CODES","_KEY_SHIFTCODES","_keyDown","_keyUp","_mouseDown","_mouseMove","_mouseUp","_touchStartHandler","_touchStart","Ticker","add","_time","remove","location","_screen","_showPauseScreen","keyboardState","keyboardResponse","_convertKeyCode","preventDefault","mouseState","mouseResponse","_finalize","responseType","responseList","Parameters","_itemCounter","_parameters","_subject","set_subject","_setupClickScreen","_updateIntroScreen","dataType","title","prompt","promptEnabled","_processParameters","_processParameter","_transferParameters","parameter","_exit","_prompt","_onParamConfirm","_onParamCancel","Screen","_click","_fullScreen","requestFullscreen","_fullScreenChanged","_fullScreenError","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","_scaleMode","margin","display","position","_currentCanvas","clientWidth","clientHeight","resize","_scale_x","_scale_y","_confirm","_onFullScreenConfirm","_onFullScreenCancel","debugger","logoSrc","_introScreen","screenCenter","logoPath","oswebLogo","oswebTitle","versionInfo","VERSION_NUMBER","copyrightText","getFullYear","_statusText","clickHandler","_clearIntroScreen","_initialize","percentage","yOuter","_progressBarOuter","_progressBarInner","xOuter","hOuter","_onPauseScreenConfirm","_onPauseScreenCancel","Session","_date","_session","_getSessionInformation","browser","codename","navigator","appCodeName","appName","version","appVersion","date","startdate","getDate","getMonth","starttime","getHours","getMinutes","getSeconds","startdateUTC","getUTCDate","getUTCMonth","getUTCFullYear","debug","pilot","taskname","taskversion","screen","availableHeight","availHeight","availableWidth","availWidth","colorDepth","outerheight","outerwidth","pixelDepth","screenX","screenY","system","os","platform","FileStreamer","chunkSize","rewind","getFileSize","fileReader","FileReader","blob","Promise","resolve","reject","onloadend","target","byteLength","progress","readAsArrayBuffer","decompress","zipfile","onProgress","fs","inflator","pako","Inflate","isEndOfFile","readBlock","err","untar","buffer","readFileAsText","inputFile","temporaryFileReader","onerror","abort","DOMException","onload","readAsText","parseUrl","str","host","getHost","origin","URL","Transfer","isString","isObject","File","_readOsexpFromFile","osScript","uri","fetch","href","remoteFile","_processScript","_readWebFonts","osexp","Blob","osexpFile","_readExpFile","message","_updateProgressBar","files","expFileIndex","findIndex","expFile","poolFiles","_processOsexpPoolItems","axios","onDownloadProgress","lengthComputable","loaded","total","test","userAgent","contents","asyncIterator","currentIndex","currentFile","folder","whole","group1","fromCharCode","ext","lastIndexOf","toLowerCase","Image","src","getBlobUrl","ado","Audio","WebFont","load","google","families","urls","inactive","resultData","FormData","append","xhr","XMLHttpRequest","open","subject_nr","send","ItemStack","stackItem","ItemStore","className","string","_newItemClass","suggestion","uniqueName","FilePoolStore","new_name","old_path","new_path","Syntax","isNumber","cnd","bytecode","expression","ast","_run_statement","content","in_entity","escapeBrackets","reNormal","search","unescapeBrackets","rePython","nr","add_slashes","dedented","pattern","exec","count_quotes","kwargs","parsed","convert_if_numeric","safe_wrap","strict","allowVars","NBrackets","chartype","i1","i2","nBrackets","PythonMath","E","pi","filbert","pythonRuntime","imports","math","ceil","copysign","fabs","factorial","fmod","frexp","fsum","acos","asin","atan","atan2","hypot","sin","tan","iterable","PythonOpenSesame","_objects","close","write","functions","set_subject_nr","copy_sketchpad","keyboard","mouse","sometimes","xy_circle","xy_distance","xy_from_polar","xy_grid","xy_random","xy_to_polar","auto_prepare","style_args","resp_args","playback_args","osc","attack","decay","rho","phi0","pole","phi","min_dist","PythonRandom","shuffle","temporaryValue","randomIndex","PythonString","fillchar","PythonParser","python_math","python_opensesame","python_random","python_string","_classes","_function_stack","_global_return_value","_inline_script","_node","_onConsole","_stack","_statement","_variables","exp","parseFn","parse","locations","ranges","identifier","toNumber","node","return_values","index","_set_node","_get_element_value","return_value","_set_return_value","tmp_value","operator","_set_element_value","break","arguments","callee","tmp_arguments","caller","_get_element","_get_context","global_return_value","init","update","tmp_range","consequent","alternate","returnValue","argument","declarations","id","_process_nodes_jump","_process_nodes_timeout","_array_expression","_assignment_expression","_binary_expression","_block_statement","_break_statement","_call_expression","_empty_statement","_expression_statement","_for_statement","_for_in_statement","_function_expression","_identifier","_if_statement","_literal","_logical_expression","_member_expression","_new_expression","_program","_return_statement","_unary_expression","_update_expression","_variable_declaration","_variable_declarator","_while_statement","ast_tree","Log","varList","entry","onLog","_data","Experiment","JavaScriptWorkspace","bidi","round_decimals","sessionid","valueOf","sound_freq","sound_sample_size","sound_channels","sound_buf_size","canvas_backend","pNr","subject_parity","def_str","_source","read_definition","init_display","datetime","opensesame_version","opensesame_codename","VERSION_NAME","init_clock","toUTCString","Runner","_mimetype","_name","_onFinished","_onLog","_target","_convertor","PythonWorkspace","_transfer","_setupContent","getElementById","autoDetectRenderer","antialias","transparent","resolution","confirm","fullScreen","introClick","introScreen","mimetype","onConsole","onFinished","onError","scaleMode","subject","_setupIntroScreen","_readSource","_build","parseScript","_clean_up","_fullScreenExit","_exitDisplay","_setupContext","OSWEB_VERSION_NAME","OSWEB_VERSION_NO","replaceAll","str1","str2","ignore","RegExp","_pySlice","osweb","printVersionInfo","getRunner","alertify","require","_font_string","sx","sy","ex","ey","bodyWidth","bodyLength","headWidth","pow","angle","_headWidth","p4","p1","p2","p3","p7","p6","doc","DOMParser","parseFromString","childNodes","some","nodeType","styleArgs","assign","textLine","fontBold","innerHTML","lineHeight","div","top1","top2","verticalAlign","scrollTop","ascent","descent","htmlNode","textBlock","currentStyle","elementStyle","_getStyle","nodeName","prev_height","x_pos","y_pos","text_dimensions","text_underline","attributes","textStyle","bounds","textElement","textContent","getBounds","dimension","_parseHtmlNode","points","_arrow_shape","polygon","drawCircle","shape","clone","drawEllipse","_fill","_background_color","_color","_penwidth","_match_env","ctx","px","getImageData","_convertColorValueToRGB","rx","ry","ux","uy","f","amp","g","putImageData","fname","_fullScreenInit","verticles","drawPolygon","rgb","txt","_containsHTML","element_style","visibility","_initConstants","_bidi","_font_bold","_font_family","_font_italic","_font_size","_font_underline","_html","convertedColor","_DEFAULT_COLOURS","_isInt","isInteger","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","grey","green","greenyellow","honeydew","hotpink","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_DEFAULT_FONTS","sans","serif","mono","arabic","hebrew","hindi","_checkVal","VarStoreHandler","vars_proxy","Proxy","js","CanvasClass","eval","evalString"],"mappings":"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","file":"js/osweb.1.3.9.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,3]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/** Class representing a variable store. */\r\nexport default class VarStore {\r\n  /**\r\n   * Create a variable store object for all variables.\r\n   * @param {Object} item - The item to which the var_store belongs.\r\n   * @param {Object} parent - The parent global var_store.\r\n   */\r\n  constructor (item, parent) {\r\n    // Create and set private properties.\r\n    this._item = item\r\n    this._parent = parent\r\n    this._ignored_properties = [\r\n      '_item', '_parent', '_bypass_proxy', '_ignored_properties'\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Get the value of a variable from the store (or thje parent store).\r\n   * @param {String} variable - The name of the variable.\r\n   * @param {Boolean|Number|String} defaultValue - The default value for the variable.\r\n   * @param {Object} evaluate - The parent global var_store.\r\n   * @param {Object} valid - The parent global var_store.\r\n   * @param {Boolean} addQuotes - The add quotes toggle.\r\n   * @return {Boolean|Number|String} - The value of the given variable.\r\n   */\r\n  get (variable, defaultValue, evaluate, valid, addQuotes) {\r\n    // Set the optional arguments\r\n    defaultValue = (typeof defaultValue === 'undefined') ? null : defaultValue\r\n    evaluate = (typeof evaluate === 'undefined') ? true : evaluate\r\n    valid = (typeof valid === 'undefined') ? null : valid\r\n    var value = null\r\n    // Gets an experimental variable.\r\n    if (variable in this) {\r\n      this._bypass_proxy = true // Avoid Proxy feedback loop\r\n      if (typeof this[variable] === 'string' && evaluate === true) {\r\n        value = this._item.syntax.eval_text(this[variable], null, addQuotes)\r\n      } else {\r\n        value = this[variable]\r\n      }\r\n      this._bypass_proxy = false\r\n    }\r\n    // If value is not found locally, look in experiment object.\r\n    if (value == null && this._parent && variable in this._parent) {\r\n      this._parent._bypass_proxy = true // Avoid Proxy feedback loop\r\n      if (typeof this._parent[variable] === 'string' && evaluate === true) {\r\n        value = this._item.syntax.eval_text(this._parent[variable], null, addQuotes)\r\n      } else {\r\n        value = this._parent[variable]\r\n      }\r\n      this._parent._bypass_proxy = false\r\n    }\r\n    // Return function result.\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Check if the variable is part of the variable store.\r\n   * @param {String} variable - The name of the variable.\r\n   * @return {Boolean} - True if the variable is part of the store.\r\n   */\r\n  has (variable) {\r\n    return this.inspect().includes(variable)\r\n  }\r\n\r\n  /** Create a list of all avariables available.\r\n   * @return {Array} - Array containing names of all variables.\r\n   */\r\n  inspect () {\r\n    const variables = []\r\n    for (const variable in this) {\r\n      if (this._ignored_properties.includes(variable)) continue\r\n      variables.push(variable)\r\n    }\r\n    return variables\r\n  }\r\n\r\n  /** Create a list of value/name pairs.\r\n   * @return {Array} - Array containing name and values of all variables.\r\n   */\r\n  items () {\r\n    const pairs = {}\r\n    for (const variable of this.inspect()) {\r\n      pairs[variable] = this[variable]\r\n    }\r\n    return pairs\r\n  }\r\n\r\n  /**\r\n   * Set the value of a variable in the store.\r\n   * @param {String} variable - The name of the variable.\r\n   * @value {Boolean|Number|String} - Value of the variable to set.\r\n   */\r\n  set (variable, value) {\r\n    this[variable] = value\r\n  }\r\n\r\n  /**\r\n   * Unset (remove) a variable from the store.\r\n   * @param {String} variable - The name of the variable.\r\n   */\r\n  unset (variable) {\r\n    if (this.has(variable) === true) {\r\n      delete this[variable]\r\n    }\r\n  }\r\n\r\n  /** Create a list of variable names.\r\n   * @return {Array} - Array containing namesof all variables.\r\n   */\r\n  vars () {\r\n    return this.inspect()\r\n  }\r\n\r\n  /**\r\n   * Clears all experimental variables, except those that are explicitly\r\n   * preserved.\r\n   * @param {Array} preserve - An array of variable names to preserve.\r\n   */\r\n  clear (preserve) {\r\n    preserve = (typeof preserve === 'undefined') ? [] : preserve\r\n    for (const variable of this.inspect()) {\r\n      if (preserve.includes(variable)) continue\r\n      this.unset(variable)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/** Class representing the clock system. */\r\nexport default class Clock {\r\n  /**\r\n   * Create a clock object which controls a pseudo real-time clock.\r\n   * @param {Object} experiment - The experiment  to which the clock belongs.\r\n   */\r\n  constructor (experiment) {\r\n    // Create and set private properties.\r\n    this._experiment = experiment // Parent experiment item.\r\n    this._startTime = -1 // Start time anchor of the experiment.\r\n  }\r\n\r\n  /** Initialize the clock. */\r\n  _initialize () {\r\n    // Set the absolute start time of the expeirment.\r\n    this._startTime = this._now()\r\n  }\r\n\r\n  /** Get an absolute time stamp from the system in ms.\r\n   * @return {Number} - The current absolute time in ms.\r\n   */\r\n  _now () {\r\n    // Get the current time stamp using the best available timing method.\r\n    if (window.performance.now) {\r\n      return Math.round(window.performance.now())\r\n    } else if (window.performance.webkitNow) {\r\n      return Math.round(window.performance.webkitNow())\r\n    } else {\r\n      return new Date().getTime()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sleeps (pauses) for a duration (in milliseconds).\r\n   * @param {Number} ms - The duration to wait in ms.\r\n   */\r\n  sleep (ms) {\r\n    // Sleeps (pauses) for a duration (in milliseconds).\r\n    if (this._experiment !== null) {\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(ms, constants.RESPONSE_DURATION, null)\r\n    }\r\n  }\r\n\r\n  /** Get the relative time from the start of an experiment.\r\n   * @return {Number} - The current relative time in ms.\r\n   */\r\n  time () {\r\n    // Gives the current timestamp in milliseconds.\r\n    if (this._startTime !== -1) {\r\n      return (this._now() - this._startTime)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n}\r\n","import { constants } from '../system/constants.js'\r\nimport VarStore from '../classes/var_store.js'\r\nimport Clock from '../backends/clock.js'\r\n\r\n/** Class representing an OpenSesame item. */\r\nexport default class Item {\r\n  constructor (experiment, name, script) {\r\n    // Create and set private properties.\r\n    this._parent = null\r\n    this._runner = (experiment.constructor.name === 'Runner') ? experiment : experiment._runner\r\n    this._status = constants.STATUS_NONE\r\n\r\n    // Create and set public properties.\r\n    this.clock = (experiment.constructor.name === 'Runner') ? new Clock(this) : experiment.clock\r\n    this.count = 0\r\n    this.experiment = (experiment.constructor.name === 'Runner') ? this : experiment\r\n    this.name = name\r\n    this.python_workspace = this._runner._pythonWorkspace\r\n    this.response_store = this._runner._responseStore\r\n    this.syntax = this._runner._syntax\r\n    this.vars = new VarStore(this, (experiment.constructor.name === 'Runner') ? null : this.experiment.vars)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Adjust the status of the item.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Implements the complete phase of the item.\r\n    if (this._parent !== null && this._runner._events._currentItem) {\r\n      // Return the process control to the parent of the element.\r\n      this._runner._events._currentItem = this._parent\r\n      this._runner._events._currentItem.run()\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare complete phase of an item. */\r\n  _prepare_complete () {\r\n  }\r\n\r\n  /** Implements the update phase of an item. */\r\n  _update (response) {\r\n  }\r\n\r\n  /**\r\n     * Pauses the object execution. !WARNING This function can not be implemented due the script blocking of javascript.\r\n     * @param {Number} pMs - The sleep time in milliseconds.\r\n     */\r\n  sleep (pMs) {\r\n    this.clock.sleep(pMs)\r\n  }\r\n\r\n  /**\r\n     * Returns the current time.\r\n     * @returns {Number} - The current time in ms from the start of the experiment.\r\n     */\r\n  time () {\r\n    // Returns the current time.\r\n    return this.clock.time()\r\n  }\r\n\r\n  /**\r\n     * Parses comments from a single definition line, indicated by # // or '.\r\n.    * @param {String} line - The definition line to be parsed.\r\n     * @returns {Boolean} - Return true if the commennt is succesfully parsed.\r\n     */\r\n  parse_comment (line) {\r\n    // Parses comments from a single definition line, indicated by # // or '.\r\n    line = line.trim()\r\n    if ((line.length > 0) && (line.charAt(0) === '#')) {\r\n      // Add comments to the array removing the first character.\r\n      this.comments.push(line.slice(1))\r\n      return true\r\n    } else if ((line.length > 1) && (line.charAt(0) === '/')) {\r\n      // Add comments to the array removing the first two characters.\r\n      this.comments.push(line.slice(2))\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Parses keywords  from a single definition line.\r\n     * @param {String} line - The definition line to be parsed.\r\n     * @param {Boolean} fromAscii - If true the source is ascii.\r\n     * @param {Boolean} evaluate - If true the keyword is evaluated.\r\n     * @returns {Object} - Returns the keywords found in the line.\r\n     */\r\n  parse_keyword (line, fromAscii, evaluate) {\r\n  }\r\n\r\n  /**\r\n     * Implements arbitrary line parsing, for item-specific requirements.\r\n     * @param {String} line - The definition line to be parsed.\r\n     */\r\n  parse_line (line) {\r\n  }\r\n\r\n  /**\r\n    * Reads a single variable from a single definition line.\r\n    * @param {String} line - The definition line to be parsed.\r\n    * @return {Boolean} - Return true if the variabel is succesfully parsed.\r\n    */\r\n  parse_variable (line) {\r\n    // Reads a single variable from a single definition line.\r\n    if (this.parse_comment(line)) {\r\n      return true\r\n    } else {\r\n      // Split the single line into a set of tokens.\r\n      const [cmd, args, _kwargs] = this._runner._syntax.parse_cmd(line)\r\n      if (cmd === 'set') {\r\n        if (args.length !== 2) {\r\n          this._runner._debugger.addError('Failed to parse definition: ' + line)\r\n        } else {\r\n          this.vars.set(args[0], args[1])\r\n          return true\r\n        }\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Parses multiline variables from a script\r\n   * @param {String} script - The definition script line to be parsed.\r\n   */\r\n  parse_multiline_vars (script) {\r\n    const vars = this.syntax.parse_multiline_vars(script)\r\n    for (const key in vars) {\r\n      this.vars.set(key, vars[key])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses the item from a definition string.\r\n   * @param {String} script - The definition script line to be parsed.\r\n   */\r\n  from_string (script) {\r\n    // Parses the item from a definition string.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      this.parse_multiline_vars(script)\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          this.parse_line(lines[i])\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the reset item variables method. */\r\n  reset () {\r\n  }\r\n\r\n  /** Implements the prepeare phase of an item. */\r\n  prepare () {\r\n    // Set the internal counter.\r\n    this.experiment.vars.set('count_' + this.name, this.count)\r\n    this.count++\r\n\r\n    // Set the status to initialize.\r\n    this._status = constants.STATUS_INITIALIZE\r\n\r\n    // For debugging.\r\n    this._runner._debugger.addMessage('prepare ' + this.name)\r\n\r\n    // Implements the complete phase of the item (to support blocking script in the prepare phase).\r\n    if (!(this.type === 'sequence' && this._parent.type === 'sequence')) {\r\n      if ((this._parent !== null) && (this.type !== 'feedback')) {\r\n        // Prepare cycle of parent.\r\n        this._parent._prepare_complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set a onset time stamp before running an item.\r\n     * @param {Number} time - The time to store as onset time.\r\n     */\r\n  set_item_onset (time) {\r\n    // Set a timestamp for the item's executions\r\n    time = (typeof time === 'undefined') ? this.clock.time() : time\r\n\r\n    // Add the time stamp to the variable list.\r\n    this.experiment.vars.set('time_' + this.name, time)\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    this._runner._debugger.addMessage('run ' + this.name)\r\n  }\r\n}\r\n","/**\n * Loop utility functions\n */\nimport combos from 'combos'\nimport {\n  isInteger,\n  isArray,\n  isPlainObject,\n  isString,\n  isEmpty,\n  shuffle,\n  zip,\n  zipObject,\n  fromPairs,\n  pick,\n  reverse\n} from 'lodash'\n\n/**\n * Group matrix values by their variables names\n *\n * @param {Object} srcMatrix The source matrix to transform\n * @returns {Object}\n */\nexport function unstack (srcMatrix) {\n  if (!isArray(srcMatrix)) {\n    throw new TypeError('srcMatrix should be an array')\n  }\n  return Object.values(srcMatrix).reduce((acc, cycle) => {\n    for (const [key, val] of Object.entries(cycle)) {\n      if (key in acc) {\n        acc[key].push(val)\n      } else {\n        acc[key] = [val]\n      }\n    }\n    return acc\n  }, {})\n}\n\n/**\n * Convert grouped by variable matrix back to a normal matrix\n * @param {array} srcMatrix\n * @returns {array}\n */\nexport function stack (srcMatrix) {\n  if (!isPlainObject(srcMatrix)) {\n    throw new TypeError('srcMatrix should be an object')\n  }\n  const columns = Object.keys(srcMatrix)\n  const rows = zip(...Object.values(srcMatrix))\n  return rows.map(row => zipObject(columns, row))\n}\n\n/**\n * Creates a full factorial design of all the variable values in the matrix\n * @param {array} matrix The array of cycles to fully cross\n * @returns {array}\n */\nexport function fullfactorial (matrix) {\n  const result = combos(unstack(matrix))\n  return result\n}\n\n/**\n * Shuffles the order of the rows in the matrix. If a column/variable name\n * is specified, only the rows in this column are shuffled.\n *\n * @export\n * @param {array} matrix The matrix to be shuffled\n * @param {array} columns  Array containing the variable/column to be shuffled\n * @returns {array}\n */\nexport function shuffleVert (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof (columns) === 'undefined' || (isArray(columns) && columns.length === 0)) {\n    return shuffle(matrix)\n  } else if (!isArray(columns)) {\n    throw new TypeError('Invalid argument for columns passed to shuffleVert. Expects an array containing column names')\n  } else {\n    const grouped = unstack(matrix)\n    let cols = pick(grouped, columns)\n    cols = Object.entries(cols).reduce((prev, [key, values]) => {\n      prev[key] = shuffle(values)\n      return prev\n    }, {})\n    return stack({ ...grouped, ...cols })\n  }\n}\n\n/**\n * Shuffles the matrix horizontally; shuffle the values of the columns\n * If column names are specified, only these will be shuffled\n *\n * @export\n * @param {array} matrix\n * @param {array} columns\n * @returns {array}\n */\nexport function shuffleHoriz (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof columns === 'undefined') columns = []\n  if (!isArray(columns)) {\n    throw new TypeError('Invalid argument specified to shuffleHoriz. Expects an array that optionally contains column names to shuffle')\n  }\n  return Object.values(matrix).map(row => {\n    const vars = columns.length === 0\n      ? row\n      : pick(row, columns)\n    const keys = Object.keys(vars)\n    let vals = Object.values(vars)\n    vals = shuffle(vals)\n    const res = fromPairs(zip(keys, vals))\n    return { ...row, ...res }\n  })\n}\n\n/**\n * Sorts only the specified columns of the matrix\n *\n * @export\n * @param {array} matrix\n * @param {string} col\n * @returns array\n */\nexport function sortCol (matrix, col) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (!isString(col) || col === '') {\n    throw new Error('Invalid argument specified to sortCol. Expects a column name')\n  }\n  const grouped = unstack(matrix)\n  grouped[col].sort()\n  return stack(grouped)\n}\n\n/**\n * Reverses the matrix order\n * If column names are specified, only their orders are reversed\n * @export\n * @param {array} matrix\n * @param {array} columns\n * @returns {array}\n */\nexport function reverseRows (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof columns === 'undefined') columns = []\n  if (!isArray(columns)) {\n    throw new TypeError('Invalid argument specified to reverseRows. Expects an array containing a column name')\n  }\n  if (columns.length === 0) {\n    return reverse(matrix)\n  } else {\n    const grouped = unstack(matrix)\n    let cols = pick(grouped, columns)\n    if (isEmpty(cols)) {\n      throw new ReferenceError(`one or more of ${columns} were not found in the matrix`)\n    }\n    cols = Object.entries(cols).reduce((prev, [key, values]) => {\n      prev[key] = reverse(values)\n      return prev\n    }, {})\n    return stack({ ...grouped, ...cols })\n  }\n}\n\n/**\n * Rolls the matrix with the specified distance\n *\n * @export\n * @param {array} matrix\n * @param {number} amount\n * @param {string} column\n * @returns array\n */\nexport function roll (matrix, amount, column) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  // operate on a copy of the array to preserve the original\n  matrix = [...matrix]\n\n  amount = parseInt(amount)\n  if (!isInteger(amount)) {\n    throw new TypeError(`amount needs to be an integer, was ${amount}`)\n  }\n\n  if (!column) {\n    return rollN(matrix, amount)\n  }\n\n  if (!isString(column)) {\n    throw new TypeError(`column expects a string, was ${column}`)\n  } else {\n    const grouped = unstack(matrix)\n    if (!Object.prototype.hasOwnProperty.call(grouped, column)) {\n      throw new ReferenceError(`Could not find column ${column} in matrix`)\n    }\n    grouped[column] = rollN(grouped[column], amount)\n    return stack(grouped)\n  }\n}\n\n/**\n * Roll array contents forward or backward by the specified amount\n *\n * @param {array} list\n * @param {number} amount\n * @returns {array}\n */\nfunction rollN (list, amount) {\n  if (amount > 0) {\n    for (let i = 0; i < amount; i++) {\n      list.unshift(list.pop())\n    }\n  } else {\n    for (let i = 0; i > amount; i--) {\n      list.push(list.shift())\n    }\n  }\n  return list\n}\n\n/**\n * Duplicate (or remove) rows depending on the specified weight parameter\n *\n * @param {array} matrix The matrix containing the data\n * @param {string} weightCol The colom to use for weight values\n */\nexport function weight (matrix, weightCol) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (!isString(weightCol)) {\n    throw new TypeError('Invalid argument passed to weight. Expects a column name')\n  }\n  if (!Object.prototype.hasOwnProperty.call(matrix[0], weightCol)) {\n    throw new ReferenceError(`Column '${weightCol}' not found in matrix`)\n  }\n  return matrix.reduce((result, item) => {\n    const weight = parseInt(item[weightCol])\n    if (!isInteger(weight)) {\n      throw new TypeError('Specified weight value is not an integer')\n    }\n    for (let i = 0; i < weight; i++) {\n      result.push(item)\n    }\n    return result\n  }, [])\n}\n","import {\r\n  isNumber,\r\n  isArray,\r\n  shuffle,\r\n  sortBy\r\n} from 'lodash'\r\n\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\nimport Item from './item.js'\r\n\r\nimport {\r\n  fullfactorial,\r\n  shuffleVert,\r\n  shuffleHoriz,\r\n  sortCol,\r\n  reverseRows,\r\n  roll,\r\n  weight\r\n} from '../util/matrix'\r\n\r\n/**\r\n * Class representing a sequence item.\r\n * @extends Item\r\n */\r\nexport default class Loop extends Item {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Repeatedly runs another item'\r\n    this.matrix = null\r\n\r\n    // Definition of private properties.\r\n    this._break_if = ''\r\n    this._cycles = []\r\n    this._index = 0\r\n    this._keyboard = null\r\n    this._operations = []\r\n    this._initialized = false\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    this._status = constants.STATUS_FINALIZE\r\n    super._complete()\r\n  }\r\n\r\n  /**\r\n   * Scans the provided list of argument for variables and retrieves them if found.\r\n   * The function works recursively and thus also parses elements inside arrays that are part of\r\n   * args.\r\n   *\r\n   * @param {array} args The list of arguments to parse.\r\n   * @returns {array} The parsed arguments list\r\n   */\r\n  _eval_args (args) {\r\n    if (!isArray(args)) return args\r\n    return args.map( el => {\r\n      if (isArray(el)) {\r\n        return this._eval_args(el)\r\n      } else {\r\n        return this._runner._syntax.remove_quotes(this._runner._syntax.eval_text(el))\r\n      }\r\n    })\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.orig_matrix = []\r\n    this.vars.cycles = 1\r\n    this.vars.repeat = 1\r\n    this.vars.skip = 0\r\n    this.vars.offset = 'no'\r\n    this.vars.order = 'random'\r\n    this.vars.item = ''\r\n    this.vars.break_if = 'never'\r\n    this._index = 0\r\n    this._operations = []\r\n    this._initialized = false\r\n  }\r\n\r\n  /**\r\n   * Parse a definition string and retrieve all properties of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  from_string (script) {\r\n    // Creates a loop from a definition in a string.\r\n    this.comments = []\r\n    this.variables = {}\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script != null) {\r\n      const lines = script.split('\\n')\r\n      for (let i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          const [instruction, ...params] = this.syntax.split(lines[i])\r\n\r\n          let cycle, name, value\r\n\r\n          switch (instruction) {\r\n          case 'run':\r\n            if (params.length > 0) this.vars.item = params[0]\r\n            break\r\n          case 'setcycle':\r\n            if (params.length <= 2) {\r\n              this._runner._debugger.addError(`Incorrect setcycle command in item ${this.name}`)\r\n              break\r\n            }\r\n            cycle = params[0]\r\n            name = params[1]\r\n            value = this.syntax.remove_quotes(params[2])\r\n            // Check if the value is numeric\r\n            value = isNumber(value) ? Number(value) : value\r\n            // If a python expression, convert to javascript.\r\n            if (value[0] === '=') {\r\n              // Parse the python statement.\r\n              value = this._runner._pythonParser._prepare(value.slice(1))\r\n              if (value !== null) {\r\n                value = value.body[0]\r\n              }\r\n            }\r\n            if (this.orig_matrix[cycle] === undefined) {\r\n              this.orig_matrix[cycle] = {}\r\n            }\r\n            this.orig_matrix[cycle][name] = value\r\n            break\r\n          case 'fullfactorial':\r\n            this._operations.push([fullfactorial, []])\r\n            break\r\n          case 'shuffle':\r\n            this._operations.push([shuffleVert, [params]])\r\n            break\r\n          case 'shuffle_horiz':\r\n            this._operations.push([shuffleHoriz, [params]])\r\n            break\r\n          case 'slice':\r\n            this._operations.push([(matrix, args) => matrix.slice(...args), [params]])\r\n            break\r\n          case 'sort':\r\n            this._operations.push([sortCol, [...params]])\r\n            break\r\n          case 'sortby':\r\n            this._operations.push([sortBy, [params]])\r\n            break\r\n          case 'reverse':\r\n            this._operations.push([reverseRows, [params]])\r\n            break\r\n          case 'roll':\r\n            this._operations.push([roll, [...params]])\r\n            break\r\n          case 'weight':\r\n            this._operations.push([weight, [...params]])\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prepares the variables for one single cycle within the loop.\r\n   * @param {Number} cycle -The cycle to apply.\r\n   */\r\n  apply_cycle (cycle) {\r\n    // Sets all the loop variables according to the cycle.\r\n    if (cycle in this.matrix) {\r\n      for (const variable in this.matrix[cycle]) {\r\n        // Get the value of the variable.\r\n        let value = this.matrix[cycle][variable]\r\n\r\n        // Check for python expression.\r\n        if (typeof value === 'object') {\r\n          // value contains ast tree, run the parser.\r\n          try {\r\n            // Evaluate the expression\r\n            value = this._runner._pythonParser._runstatement(value)\r\n          } catch (e) {\r\n            // Error during evaluation.\r\n            this._runner._debugger.addError(\r\n              'Failed to evaluate expression in in loop item: ' + this.name + ' (' + value + ')')\r\n          }\r\n        } else {\r\n          // Evaluate variabels potentially available in value.\r\n          value = this._runner._syntax.eval_text(value)\r\n        }\r\n        // Set the variable.\r\n        this.experiment.vars.set(variable, value)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n\r\n    // Make sure the item to run exists.\r\n    if (this.experiment.items._items[this.vars.item] === 'undefined') {\r\n      this._runner._debugger.addError('Could not find an item which is called by loop item: ' +\r\n      this.name + ' (' + this.vars.item + ')')\r\n    }\r\n    this._initialized = false\r\n    super.prepare()\r\n    this.set_item_onset()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    if (!this._initialized) {\r\n      // The first step is to create an array of cycle indices (`cycles`). We\r\n      // first add the integer part of the repeats to this array, which results\r\n      // in a `cycles` array with a length that is a multiple of the original\r\n      // matrix length.\r\n      let cycles = []\r\n      const wholeRepeats = Math.floor(this.vars.repeat)\r\n      for (let j = 0; j < wholeRepeats; j++) {\r\n        for (let i in this.orig_matrix) {\r\n          cycles.push(i)\r\n        }\r\n      }\r\n      // Next, we add the non-integer part of the repeats to the cycles array.\r\n      const partialRepeats = this.vars.repeat - wholeRepeats\r\n      if (partialRepeats > 0) {\r\n        // Get an array of all cycles indices. (This syntax is like a range().)\r\n        // For randomly ordered loops, shuffle the order of the indices.\r\n        // This makes sure that the next step of determining the repeatcycles\r\n        // is a 'random selection without replacement'\r\n        let allCycles = [...Array(this.orig_matrix.length).keys()]\r\n        if (this.vars.order === 'random') {\r\n          allCycles = shuffle(allCycles)\r\n        }\r\n        // Add the remaining cycles to the cycles array\r\n        const remainder = Math.floor(this.orig_matrix.length * partialRepeats)\r\n        cycles = [...cycles, ...allCycles.splice(0, remainder)]\r\n      }\r\n      if (this.vars.order === 'random') {\r\n        cycles = shuffle(cycles)\r\n      }\r\n      // Create a live matrix that takes into account the repeats and the\r\n      // shuffles.\r\n      this.matrix = []\r\n      this._cycles = []\r\n      for (let k in cycles) {\r\n        this.matrix.push(this.orig_matrix[cycles[k]])\r\n        this._cycles.push(k)\r\n      }\r\n      // Perform the operations\r\n      this.matrix = this._operations.reduce((mtrx, [func, args]) =>\r\n        func(mtrx, ...this._eval_args(args)), this.matrix)\r\n      this._initialized = true\r\n      this._index = null\r\n    } // end init\r\n    // Check if if the cycle must be repeated.\r\n    if (this.experiment.vars.repeat_cycle === 1 && this._index !== null) {\r\n      this._runner._debugger.msg('Repeating cycle: ' + this._index)\r\n      this._cycles.push(this._index)\r\n      if (this.vars.get('order') === 'random') {\r\n        this._cycles = shuffle(this._cycles)\r\n      }\r\n    }\r\n    // When the loop is finished\r\n    if (this._cycles.length == 0) {\r\n      this._complete()\r\n      return\r\n    }\r\n    // Prepare for the current cycle\r\n    this._index = this._cycles.shift()\r\n    this.apply_cycle(this._index)\r\n    this.experiment.vars.repeat_cycle = 0\r\n    // Process the break-if statement\r\n    const break_if_val = this.vars.get('break_if', undefined, false)\r\n    this._break_if = ['never', ''].includes(break_if_val)\r\n      ? null\r\n      : this.syntax.compile_cond(break_if_val)\r\n    if (this._break_if !== null) {\r\n      this.python_workspace['this'] = this\r\n      if (this.python_workspace._eval(this._break_if) === true) {\r\n        this._complete()\r\n        this._initialized = false\r\n        return\r\n      }\r\n    }\r\n    // Execute the item to run\r\n    if (this._runner._itemStore._items[this.vars.item].type === 'sequence') {\r\n      this._runner._itemStore.prepare(this.vars.item, this)\r\n    } else {\r\n      this._runner._itemStore.execute(this.vars.item, this)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/** Class representing a keyboard device. */\r\nexport default class Keyboard {\r\n  /**\r\n   * Create an object which represents a keyboard device.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  constructor (experiment, timeOut, keyList) {\r\n    // Create and set private properties.\r\n    this._experiment = experiment // Anchor to the experiment object.\r\n    this._keyList = (typeof keyList === 'undefined') ? [] : keyList // List of acceptable response keys.\r\n    this._timeOut = (typeof timeOut === 'undefined') ? null : timeOut // Duration in millisecond for time-out.\r\n\r\n    // Set constant properties.\r\n    this._SYNONIEM_MAP = [\r\n      ['space', ' ', 'SPACE'],\r\n      ['\"', 'quotedbl', 'QUOTEDBL'],\r\n      ['!', 'exclaim', 'EXCLAIM'],\r\n      ['#', 'hash', 'HASH'],\r\n      ['$', 'dollar', 'DOLLAR'],\r\n      ['&', 'ampersand', 'AMPERSAND'],\r\n      [\"'\", 'quote', 'QUOTE'],\r\n      ['(', 'leftbracket', 'leftparen', 'LEFTBRACKET', 'LEFTPAREN'],\r\n      [')', 'rightbracket', 'rightparen', 'RIGHTBRACKET', 'RIGHTPAREN'],\r\n      ['*', 'asteriks', 'ASTERISK'],\r\n      ['+', 'plus', 'PLUS'],\r\n      [',', 'comma', 'COMMA'],\r\n      ['-', 'minus', 'MINUS'],\r\n      ['.', 'period', 'PERIOD'],\r\n      ['/', 'slash', 'SLASH'],\r\n      ['1'],\r\n      ['2'],\r\n      ['3'],\r\n      ['4'],\r\n      ['5'],\r\n      ['6'],\r\n      ['7'],\r\n      ['8'],\r\n      ['9'],\r\n      ['0'],\r\n      ['=', 'equals', 'EQUALS'],\r\n      [':', 'colon', 'COLON'],\r\n      [';', 'semicolon', 'SEMICOLON'],\r\n      ['<', 'less', 'LESS'],\r\n      ['>', 'greater', 'GREATER'],\r\n      ['?', 'question', 'QUESTION'],\r\n      ['@', 'at', 'AT'],\r\n      ['a', 'A'],\r\n      ['b', 'B'],\r\n      ['c', 'C'],\r\n      ['d', 'D'],\r\n      ['e', 'E'],\r\n      ['f', 'F'],\r\n      ['g', 'G'],\r\n      ['h', 'H'],\r\n      ['i', 'I'],\r\n      ['j', 'J'],\r\n      ['k', 'K'],\r\n      ['l', 'L'],\r\n      ['m', 'M'],\r\n      ['n', 'N'],\r\n      ['o', 'O'],\r\n      ['p', 'P'],\r\n      ['q', 'Q'],\r\n      ['r', 'R'],\r\n      ['s', 'S'],\r\n      ['t', 'T'],\r\n      ['u', 'U'],\r\n      ['v', 'V'],\r\n      ['w', 'W'],\r\n      ['x', 'X'],\r\n      ['y', 'Y'],\r\n      ['z', 'Z'],\r\n      ['kp0', 'KP0'],\r\n      ['kp1', 'KP1'],\r\n      ['kp2', 'KP2'],\r\n      ['kp3', 'KP3'],\r\n      ['kp4', 'KP4'],\r\n      ['kp5', 'KP5'],\r\n      ['kp6', 'KP6'],\r\n      ['kp7', 'KP7'],\r\n      ['kp8', 'KP8'],\r\n      ['kp9', 'KP9'],\r\n      ['kp_divide', 'KP_DIVIDE'],\r\n      ['kp_enter', 'KP_ENTER'],\r\n      ['kp_equals', 'KP_EQUALS'],\r\n      ['kp_minus', 'KP_MINUS'],\r\n      ['kp_multiply', 'KP_MULTIPLY'],\r\n      ['kp_period', 'KP_PERIOD'],\r\n      ['kp_plus', 'KP_PLUS'],\r\n      ['\\\\', 'backslash', 'BACKSLASH'],\r\n      ['^', 'power', 'caret', 'POWER', 'CARET'],\r\n      ['_', 'underscore', 'UNDERSCORE'],\r\n      ['`', 'backquote', 'BACKQUOTE'],\r\n      ['f1', 'F1', 'help', 'HELP'],\r\n      ['f2', 'F2'],\r\n      ['f3', 'F3'],\r\n      ['f4', 'F4'],\r\n      ['f5', 'F5'],\r\n      ['f6', 'F6'],\r\n      ['f7', 'F7'],\r\n      ['f8', 'F8'],\r\n      ['f9', 'F9'],\r\n      ['f10', 'F10'],\r\n      ['f11', 'F11'],\r\n      ['f12', 'F12'],\r\n      ['f13', 'F13'],\r\n      ['f14', 'F14'],\r\n      ['f15', 'F15'],\r\n      ['up', 'UP'],\r\n      ['down', 'DOWN'],\r\n      ['left', 'LEFT'],\r\n      ['right', 'RIGHT'],\r\n      ['menu', 'MENU'],\r\n      ['lshift', 'left shift', 'LSHIFT', 'LEFT SHIFT'],\r\n      ['lctrl', 'left ctrl', 'LCTRL', 'LEFT CTRL'],\r\n      ['lalt', 'left alt', 'LALT', 'LEFT ALT'],\r\n      ['rshift', 'right shift', 'RSHIFT', 'RIGHT SHIFT'],\r\n      ['rctrl', 'right ctrl', 'RCTRL', 'RIGHT CTRL'],\r\n      ['ralt', 'right alt', 'alt gr', 'RALT', 'RIGHT ALT', 'ALT GR'],\r\n      ['page up', 'pageup', 'PAGE UP', 'PAGEUP'],\r\n      ['page down', 'pagedown', 'PAGE DOWN', 'PAGEDOWN'],\r\n      ['pause', 'PAUSE'],\r\n      ['scroll lock', 'scrollock', 'SCROLL LOCK', 'SCROLLOCK'],\r\n      ['caps lock', 'capslock', 'CAPS LOCK', 'CAPSLOCK'],\r\n      ['nummlock', 'NUMMLOCK'],\r\n      ['clear', 'CLEAR'],\r\n      ['enter', 'ENTER', 'return', 'RETURN'],\r\n      ['tab', 'TAB'],\r\n      ['backspace', 'BACKSPACE'],\r\n      ['end', 'END'],\r\n      ['home', 'HOME'],\r\n      ['insert', 'INSERT'],\r\n      ['delete', 'DELETE'],\r\n      ['sysreq', 'sys req', 'SYSREQ', 'SYS REQ'],\r\n      ['break', 'BREAK'],\r\n      ['escape', 'ESCAPE'],\r\n      ['print', 'PRINT'],\r\n      ['print screen', 'PRINT SCREEN'],\r\n      ['lmeta', 'left meta', 'LMETA', 'LEFT META', 'lsuper', 'LSUPER', 'left super', 'LEFT SUPER'],\r\n      ['rmeta', 'right meta', 'RMETA', 'RIGHT META', 'rsuper', 'right super', 'RSUPER', 'RIGHT SUPER'],\r\n      // key defined below are not supported yet.\r\n      ['euro', 'EURO'],\r\n      ['first', 'FIRST'],\r\n      ['last', 'LAST'],\r\n      ['kp enter', 'KP ENTER'],\r\n      ['kp equals', 'KP EQUALS'],\r\n      ['mode', 'MODE'],\r\n      ['unknown', 'UNKNOWN'],\r\n      ['unknown key', 'UNKNOWN KEY']\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Convert all response values to their default values (remove synoniems).\r\n   * @param {Array} responses - A list of response values.\r\n   * @return {Array} - List of default values for the given responses.\r\n   */\r\n  _get_default_from_synoniem (responses) {\r\n    const defaults = []\r\n    let synonyms\r\n    for (let i = 0; i < responses.length; i++) {\r\n      synonyms = this._synonyms(responses[i])\r\n      if (typeof synonyms === 'undefined') {\r\n        throw new ReferenceError(`Unknown key '${responses[i]}'`)\r\n      }\r\n      defaults.push(synonyms[0])\r\n    }\r\n    return defaults\r\n  }\r\n\r\n  /**\r\n   * Set the configuration for the keyboard backend.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  _set_config (timeOut, keyList) {\r\n    // Set the properties.\r\n    this._keyList = keyList\r\n    this._timeOut = timeOut\r\n  }\r\n\r\n  /**\r\n   * Convert a response value to its default value (remove synoniem).\r\n   * @param {String} button - A response.\r\n   * @return {String|Null} - Default value of the response.\r\n   */\r\n  _synonyms (button) {\r\n    if (typeof button !== 'undefined') {\r\n      for (let i = 0; i < this._SYNONIEM_MAP.length; i++) {\r\n        for (let j = 0; j < this._SYNONIEM_MAP[i].length; j++) {\r\n          if (this._SYNONIEM_MAP[i][j] === button) {\r\n            return this._SYNONIEM_MAP[i]\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  /** Clear all pending keyboard input. */\r\n  flush () {\r\n    // Always returns false because flusihing is not possible.\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Collects a single key press.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  get_key (timeOut, keyList) {\r\n    // Collects a single key press.\r\n    this._keyList = (typeof keyList === 'undefined') ? this._keyList : keyList\r\n    this._timeOut = (typeof timeOut === 'undefined') ? this._timeOut : timeOut\r\n\r\n    if (this._experiment !== null) {\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(this._timeOut, constants.RESPONSE_KEYBOARD, this._keyList)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the moderator keys (LIST, CTRL, ALT) pressed during a response.\r\n   * @return {Array} - List of pressed moderator keys.\r\n   */\r\n  get_mods () {\r\n    var moderators = []\r\n    if (this._experiment._runner._events.keyDownEvent !== null) {\r\n      if (this._experiment._runner._events.keyDownEvent.event.shiftKey === true) {\r\n        moderators.push('shift')\r\n      }\r\n      if (this._experiment._runner._events.keyDownEvent.event.ctrlKey === true) {\r\n        moderators.push('ctrl')\r\n      }\r\n      if (this._experiment._runner._events.keyDownEvent.event.altKey === true) {\r\n        moderators.push('alt')\r\n      }\r\n    }\r\n    return moderators\r\n  }\r\n\r\n  /**\r\n   * Shows or hides a virtual keyboard.\r\n   * @param {Boolean} visible - If true the virtual keyboard is shown.\r\n   */\r\n  show_virtual_keyboard (visible) {\r\n    // Shows or hides a virtual keyboard.\r\n    if (visible === true) {\r\n      // Hack to show the virutal keyboard. ## Must be tested!\r\n      this._experiment._runner._renderer.view.focus()\r\n    } else {\r\n      // Hack to hide the virtual keyboard. ## Must be tested!\r\n      var tmp = document.createElement('input')\r\n      document.body.appendChild(tmp)\r\n      tmp.focus()\r\n      document.body.removeChild(tmp)\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a Sequence item.\r\n * @extends Item\r\n */\r\nexport default class Sequence extends Item {\r\n  /** The sequence class controls the running of a series of items. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._index = -1\r\n    this._items = null\r\n    this._keyboard = null\r\n\r\n    // Create and set public properties.\r\n    this.description = 'Runs a number of items in sequence'\r\n    this.flush_keyboard = 'yes'\r\n    this.items = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the prepare complete phase of an item. */\r\n  _prepare_complete () {\r\n    // Generate the items list for the run cycle.\r\n    if (this._index < this.items.length) {\r\n      if ((this.items[this._index].item in this._runner._itemStore._items) === false) {\r\n        this._runner._debugger.addError('Could not find a child item which is called by sequence item: ' + this.name + ' (' + this.items[this._index].item.name + ')')\r\n      } else {\r\n        // Increase the current index.\r\n        this._index++\r\n\r\n        // Add the item to the internal list.\r\n        this._items.push({\r\n          item: this.items[this._index - 1].item,\r\n          cond: this.syntax.compile_cond(this.items[this._index - 1].cond)\r\n        })\r\n\r\n        // Prepare the item.\r\n        this._runner._itemStore.prepare(this.items[this._index - 1].item, this)\r\n      }\r\n    } else {\r\n      // Prepare process is done, start execution.\r\n      this._index = 0\r\n\r\n      // Remove the prepare phase form the stack.\r\n      this._runner._itemStack.pop()\r\n\r\n      // Check if this sequence is part of a parent sequence and must jump back in the prepare phase.\r\n      if (this._parent.type === 'sequence') {\r\n        this._parent._prepare_complete()\r\n      } else {\r\n        // Execute the next cycle of the sequence itself.\r\n        this._runner._itemStore.run(this.name, this._parent)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.items = []\r\n    this.vars.flush_keyboard = 'yes'\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Parses a definition string.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          var tokens = this.syntax.split(lines[i])\r\n          if ((tokens.length > 0) && (tokens[0] === 'run')) {\r\n            var item = tokens[1]\r\n            var cond = 'always'\r\n            if (tokens.length > 2) {\r\n              cond = this.syntax.strip_slashes(\r\n                this.syntax.remove_quotes(tokens[2])\r\n              )\r\n            }\r\n            // Push the item and condition definition to the items list.\r\n            this.items.push({\r\n              item: item,\r\n              cond: cond\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Inherited.\r\n    super.prepare()\r\n\r\n    // Create a keyboard to flush responses at the start of the run phase\r\n    if (this.vars.flush_keyboard === 'yes') {\r\n      this._keyboard = new Keyboard(this.experiment)\r\n    } else {\r\n      this._keyboard = null\r\n    }\r\n\r\n    // Generate the items list for the run cycle.\r\n    this._index = 0\r\n    this._items = []\r\n\r\n    // Prepare the items.\r\n    this._prepare_complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Check if all items have been processed.\r\n    if (this._index < this._items.length) {\r\n      // Flush the keyboard at the beginning of the sequence.\r\n      if ((this._index === 0) && (this.vars.flush_keyboard === 'yes')) {\r\n        this._keyboard.flush()\r\n      }\r\n\r\n      // Increase the current index.\r\n      this._index++\r\n      const currentItem = this._items[this._index - 1]\r\n\r\n      // Set the workspace.\r\n      this._runner._pythonWorkspace.self = this\r\n\r\n      // Check if the item may run.\r\n      if (this._runner._pythonWorkspace._eval(currentItem.cond) === true) {\r\n        // run the current item of the sequence object.\r\n        this._runner._itemStore.run(currentItem.item, this)\r\n      } else {\r\n        // Execute the next cycle of the sequence itself.\r\n        this.run()\r\n      }\r\n    } else {\r\n      // sequence is finalized.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import sortBy from 'lodash/sortBy'\nimport isFunction from 'lodash/isFunction'\n\nimport Item from './item.js'\nimport { constants } from '../system/constants.js'\n\n/**\n * Class representing coroutines\n * @extends Item\n */\nexport default class Coroutines extends Item {\n  constructor (experiment, name, script) {\n    // Inherited create.\n    super(experiment, name, script)\n    // Definition of public properties.\n    this.description = 'Repeatedly runs another item'\n    // The tasks to perform\n    this.tasks = []\n    // The tasks to perform this iteration\n    this.schedule = []\n    // Process the script.\n    this.from_string(script)\n  }\n\n  from_string (script) {\n    if (script === null) return\n    for (const s of script.split('\\n')) {\n      const [cmd, arglist, kwdict] = this.experiment.syntax.parse_cmd(s)\n      if (cmd === 'set') {\n        const [variable, value] = arglist\n        this.vars[variable] = value\n      }\n      if (cmd === 'run' && arglist.length) {\n        const task = {\n          item_name: arglist.shift(),\n          start_time: kwdict.start || 0,\n          end_time: kwdict.end || 0,\n          run_if: kwdict.runif || 'always'\n        }\n        this.tasks.push(task)\n      }\n    }\n  }\n\n  prepare () {\n    this._runner._debugger.addMessage(`Preparing coroutines item '${this.name}'`)\n    this.schedule = this.tasks.reduce((result, taskParams) => {\n      const item_name = this._runner._syntax.eval_text(taskParams.item_name, this.vars)\n      const item = this._runner._itemStore._items[item_name]\n      if (!item) {\n        const msg = `Coroutines '${this.name}' - could not find item: ${item_name}`\n        this._runner._debugger.addError(msg)\n        throw new Error(msg)\n      }\n      this._runner._pythonWorkspace.self = this\n      const cond = this._runner._syntax.compile_cond(taskParams.run_if)\n      if (this._runner._pythonWorkspace._eval(cond) === true) {\n        const start_time = this._runner._syntax.eval_text(taskParams.start_time, this.vars)\n        const end_time = this._runner._syntax.eval_text(taskParams.end_time, this.vars)\n        result.push(new Task(item, item_name, start_time, end_time,\n          taskParams.item_name === this.vars.get('end_after_item')))\n      }\n      return result\n    }, [])\n    super.prepare()\n  }\n\n  run () {\n    this._runner._debugger.addMessage(`Running coroutines item '${this.name}'`)\n    super.run()\n    // Prepare all tasks\n    for (const task of this.schedule) {\n      this._runner._itemStore.prepare(task.item_name, this)\n    }\n    this.schedule = sortBy(this.schedule, 'start_time')\n    // Launch all tasks and wrap them in the coroutine helper\n    for (const task of this.schedule) {\n      this._runner._debugger.addMessage(`Launching task '${task.item_name}'`)\n      task.launch()\n    }\n\n    this.active = []\n    this.dt = 0\n    this.t0 = performance.now()\n    this.running = true\n\n    this._loop()\n  }\n\n  _loop () {\n    while (this.schedule.length > 0 && this.schedule[0].started(this.dt)) {\n      this.active.push(this.schedule.shift())\n    }\n    this.active = sortBy(this.active, 'end_time')\n    const _active = []\n    for (const task of this.active) {\n      const status = task.step()\n      if (status === task.RUNNING) {\n        _active.push(task)\n        continue\n      }\n      if (status === task.ABORTED) {\n        this.running = false\n      }\n    }\n    this.active = _active\n    while (this.active.length > 0 && this.active[0].stopped(this.dt)) {\n      this.active.shift()\n    }\n\n    this.dt = performance.now() - this.t0\n    if (this.running && this.dt < this.vars.get('duration') &&\n      ![constants.TIMER_BREAK, constants.TIMER_EXIT, constants.TIMER_ERROR]\n        .includes(this._runner._events._state)) {\n      setTimeout(this._loop.bind(this), 0) // The well-known trick to deal with JS async nature...\n    } else {\n      // Kill all remaining tasks\n      for (const task of this.active) {\n        this._runner._debugger.addMessage(`Killing task '${task.item_name}'`)\n        task.kill()\n      }\n      this._complete()\n    }\n  }\n}\n\nclass Task {\n  UNINITIALISED = 0\n  RUNNING = 1\n  FINISHED = 2\n  ABORTED = -1\n\n  constructor (item, item_name, start_time, end_time, abort_on_end) {\n    this.item = item\n    this.item_name = item_name\n    this.start_time = start_time\n    this.end_time = end_time\n    this.abort_on_end = abort_on_end\n    this.state = this.UNINITIALISED\n    this._coroutine = null\n    this.step = () => { throw new Error('Task has not been initialized') }\n  }\n\n  launch () {\n    if (!isFunction(this.item.coroutine)) {\n      throw new Error(`Item ${this.item_name} does not have correct coroutine implementation`)\n    }\n    this._coroutine = this.item.coroutine()\n    this._coroutine.next()\n    this.step = () => {\n      // console.log(`Stepping ${this.item_name}`)\n      const { value, done } = this._coroutine.next(true)\n      if (value === false) {\n        this.state = this.ABORTED\n        return this.ABORTED\n      }\n      if (done === true) {\n        let newState\n        if (this.abort_on_end) {\n          newState = this.ABORTED\n        } else {\n          newState = this.FINISHED\n        }\n        this.state = newState\n        return this.state\n      }\n      return this.state // Should be this.RUNNING\n    }\n    this.state = this.RUNNING\n  }\n\n  started (dt) {\n    return dt >= this.start_time\n  }\n\n  stopped (dt) {\n    if (dt < this.end_time) {\n      return false\n    }\n    return this.kill()\n  }\n\n  kill () {\n    const response = this._coroutine.next(false)\n    if (response.done === true) {\n      this.state = this.FINISHED\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/** Class representing a mouse device. */\r\nexport default class Mouse {\r\n  /**\r\n   * Create an object which represents a mouse device.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  constructor (experiment, timeOut, buttonList, visible) {\r\n    // Create and set public properties.\r\n    this._experiment = experiment\r\n    this._timeOut = (typeof timeOut === 'undefined') ? null : timeOut\r\n    this._buttonList = (typeof buttonList === 'undefined') ? null : buttonList\r\n    this._visible = (typeof visible === 'undefined') ? false : visible\r\n\r\n    // Set constant properties.\r\n    this._SYNONIEM_MAP = [\r\n      ['1', 'left_button'],\r\n      ['2', 'middle_button'],\r\n      ['3', 'right_button'],\r\n      ['4', 'scroll_up'],\r\n      ['5', 'scroll_down']\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Convert all response values to their default values (remove synoniems).\r\n   * @param {Array} responses - A list of response values.\r\n   * @return {Array} - List of default values for the given responses.\r\n   */\r\n  _get_default_from_synoniem (responses) {\r\n    // Return the default synoniem value from a response.\r\n    var defaults = []\r\n    for (var i = 0; i < responses.length; i++) {\r\n      var synoniem = this._synonyms(responses[i])\r\n      defaults.push(synoniem[0])\r\n    }\r\n    return defaults\r\n  }\r\n\r\n  /**\r\n   * Set the configuration for the mouse backend.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  _set_config (timeOut, buttonList, visible) {\r\n    // Set mouse properties.\r\n    this._timeOut = timeOut\r\n    this._buttonList = buttonList\r\n    this._visible = visible\r\n  }\r\n\r\n  /**\r\n   * Convert a response value to its default value (remove synoniem).\r\n   * @param {String} button - A response.\r\n   * @return {String|Null} - Default value of the response or null if none.\r\n   */\r\n  _synonyms (button) {\r\n    if (typeof button !== 'undefined') {\r\n      for (var i = 0; i < this._SYNONIEM_MAP.length; i++) {\r\n        for (var j = 0; j < this._SYNONIEM_MAP[i].length; j++) {\r\n          if (this._SYNONIEM_MAP[i][j] === button) {\r\n            return this._SYNONIEM_MAP[i]\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  /** Clear all pending mouse input. */\r\n  flush () {\r\n    // Always returns false because flusihing is not possible.\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Collects a single mouse click.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  get_click (timeOut, buttonList, visible) {\r\n    // Collects a single mouse click.\r\n    this._timeOut = (typeof timeOut === 'undefined') ? this._timeOut : timeOut\r\n    this._buttonList = (typeof buttonList === 'undefined') ? this._buttonList : buttonList\r\n    this._visible = (typeof visible === 'undefined') ? this._visible : visible\r\n\r\n    if (this._experiment !== null) {\r\n      // Hide or show the mouse.\r\n      this.show_cursor(this._visible)\r\n\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(this._timeOut, constants.RESPONSE_MOUSE, this._buttonList)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Returns the current mouse position. !Warning: this methods uses the state in\r\n   *  the last known mouse move, not the current state.\r\n   *  @param {Object} - Object with time, x and y coordinate of the mouse cursor.\r\n   */\r\n  get_pos () {\r\n    // Returns the current mouse position. !Warning: this methods uses the state in the last known mouse respone, not the current state.\r\n    if (this._experiment._runner._events._mouseMoveEvent !== null) {\r\n      return {\r\n        rtTime: this._experiment._runner._events._mouseMoveEvent.rtTime,\r\n        x: this._experiment._runner._events._mouseMoveEvent.event.clientX,\r\n        y: this._experiment._runner._events._mouseMoveEvent.event.clientY\r\n      }\r\n    } else {\r\n      return {\r\n        rtTime: -1,\r\n        x: -1,\r\n        y: -1\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Returns the current mouse position. !Warning: this methods uses the state in\r\n   *  the last known mouse press, not the current state.\r\n   *  @param {Object} - Object with the state of the mouse buttons.\r\n   */\r\n  get_pressed () {\r\n    // Returns the current button state of the mouse buttons. !Warning: this methods uses the state in the last known mouse respone, not the current state.\r\n    if (this._experiment._runner.events._mouse_press !== null) {\r\n      return {\r\n        buttons: [(this._experiment._runner._events._mouseDownEvent.event.button === 0),\r\n          (this._experiment._runner._events._mouseDownEvent.event.button === 1),\r\n          (this._experiment._runner._events._mouseDownEvent.event.button === 2)\r\n        ]\r\n      }\r\n    } else {\r\n      return {\r\n        buttons: [null, null, null]\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Sets the current position of the cursor. */\r\n  set_pos (pos) {}\r\n\r\n  /**\r\n   * Shows or hides the mouse cursor.\r\n   * @param {Boolean} show - If true the mouse cursor is shown.\r\n   */\r\n  show_cursor (show) {\r\n    // Set the property\r\n    this._visible = show\r\n\r\n    // Immediately changes the visibility of the mouse cursor.\r\n    if (show === true) {\r\n      // Show the mouse cursor.\r\n      this._experiment._runner._renderer.view.style.cursor = 'default'\r\n    } else {\r\n      // Set the cursor visibility to none.\r\n      this._experiment._runner._renderer.view.style.cursor = 'none'\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\nimport Mouse from '../backends/mouse.js'\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a GeneralResponse item.\r\n * @extends Item\r\n */\r\nexport default class GenericResponse extends Item {\r\n  /** The sequence class controls the running of a serie of items. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._allowed_responses = null\r\n    this._duration = 0\r\n    this._duration_func = null\r\n    this._keyboard = null\r\n    this._mouse = null\r\n    this._responsetype = constants.RESPONSE_NONE\r\n    this._timeout = -1\r\n\r\n    // Create and set public properties.\r\n    this.auto_response = 'a'\r\n    this.process_feedback = false\r\n    this.synonyms = null\r\n  }\r\n\r\n  /** Implements the complete phase of the general response item. */\r\n  _complete () {\r\n    // Check if a timeout has occured which must be treaded as a response.\r\n    let timeout = this.vars.get('timeout')\r\n    if ((typeof timeout !== 'undefined') &&\r\n      ((this.experiment._runner._events._timeStamp - this.experiment.vars.get('time_' + this.name)) > timeout)) {\r\n      // Process the timeout none response.\r\n      this.process_response_timeout()\r\n    }\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /**\r\n     * Implements the update response phase of the general response item.\r\n     * @param {Object} response - The response object which is evaluated.\r\n     */\r\n  _update (response) {\r\n    if (response !== null) {\r\n      // Implements the update response phase of the item.\r\n      if ((this._responsetype === constants.RESPONSE_KEYBOARD) &&\r\n        (response.type === constants.RESPONSE_KEYBOARD)) {\r\n        this.process_response_keypress(response)\r\n      } else if ((this._responsetype === constants.RESPONSE_MOUSE) &&\r\n        (response.type === constants.RESPONSE_MOUSE)) {\r\n        this.process_response_mouseclick(response)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** The auto responder method for simulated keyboard interaction. */\r\n  auto_responser () {}\r\n\r\n  /** The auto responder method for simulated mouse interaction. */\r\n  auto_responser_mouse () {}\r\n\r\n  /** Prepare the list with allowed responses */\r\n  prepare_allowed_responses () {\r\n    // Prepare the allowed responses.\r\n    if (this.vars.get('allowed_responses') === null) {\r\n      this._allowed_responses = null\r\n    } else {\r\n      // Create a list of allowed responses that are separated by semicolons.\r\n      // Also trim any whitespace.\r\n      const allowed_responses = String(this.vars.get('allowed_responses')).split(';')\r\n        .map(item => (typeof item === 'string')\r\n          ? item.replace(/^\"(.*)\"$/g, '$1').trim()\r\n          : item).filter(Boolean)\r\n      if (this.vars.duration === 'keypress') {\r\n        // this._allowed_responses = allowed_responses;\r\n        this._allowed_responses = this._keyboard._get_default_from_synoniem(allowed_responses)\r\n      } else if (this.vars.duration === 'mouseclick') {\r\n        // For mouse responses, we don't check if the allowed responses make sense.\r\n        this._allowed_responses = this._mouse._get_default_from_synoniem(allowed_responses)\r\n      }\r\n\r\n      // If allowed responses are provided, the list should not be empty.\r\n      if (this._allowed_responses.length === 0) {\r\n        this.experiment._runner._debugger.addError(\r\n          'Defined responses are not valid in keyboard_response: ' +\r\n          this.name + ' (' + this.vars.get('allowed_responses') + ')')\r\n      }\r\n    }\r\n  }\r\n\r\n  // Prepare the duration of the stimulus interaction. */\r\n  prepare_duration () {\r\n    // Get duration.\r\n    this._duration = this.syntax.remove_quotes(this.vars.get('duration'))\r\n\r\n    // Prepare the duration.\r\n    if (this._duration !== null) {\r\n      if ((this._duration === 'keypress') || (this._duration === 'mouseclick') ||\r\n                (this._duration === 'sound') || (this._duration === 'video')) {\r\n        this._duration = -1\r\n        if (this.vars.duration === 'keypress') {\r\n          this.prepare_duration_keypress()\r\n          this._responsetype = constants.RESPONSE_KEYBOARD\r\n        } else if (this.vars.duration === 'mouseclick') {\r\n          this.prepare_duration_mouseclick()\r\n          this._responsetype = constants.RESPONSE_MOUSE\r\n        } else if (this.vars.duration === 'sound') {\r\n          this._responsetype = constants.RESPONSE_SOUND\r\n        } else if (this.vars.duration === 'video') {\r\n          this._responsetype = constants.RESPONSE_VIDEO\r\n        }\r\n      } else {\r\n        // Prepare a duration in milliseconds\r\n        this._duration = Number(this._duration)\r\n        if (this._duration === 0) {\r\n          this._responsetype = constants.RESPONSE_NONE\r\n        } else {\r\n          this._responsetype = constants.RESPONSE_DURATION\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Prepare the system for a keyboard duration interval. */\r\n  prepare_duration_keypress () {\r\n    // Prepare a keyboard duration.\r\n    this._keyboard = new Keyboard(this.experiment)\r\n    if (this.experiment.auto_response === true) {\r\n      this._duration_func = this.auto_responder\r\n    } else {\r\n      var final_duration = (this._timeout !== -1) ? this._timeout : this._duration\r\n      this._keyboard._set_config(final_duration, this._allowed_responses)\r\n    }\r\n  }\r\n\r\n  /** Prepare the system for a mouseclick duration interval. */\r\n  prepare_duration_mouseclick () {\r\n    // Prepare a mouseclick duration.\r\n    this._mouse = new Mouse(this.experiment)\r\n    if (this.experiment.auto_response === true) {\r\n      this._duration_func = this.auto_responder_mouse\r\n    } else {\r\n      var final_duration = (this._timeout !== -1) ? this._timeout : this._duration\r\n      this._mouse._set_config(final_duration, this._allowed_responses, false)\r\n    }\r\n  }\r\n\r\n  /** Prepare the system for a timeout. */\r\n  prepare_timeout () {\r\n    let timeout = this.vars.get('timeout')\r\n    if (timeout === null) return\r\n    this._timeout = (typeof timeout === 'number') ? timeout : -1\r\n  }\r\n\r\n  /** Select the type of stimulus response processing. */\r\n  process_response () {\r\n    // Start stimulus response cycle.\r\n    switch (this._responsetype) {\r\n    case constants.RESPONSE_NONE:\r\n      // Duration is 0, so complete the stimulus/response cycle.\r\n      this._status = constants.STATUS_FINALIZE\r\n      this._complete()\r\n      break\r\n    case constants.RESPONSE_DURATION:\r\n      this.sleep_for_duration()\r\n      break\r\n    case constants.RESPONSE_KEYBOARD:\r\n      this._keyboard.get_key()\r\n      break\r\n    case constants.RESPONSE_MOUSE:\r\n      this._mouse.get_click()\r\n      break\r\n    case constants.RESPONSE_SOUND:\r\n      this._sampler.wait()\r\n      break\r\n    case constants.RESPONSE_VIDEO:\r\n      this._video_player.wait()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Sets the mouse coordinates based **/\r\n  set_mouse_coordinates (clientX, clientY) {\r\n    // We need the top-left and scaling of the viewport to set the mouse\r\n    // coordinates so that 0,0 corresponds to the display center. The scaling\r\n    // needs to be taken into account also such that the viewport always has\r\n    // the same size in cursor coordinates, even if it's scaled down.\r\n    const rect = this._runner._renderer.view.getBoundingClientRect()\r\n    const scale = Math.min(\r\n      (rect.right - rect.left) / this.experiment.vars.width,\r\n      (rect.bottom - rect.top) / this.experiment.vars.height\r\n    )\r\n    const center_x = scale * this.experiment.vars.width / 2\r\n    const center_y = scale * this.experiment.vars.height / 2\r\n    this.experiment.vars.cursor_x = (clientX - center_x - rect.left) / scale\r\n    this.experiment.vars.cursor_y = (clientY - center_y - rect.top) / scale\r\n  }\r\n\r\n  /** Process a keyboard response. */\r\n  process_response_keypress (retval) {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = retval.rtTime\r\n    this.experiment.vars.response = this.syntax.sanitize(retval.resp)\r\n    this.synonyms = this._keyboard._synonyms(this.experiment.vars.response)\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** Process a mouse click response. */\r\n  process_response_mouseclick (retval) {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = retval.rtTime\r\n    this.experiment.vars.response = retval.resp\r\n    this.synonyms = this._mouse._synonyms(this.experiment.vars.response)\r\n    this.set_mouse_coordinates(retval.event.clientX, retval.event.clientY)\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** Process a time out response. */\r\n  process_response_timeout () {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = this.experiment._runner._events._timeStamp\r\n    this.experiment.vars.response = 'None'\r\n    this.synonyms = ['None', 'none']\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** General response logging after a stimulus/response. */\r\n  response_bookkeeping () {\r\n    // The respone and response_time variables are always set, for every response item\r\n    this.experiment.vars.set('response_time', this.experiment._end_response_interval - this.experiment._start_response_interval)\r\n    this.experiment.vars.set('response_' + this.name, this.experiment.vars.get('response'))\r\n    this.experiment.vars.set('response_time_' + this.name, this.experiment.vars.get('response_time'))\r\n    this.experiment._start_response_interval = null\r\n\r\n    // But correctness information is only set for dedicated response items,\r\n    // such as keyboard_response items, because otherwise we might confound the feedback\r\n    if (this.process_feedback === true) {\r\n      this.experiment.vars.correct = ''\r\n      if (this.vars.get('correct_response') !== null) {\r\n        // If a correct_response has been defined, we use it to determine accuracy etc.\r\n        if (this.synonyms !== null) {\r\n          if (this.synonyms.includes(this.syntax.remove_quotes(this.vars.get('correct_response').toString()))) {\r\n            this.experiment.vars.correct = 1\r\n            this.experiment.vars.total_correct = this.experiment.vars.total_correct + 1\r\n          } else {\r\n            this.experiment.vars.correct = 0\r\n          }\r\n        }\r\n      }\r\n      // Do some response bookkeeping\r\n      this.experiment.vars.total_response_time = this.experiment.vars.total_response_time + this.experiment.vars.response_time\r\n      this.experiment.vars.total_responses = this.experiment.vars.total_responses + 1\r\n      this.experiment.vars.accuracy = Math.round(100.0 * this.experiment.vars.total_correct / this.experiment.vars.total_responses)\r\n      this.experiment.vars.acc = this.experiment.vars.accuracy\r\n      this.experiment.vars.average_response_time = Math.round(this.experiment.vars.total_response_time / this.experiment.vars.total_responses)\r\n      this.experiment.vars.avg_rt = this.experiment.vars.average_response_time\r\n      this.experiment.vars.set('correct_' + this.name, this.vars.correct)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Sets or resets the start of the stimulus response interval.\r\n     * @param {Boolean} reset - If true reset the sri value.\r\n     */\r\n  set_sri (reset) {\r\n    // Sets the start of the response interval.\r\n    if (reset === true) {\r\n      this.sri = self.vars.get('time_' + this.name)\r\n      this.experiment._start_response_interval = this.vars.get('time_' + this.name)\r\n    }\r\n    if (!this.experiment._start_response_interval) {\r\n      this.sri = this.experiment.vars.get('time_' + this.name)\r\n    } else {\r\n      this.sri = this.experiment._start_response_interval\r\n    }\r\n  }\r\n\r\n  /** Sleep for a specified time. */\r\n  sleep_for_duration () {\r\n    // Sleep for a specified time.\r\n    this.sleep(this._duration)\r\n  }\r\n\r\n  /** Implements the prepare phase of the general response item. */\r\n  prepare () {\r\n    // Implements the prepare phase of the item.\r\n    this.prepare_timeout()\r\n    this.prepare_allowed_responses()\r\n    this.prepare_duration()\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Canvas from '../backends/canvas.js'\r\n\r\n/**\r\n * Class representing a Sketchpad item.\r\n * @extends GeneralResponse\r\n */\r\nexport default class Sketchpad extends GenericResponse {\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n\r\n    // Create and set public properties.\r\n    this.canvas = new Canvas(experiment, false)\r\n    this.elements = []\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n     * Sort function used for determining the draw index (z-index) of alle elemente.\r\n     * @param {Object} a - The first object to compare.\r\n     * @param {Object} b - The second object to compare.\r\n     * @return {Number} - The result of the comparison.\r\n     */\r\n  _compare (a, b) {\r\n    // Sort function used for determining the draw index (z-index) of alle elemente.\r\n    if (a.z_index() < b.z_index()) { return 1 } else if (a.z_index() > b.z_index()) { return -1 } else { return 0 }\r\n  }\r\n\r\n  /** Implements the complete phase of the Sketchpad item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    // Resets all item variables to their default value.\r\n    this.elements = []\r\n    this.vars.duration = 'keypress'\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Define and reset variables to their defaults.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      const lines = script.split('\\n')\r\n      for (let i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          const tokens = this.syntax.split(lines[i])\r\n          if ((tokens.length > 0) && (tokens[0] === 'draw')) {\r\n            if (this.experiment.items._isClass(tokens[1]) === true) {\r\n              var element = this.experiment.items._newElementClass(tokens[1], this, lines[i])\r\n              this.elements.push(element)\r\n            } else {\r\n              this.experiment._runner._debugger.addError('Failed to parse definition: ' + tokens[1])\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Sort the elements usin the z-index.\r\n      this.elements.sort(this._compare)\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Clear the canvas.\r\n    this.canvas.clear()\r\n\r\n    // Draw the elements.\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      if (this.elements[i].is_shown() === true) {\r\n        this.elements[i].draw()\r\n      }\r\n    }\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the Sketschpad. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Check if background color needs to be changed\r\n    const backgroundColor = this.vars.get('background')\r\n    if (backgroundColor) {\r\n      this.canvas._styles.background_color = backgroundColor\r\n    }\r\n\r\n    // Set the onset and start the stimulus response process.\r\n    this.set_item_onset(this.canvas.show())\r\n    this.set_sri(false)\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    yield\r\n    this.set_item_onset(this.canvas.show())\r\n  }\r\n}\r\n","import Sketchpad from './sketchpad.js'\r\n\r\n/**\r\n * Class representing a feedback item.\r\n * @extends Sketchpad\r\n */\r\nexport default class Feedback extends Sketchpad {\r\n  /**\r\n   * Create a feedback which show feedback info to the subhect.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Provides feedback to the participant'\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n\r\n    // Reset feedback variables.\r\n    if (this.vars.reset_variables === 'yes') {\r\n      this.experiment.reset_feedback()\r\n    }\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    // Inherited.\r\n    super.reset()\r\n\r\n    // Reset the variables.\r\n    this.vars.reset_variables = 'yes'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    this._parent._prepare_complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.prepare()\r\n    super.run()\r\n  }\r\n}\r\n","import Item from './item.js'\r\n\r\n/**\r\n * Class representing an inline item.\r\n * @extends Item\r\n */\r\nexport default class InlineScript extends Item {\r\n  /**\r\n     * Create an inline item which executes inline python code.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Executes Python code'\r\n\r\n    // Define and set the public properties.\r\n    this._prepare_run = false\r\n    this._prepare_tree = null\r\n    this._run_tree = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Check if the parser is in pause mode and must be restarted.\r\n    if (this.experiment._runner._pythonParser._status === 1) {\r\n      // Process the current active node.\r\n      this.experiment._runner._pythonParser._process_nodes()\r\n    } else {\r\n      if (this._prepare_run === true) {\r\n        // Inherited prepare.\r\n        super.prepare()\r\n      } else {\r\n        // Inherited.\r\n        super._complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the complete script phase of an item. */\r\n  _complete_script () {\r\n    // Added for video script functionaliry.\r\n    this._complete()\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.vars._prepare = ''\r\n    this.vars._run = ''\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Compile the script code to ast trees.\r\n    this._prepare_tree = this.experiment._runner._pythonParser._parse(this.vars._prepare)\r\n    this._run_tree = this.experiment._runner._pythonParser._parse(this.vars._run)\r\n\r\n    // Execute the run code.\r\n    if (this._prepare_tree !== null) {\r\n      // Set the current item.\r\n      this.experiment._runner._events._currentItem = this\r\n\r\n      // Set the prepare run toggle.\r\n      this._prepare_run = true\r\n\r\n      // Record the onset of the current item.\r\n      this.set_item_onset()\r\n\r\n      // Start the parser\r\n      this.experiment._runner._pythonParser._run(this, this._prepare_tree)\r\n    } else {\r\n      // Inherited.\r\n      super.prepare()\r\n    }\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Set the prepare run toggle.\r\n    this._prepare_run = false\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Execute the run code.\r\n    if (this._run_tree !== null) {\r\n      // Start the parser\r\n      this.experiment._runner._pythonParser._run(this, this._run_tree)\r\n    } else {\r\n      // To prevent prepeare script from running twice.\r\n      this.experiment._runner._pythonParser._status = 0\r\n\r\n      // No script, so jump to compelte.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\n\r\n/**\r\n * Class representing an inline item.\r\n * @extends Item\r\n */\r\nexport default class InlineJavaScript extends Item {\r\n  /**\r\n     * Create an inline item which executes inline python code.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n    // Define and set the public properties.\r\n    this.description = 'Executes JavaScript code (ECMA 5.1)'\r\n    this.workspace = experiment._javascriptWorkspace\r\n    // Process the script\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.vars._prepare = ''\r\n    this.vars._run = ''\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Parses a definition string.\r\n    this.reset()\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      var read_run_lines = false\r\n      var read_prepare_lines = false\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        var tokens = this.syntax.split(lines[i])\r\n        if ((tokens !== null) && (tokens.length > 0)) {\r\n          switch (tokens[0]) {\r\n          case 'set':\r\n            this.parse_variable(lines[i])\r\n            break\r\n          case '__end__':\r\n            read_run_lines = false\r\n            read_prepare_lines = false\r\n            break\r\n          case '___prepare__':\r\n            read_prepare_lines = true\r\n            break\r\n          case '___run__':\r\n            read_run_lines = true\r\n            break\r\n          default:\r\n            if (read_run_lines === true) {\r\n              this.vars._run = this.vars._run + lines[i] + '\\n'\r\n            } else if (read_prepare_lines === true) {\r\n              this.vars._prepare = this.vars._prepare + lines[i] + '\\n'\r\n            }\r\n          }\r\n        } else {\r\n          if (read_run_lines === true) {\r\n            this.vars._run = this.vars._run + lines[i] + '\\n'\r\n          } else if (read_prepare_lines === true) {\r\n            this.vars._prepare = this.vars._prepare + lines[i] + '\\n'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    this.workspace._eval(this.vars._prepare)\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    this.set_item_onset()\r\n    this.workspace._eval(this.vars._run)\r\n    this._complete()\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\n\r\n/**\r\n * Class representing a keyboard response item.\r\n * @extends GenericResponse\r\n */\r\nexport default class KeyboardResponse extends GenericResponse {\r\n  /**\r\n     * Create a keyboard response item which waits for a keyboard response.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Collects keyboard responses'\r\n\r\n    // Definition of private properties.\r\n    this._flush = 'yes'\r\n    this._keyboard = new Keyboard(this.experiment)\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.auto_response = 'space'\r\n    this.process_feedback = true\r\n    this.vars.allowed_responses = null\r\n    this.vars.correct_response = null\r\n    this.vars.duration = 'keypress'\r\n    this.vars.flush = 'yes'\r\n    this.vars.timeout = 'infinite'\r\n  }\r\n\r\n  /** Implements the prepare phase of the KeyboardResponse. */\r\n  prepare () {\r\n    // Set the internal flush property.\r\n    this._flush = (this.vars.flush) ? this.vars.flush : 'yes'\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the KeyboardResponse. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Flush responses, to make sure that earlier responses are not carried over.\r\n    if (this._flush === 'yes') {\r\n      this._keyboard.flush()\r\n    }\r\n\r\n    this.set_sri()\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    const keyDownHandler = (event) => {\r\n      const keypress = this.experiment._runner._events._processKeyboardEvent(event, 1)\r\n      let allowed_responses = 'all'\r\n      if (this.vars.get('allowed_responses')) {\r\n        allowed_responses = this._keyboard._get_default_from_synoniem(\r\n          this.vars.get('allowed_responses').split(';').map(key => key.trim())\r\n        )\r\n      }\r\n\r\n      if (allowed_responses === 'all' || allowed_responses.includes(keypress.resp)) {\r\n        this.response = keypress\r\n      }\r\n    }\r\n\r\n    window.addEventListener('keydown', keyDownHandler)\r\n    yield\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    this.set_sri()\r\n    let proceed = true\r\n    this.response = null\r\n    while (!this.response && proceed) {\r\n      proceed = yield true\r\n    }\r\n    window.removeEventListener('keydown', keyDownHandler)\r\n    if (this.response) this.process_response_keypress(this.response)\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Mouse from '../backends/mouse.js'\r\n\r\n/**\r\n * Class representing a mouse response item.\r\n * @extends GenericResponse\r\n */\r\nexport default class MouseResponse extends GenericResponse {\r\n  /**\r\n     * Create an mouse response item which waits for a mouse response.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Collects mouse responses'\r\n    this.resp_codes = {}\r\n\r\n    // Definition of private properties.\r\n    this._flush = 'yes'\r\n    this._mouse = new Mouse(this.experiment)\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of the Sketschpad. */\r\n  _complete () {\r\n    // Hide the mouse cursor.\r\n    this._mouse.show_cursor(false)\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.auto_response = 1\r\n    this.process_feedback = true\r\n    this.resp_codes = {}\r\n    this.resp_codes['0'] = 'timeout'\r\n    this.resp_codes['1'] = 'left_button'\r\n    this.resp_codes['2'] = 'middle_button'\r\n    this.resp_codes['3'] = 'right_button'\r\n    this.resp_codes['4'] = 'scroll_up'\r\n    this.resp_codes['5'] = 'scroll_down'\r\n    this.vars.allowed_responses = null\r\n    this.vars.correct_response = null\r\n    this.vars.duration = 'mouseclick'\r\n    this.vars.flush = 'yes'\r\n    this.vars.show_cursor = 'yes'\r\n    this.vars.timeout = 'infinite'\r\n  }\r\n\r\n  /** Implements the prepare phase of the Sketschpad. */\r\n  prepare () {\r\n    // Set the internal flush property.\r\n    this._flush = (this.vars.flush) ? this.vars.flush : 'yes'\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the Sketschpad. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Show the cursor if defined.\r\n    if (this.vars.show_cursor === 'yes') {\r\n      this._mouse.show_cursor(true)\r\n    }\r\n\r\n    // Flush responses, to make sure that earlier responses are not carried over.\r\n    if (this._flush === 'yes') {\r\n      this._mouse.flush()\r\n    }\r\n\r\n    this.set_sri()\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    const mouseDownHandler = (event) => {\r\n      this.response = this.experiment._runner._events._processMouseEvent(event, 1)\r\n    }\r\n\r\n    const touchHandler = (event) => {\r\n      event.button = 0\r\n      event.clientX = event.changedTouches[0].clientX\r\n      event.clientY = event.changedTouches[0].clientY\r\n      this.response = this.experiment._runner._events._processMouseEvent(event, 1)\r\n    }\r\n\r\n    window.addEventListener('mousedown', mouseDownHandler)\r\n    window.addEventListener('touchstart', touchHandler)\r\n\r\n    yield\r\n    // Show the cursor if defined.\r\n    if (this.vars.show_cursor === 'yes') {\r\n      this._mouse.show_cursor(true)\r\n    }\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    this.set_sri()\r\n    let proceed = true\r\n    this.response = null\r\n    while (!this.response && proceed) {\r\n      proceed = yield true\r\n    }\r\n    window.removeEventListener('mousedown', mouseDownHandler)\r\n    window.removeEventListener('touchstart', touchHandler)\r\n    if (this.response) this.process_response_mouseclick(this.response)\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a logger item.\r\n * @extends Item\r\n */\r\nexport default class Logger extends Item {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} pExperiment - The experiment item to which the item belongs.\r\n     * @param {String} pName - The unique name of the item.\r\n     * @param {String} pScript - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Logs experimental data'\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.logvars = []\r\n    this.vars.auto_log = 'yes'\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    this.reset()\r\n    if (script !== null) {\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          var tokens = this.syntax.split(lines[i])\r\n          if ((tokens[0] === 'log') && (tokens.length > 0)) {\r\n            this.logvars.push(tokens[1])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.logvars.sort()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      this._status = constants.STATUS_FINALIZE\r\n      this.set_item_onset()\r\n      this.experiment._log.write_vars(\r\n        (this.vars.get('auto_log') === 'yes')\r\n          ? this.logvars.concat(this.experiment.vars.inspect()).sort()\r\n          : this.logvars\r\n      )\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\nlet audioCtx = null\r\ntry {\r\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n} catch (e) {\r\n  console.warning('Web Audio API is not supported in this browser')\r\n}\r\n\r\n/** Class representing a sampler. */\r\nexport default class SamplerBackend {\r\n  /**\r\n   * Create a sampler object which controls the sampler device.\r\n   * @param {Object} experiment - The experiment to which the sampler belongs.\r\n   * @param {String} source - The sound source name.\r\n   * @param {Number} volume - The volume to use when playing the sound.\r\n   * @param {Number} pitch - The pitch to use when playing the sound.\r\n   * @param {Number} pan - The pan to use when playing the sound.\r\n   * @param {String} duration - The duration of the sound.\r\n   * @param {Number} fade - The fade to use when playing the sound.\r\n   * @param {Boolean} block - If true use the sound ad a block wave.\r\n   */\r\n  constructor (experiment, source, volume, pitch, pan, duration, fade, block) {\r\n    // Create and set public properties.\r\n    this.block = (typeof block === 'undefined') ? false : block\r\n    this.duration = (typeof duration === 'undefined') ? 'sound' : duration\r\n    this.experiment = experiment\r\n    this.volume = (typeof volume === 'undefined') ? 1 : volume\r\n    this.fade = (typeof fade === 'undefined') ? 0 : fade\r\n    this.pan = (typeof pan === 'undefined') ? 0 : pan\r\n    this.pitch = (typeof pitch === 'undefined') ? 1 : pitch\r\n\r\n    try {\r\n      this.sample = source.data.cloneNode()\r\n    } catch (e) {\r\n      console.error('Could not play sound:', source)\r\n      throw e\r\n    }\r\n    this.sample.onended = () => this.experiment._runner._events._audioEnded(this)\r\n\r\n    if (audioCtx) {\r\n      this.source = audioCtx.createMediaElementSource(this.sample)\r\n    } else {\r\n      this.source = this.sample\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play a sound file.\r\n   * @param {Number} volume - The volume to use when playing the sound.\r\n   * @param {Number} pitch - The pitch to use when playing the sound.\r\n   * @param {Number} pan - The pan to use when playing the sound.\r\n   * @param {String} duration - The duration of the sound.\r\n   * @param {Number} fade - The fade to use when playing the sound.\r\n   * @param {Boolean} block - If true use the sound ad a block wave.\r\n   */\r\n  play (volume, pitch, pan, duration, fade, block) {\r\n    // Check if optional parameters are defined.\r\n    this.block = block || this.block\r\n    this.duration = typeof duration === 'undefined' ? this.duration : duration\r\n    this.volume = typeof volume === 'undefined' ? this.volume : volume\r\n    this.pitch = typeof pitch === 'undefined' ? this.pitch : pitch\r\n    this.pan = typeof pan === 'undefined' ? this.pan : pan\r\n    this.fade = typeof fade === 'undefined' ? this.fade : fade\r\n\r\n    if (audioCtx) {\r\n      if (audioCtx.state === 'suspended') audioCtx.resume()\r\n      this.source.connect(this.applyFilters())\r\n    } else {\r\n      this.source.volume = this.volume\r\n    }\r\n\r\n    this.sample.play()\r\n  }\r\n\r\n  /** Set the blocking of the sound (wait period). */\r\n  wait () {\r\n    // Set the blocking of the sound.\r\n    this.experiment._runner._events._run(this, -1, constants.RESPONSE_SOUND, [])\r\n  }\r\n\r\n  applyFilters () {\r\n    const nodes = [audioCtx.destination]\r\n\r\n    try {\r\n      const gainNode = audioCtx.createGain()\r\n      gainNode.gain.setValueAtTime(this.volume, audioCtx.currentTime)\r\n\r\n      if (this.fade) {\r\n        gainNode.gain.setValueAtTime(0, audioCtx.currentTime)\r\n        gainNode.gain.linearRampToValueAtTime(this.volume, audioCtx.currentTime + this.fade / 1000)\r\n      }\r\n\r\n      nodes.unshift(gainNode)\r\n    } catch (e) {\r\n      console.warning('Unable to apply volume or gain', e)\r\n    }\r\n\r\n    if (this.pan) {\r\n      try {\r\n        nodes.unshift(new StereoPannerNode(audioCtx, { pan: this.pan }))\r\n      } catch (e) {\r\n        console.warning('Unable to apply panning', e)\r\n      }\r\n    }\r\n\r\n    // Connect the filters creating a chain\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (nodes[i] !== audioCtx.destination) {\r\n        nodes[i].connect(nodes[i + 1])\r\n      }\r\n    }\r\n\r\n    return nodes.shift(0)\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport SamplerBackend from '../backends/sampler.js'\r\n\r\n/**\r\n * Class representing a sampler item.\r\n * @extends GenericResponse\r\n */\r\nexport default class Sampler extends GenericResponse {\r\n  /**\r\n     * Create a sampler  item which plays a sound.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.block = false\r\n    this.description = 'Plays a sound file in .wav or .ogg format'\r\n\r\n    // Definition of private properties.\r\n    this._sample = null\r\n    this._sampler = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.block = false\r\n    this.vars.sample = ''\r\n    this.vars.pan = 0\r\n    this.vars.pitch = 1\r\n    this.vars.fade_in = 0\r\n    this.vars.stop_after = 0\r\n    this.vars.volume = 1\r\n    this.vars.duration = 'sound'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Create the sample\r\n    if (this.vars.sample !== '') {\r\n      // Retrieve the content from the file pool.\r\n      this._sample = this._runner._pool[this.syntax.eval_text(this.vars.sample, this.vars, false)]\r\n      this._sampler = new SamplerBackend(this.experiment, this._sample)\r\n      this._sampler.volume = this.vars.volume\r\n      this._sampler.duration = this.vars.duration\r\n      this._sampler.fade = this.vars.fade\r\n      this._sampler.pan = this.vars.pan\r\n      this._sampler.pitch = this.vars.pitch\r\n    } else {\r\n      // Show error message.\r\n      this._runner._debugger.addError('No sample has been specified in sampler: ' + this.vars.sample)\r\n    }\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    this.set_item_onset()\r\n    this.set_sri()\r\n    this._sampler.play()\r\n    this.process_response()\r\n  }\r\n}\r\n","import Sampler from './sampler.js'\r\n\r\n/**\r\n * Class representing a synth item.\r\n * @extends Sampler\r\n */\r\nexport default class Synth extends Sampler {\r\n  /**\r\n     * Create a synth item which create a synthessised sound wave.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} Ssript - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'A basic sound synthesizer'\r\n  }\r\n}\r\n","/** Class representing a general visual element. */\r\nexport default class BaseElement {\r\n  /**\r\n   * Create a log object which stores all the response data.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   * @param {Object} defaults - The default property values of the visual element.\r\n   */\r\n  constructor (sketchpad, script, defaults) {\r\n    // Set class parameter properties.\r\n    this.canvas = sketchpad.canvas\r\n    this.defaults = defaults\r\n    this.defaults.show_if = 'always'\r\n    this.defaults.z_index = 0\r\n    this.experiment = sketchpad.experiment\r\n    this.fix_coordinates = (sketchpad.vars.uniform_coordinates === 'yes')\r\n    this.name = sketchpad.name\r\n    this.only_keywords = false\r\n    this.pool = sketchpad.experiment.pool\r\n    this.properties = {}\r\n    this.sketchpad = sketchpad\r\n    this.syntax = sketchpad.syntax\r\n    this.vars = sketchpad.vars\r\n\r\n    // Set the private properties.\r\n    this._properties = null\r\n\r\n    // Read the definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n   * Parses the element from a definition string.\r\n   *\r\n   * @param {String} script The definition script line to be parsed.\r\n   * @memberof BaseElement\r\n   */\r\n  from_string (script) {\r\n    this.properties = this.sketchpad.syntax.parse_cmd(script)[2]\r\n  }\r\n\r\n  /**\r\n   * Determines the drawing order of the elements.\r\n   *\r\n   * @returns {Number}\r\n   * @memberof BaseElement\r\n   */\r\n  z_index () {\r\n    return this.properties.z_index\r\n  }\r\n\r\n  /**\r\n   * Calculate the dynamic elements within properties.\r\n   *\r\n   * @memberof BaseElement\r\n   */\r\n  eval_properties () {\r\n    // Evaluates all properties and return them.\r\n    const xc = this.experiment.vars.width / 2\r\n    const yc = this.experiment.vars.height / 2\r\n\r\n    this._properties = Object.entries(this.properties).reduce((result, [prop, val]) => {\r\n      let value = this.syntax.eval_text(val, this.vars, false)\r\n\r\n      if (['x', 'x1', 'x2'].includes(prop)) {\r\n        value = Math.round(Number(value) + xc)\r\n      }\r\n\r\n      if (['y', 'y1', 'y2'].includes(prop)) {\r\n        value = Math.round(Number(value) + yc)\r\n      }\r\n\r\n      result[prop] = value\r\n      return result\r\n    }, {})\r\n  }\r\n\r\n  /**\r\n   * Determines whether the element should be shown, based on the show-if statement.\r\n   *\r\n   * @returns {Boolean} Returns true if the element must be shown.\r\n   * @memberof BaseElement\r\n   */\r\n  is_shown () {\r\n    // Set the self of the current workspace.\r\n    this.experiment.python_workspace.self = this.sketchpad\r\n\r\n    // Determines whether the element should be shown, based on the show-if statement.\r\n    return this.experiment.python_workspace._eval(this.experiment.syntax.compile_cond(this.properties.show_if))\r\n  }\r\n\r\n  /**\r\n   * Draws the element\r\n   *\r\n   * @memberof BaseElement\r\n   */\r\n  draw () {\r\n    // Calculate the dynamic properties.\r\n    this.eval_properties()\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Arrow extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.arrow_body_length = 0.8\r\n    defaults.arrow_body_width = 0.5\r\n    defaults.arrow_head_width = 30\r\n    defaults.fill = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x1 = null\r\n    defaults.y1 = null\r\n    defaults.x2 = null\r\n    defaults.y2 = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.background_color = this._properties.color\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the arrow element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.arrow(this._properties.x1, this._properties.y1,\r\n      this._properties.x2, this._properties.y2, this._properties.arrow_body_width,\r\n      this._properties.arrow_body_length, this._properties.arrow_head_width,\r\n      styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Circle extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.fill = 0\r\n    defaults.penwidth = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.r = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.background_color = this._properties.color\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the circle element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.circle(this._properties.x, this._properties.y,\r\n      this._properties.r, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Ellipse extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    const defaults = {\r\n      fill: 1,\r\n      color: sketchpad.vars.get('foreground'),\r\n      penwidth: 1,\r\n      x: null,\r\n      y: null,\r\n      w: null,\r\n      h: null\r\n    }\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.background_color = this._properties.color\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the ellipse element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.ellipse(Number(this._properties.x),\r\n      Number(this._properties.y), Number(this._properties.w),\r\n      Number(this._properties.h), styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Fixdot extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.style = 'default'\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles(this.sketchpad)\r\n    styles.color = this._properties.color\r\n    // Draw the fixdot element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.fixdot(this._properties.x, this._properties.y,\r\n      this._properties.style, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Gabor extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.bgmode = 'avg'\r\n    defaults.color1 = 'white'\r\n    defaults.color2 = 'black'\r\n    defaults.env = 'gaussian'\r\n    defaults.freq = 1\r\n    defaults.orient = 0\r\n    defaults.phase = 0\r\n    defaults.size = 96\r\n    defaults.stdev = 12\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the gabor element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.gabor(this._properties.x, this._properties.y,\r\n      this._properties.orient, this._properties.freq, this._properties.env,\r\n      this._properties.size, this._properties.stdev, this._properties.phase,\r\n      this._properties.color1, this._properties.color2, this._properties.bgmode)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an image element.\r\n * @extends BaseElement\r\n */\r\nexport default class ImageElement extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    const defaults = {}\r\n    defaults.center = 1\r\n    defaults.file = null\r\n    defaults.scale = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n\r\n    // Set the class private properties.\r\n    this._file = null\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the image element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.image(this._properties.file, this._properties.center,\r\n      this._properties.x, this._properties.y, this._properties.scale)\r\n  }\r\n}\r\n","/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nimport BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\nexport default class Line extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x1 = null\r\n    defaults.y1 = null\r\n    defaults.x2 = null\r\n    defaults.y2 = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.color = this._properties.color\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the line element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.line(this._properties.x1, this._properties.y1,\r\n      this._properties.x2, this._properties.y2, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Noise extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color1 = 'white'\r\n    defaults.color2 = 'black'\r\n    defaults.env = 'gaussian'\r\n    defaults.size = 96\r\n    defaults.stdev = 12\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.bgmode = 'avg'\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the noise element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.noise(this._properties.x, this._properties.y,\r\n      this._properties.env, this._properties.size, this._properties.stdev,\r\n      this._properties.color1, this._properties.color2, this._properties.bgmode)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Rect extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.fill = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.w = null\r\n    defaults.h = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.fill = this._properties.fill\r\n    styles.color = this._properties.color\r\n    styles.background_color = this._properties.color\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the rectangle element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.rect(this._properties.x, this._properties.y,\r\n      this._properties.w, this._properties.h, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing a textline element.\r\n * @extends BaseElement\r\n */\r\nexport default class Textline extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.center = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.font_family = sketchpad.vars.get('font_family')\r\n    defaults.font_size = sketchpad.vars.get('font_size')\r\n    defaults.font_bold = sketchpad.vars.get('font_bold')\r\n    defaults.font_italic = sketchpad.vars.get('font_italic')\r\n    defaults.html = 'yes'\r\n    defaults.text = null\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n    const text = this._properties.text\r\n    // Create a styles object containing style information\r\n    const styles = new Styles()\r\n    styles.color = this._properties.color\r\n    styles.font_family = this._properties.font_family\r\n    styles.font_size = Number(this._properties.font_size)\r\n    styles.font_italic = (this._properties.font_italic === 'yes')\r\n    styles.font_bold = (this._properties.font_bold === 'yes')\r\n    styles.font_underline = (this._properties.font_underline === 'yes')\r\n\r\n    this.sketchpad.canvas.text(text, this._properties.center,\r\n      this._properties.x, this._properties.y, this._properties.html,\r\n      styles)\r\n  }\r\n}\r\n","import { Container, Graphics } from 'pixi.js'\n/** Class representing an OpenSesame Widget. */\nexport default class Widget {\n  /**\n     * Create a widget object which is the base class for all widgets.\n     * @param {Object} form - The form  which the widget belongs.\n     */\n  constructor (form) {\n    // Set the class public properties.\n    this.focus = false\n    this.form = form\n    this.rect = null\n    this.type = 'widget'\n    this.var = null\n\n    // Create the widget container.\n    this._container = new Container() // - Create the container which represents the canvas.\n  }\n\n  /**\n     * Draw a frame around the widget.\n     * @param {Number|String} rect - The coordinates of the frame (ignored).\n     * @param {Number|String} style - The style to use (ignored).\n     */\n  draw_frame (rect, style) {\n    // Create the background line elements.\n    var line = new Graphics()\n    line.lineStyle(1, this.form._canvas._styles._convertColorValue(this.form._themes.theme.gray.lineColorLeftTop), 1)\n    line.moveTo(this._container._width, 0)\n    line.lineTo(0, 0)\n    line.lineTo(0, this._container._height)\n    line.lineStyle(1, this.form._canvas._styles._convertColorValue(this.form._themes.theme.gray.lineColorRightBottom), 1)\n    line.lineTo(this._container._width, this._container._height)\n    line.lineTo(this._container._width, 0)\n    line.x = 0\n    line.y = 0\n\n    // Create the background color element.\n    var rectangle = new Graphics()\n    rectangle.lineStyle(1, this.form._canvas._styles._convertColorValue(this.form._themes.theme.gray.backgroundColor), 1)\n    rectangle.beginFill(this.form._canvas._styles._convertColorValue(this.form._themes.theme.gray.backgroundColor))\n    rectangle.drawRect(1, 1, this._container._width - 2, this._container._height - 2)\n    rectangle.endFill()\n    rectangle.x = 0\n    rectangle.y = 0\n\n    // Add the line element to container.\n    this._container.addChild(rectangle)\n    this._container.addChild(line)\n  }\n\n  /**\n     * Sets an experimental variable.\n     * @param {Boolean|Number|String} value - The value for the variable.\n     * @param {String} variable - The name of the variabler to set.\n     */\n  set_var (value, variable) {\n    // Sets an experimental variable.\n    if (variable === null) {\n      variable = this.var\n    }\n\n    if (variable !== null) {\n      this.form.experiment.vars.set(variable, value)\n    }\n  }\n}\n","import Widget from './widget.js'\nimport { Rectangle, Text } from 'pixi.js'\nimport { constants } from '../system/constants.js'\n\n/**\n * Class representing an OpenSesame label Widget.\n * @extends LabelWidget\n */\nexport default class ButtonWidget extends Widget {\n  /**\n     * Create a widget button object which represents a push button.\n     * @param {Object} form - The form  which the widget belongs.\n     * @param {Object} properties - The properties belonging to the widget.\n     */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form, properties)\n\n    // Set the class public properties.\n    this.center = (typeof properties.center !== 'undefined') ? (properties.center === 'yes') : true\n    this.frame = (typeof properties.frame !== 'undefined') ? (properties.frame === 'yes') : true\n    this.text = properties.text\n    this.type = 'button'\n    this.var = (typeof properties.var !== 'undefined') ? properties.var : this.var\n\n    // Set the current value of the variable to false (not pressed).\n    this.set_var(false, this.var)\n  }\n\n  /**\n     * Draw the label widget.\n     * @param {Number|String} text - The text for the labe.\n     * @param {Number|String} html - Toggle if the text contains html (ignored).\n     */\n  draw_text (text, html) {\n    //  Create the text element\n    var text_style = {\n      fontFamily: this.form._canvas._styles.font_family,\n      fontSize: this.form.experiment.vars.font_size,\n      fontStyle: (this.form.experiment.vars.font_italic === 'yes') ? 'italic' : 'normal',\n      fontWeight: (this.form.experiment.vars.font_bold === 'yes') ? 'bold' : 'normal',\n      fill: this.form.experiment.vars.foreground\n    }\n    var text_element = new Text(text, text_style)\n\n    // Position the text element.\n    if (this.center === true) {\n      text_element.x = (this._container._width - text_element.width) / 2\n      text_element.y = (this._container._height - text_element.height) / 2\n    } else {\n      text_element.x = 5\n      text_element.y = 5\n    }\n\n    // Add the text_element to the container.\n    this._container.addChild(text_element)\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Set the interactive mode (if not set yet).\n    if ((this.form.item.vars.only_render === 'no') && (this._container.interactive === false)) {\n      this._container.interactive = true\n      this._container.buttonMode = true\n      this._container.hitArea = new Rectangle(0, 0, this._container._width, this._container._height)\n      this._container.on('mousedown', function (event) { this.response(event) }.bind(this))\n      this._container.on('touchstart', function (event) { this.response(event) }.bind(this))\n    }\n\n    // Draw the frame (if enabled).\n    if (this.frame === true) {\n      this.draw_frame()\n    }\n\n    // Update the text.\n    var text = this.form.experiment.syntax.eval_text(this.text, null, false)\n\n    // Draw the text.\n    this.draw_text(text)\n  }\n\n  /**\n     * Process the response for the button widget.\n     * @param {Object} event - The response event.\n     */\n  response (event) {\n    // Set the attached variable.\n    this.set_var(true, this.var)\n\n    // Complete the item element.\n    if (this.form.timeout === null) {\n      this.form.item._complete()\n    } else {\n      this.form.experiment._runner._events._currentItem._status = constants.STATUS_FINALIZE\n    }\n  }\n}\n","import Widget from './widget.js'\nimport { Text, Graphics, Rectangle } from 'pixi.js'\nimport { constants } from '../system/constants.js'\n\n/** Class representing an OpenSesame text input Widget. */\nexport default class CheckBoxWidget extends Widget {\n  /**\n     * Create a widget object which represents a text label.\n     * @param {Object} form - The form  which the widget belongs.\n     * @param {Object} properties - The properties belonging to the widget.\n     */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form)\n\n    // Set the class public properties.\n    this.checked = (typeof properties.checked !== 'undefined') ? (properties.checked === 'yes') : false\n    this.click_accepts = (typeof properties.click_accepts !== 'undefined') ? (properties.click_accepts === 'yes') : false\n    this.frame = (typeof properties.frame !== 'undefined') ? (properties.frame === 'yes') : false\n    this.group = (typeof properties.group !== 'undefined') ? properties.group : null\n    this.text = (typeof properties.text !== 'undefined') ? properties.text : ''\n    this.var = (typeof properties.var !== 'undefined') ? properties.var : null\n    this.type = 'checkbox'\n\n    // Set the class private properties.\n    this._checkbox = null\n  }\n\n  /**\n     * Draw the label widget.\n     * @param {Number|String} text - The text for the labe.\n     * @param {Number|String} html - Toggle if the text contains html (ignored).\n     */\n  draw_text (text, html) {\n    //  Create the text element\n    var text_style = {\n      fontFamily: this.form._canvas._styles.font_family,\n      fontSize: this.form.experiment.vars.font_size,\n      fontStyle: (this.form.experiment.vars.font_italic === 'yes') ? 'italic' : 'normal',\n      fontWeight: (this.form.experiment.vars.font_bold === 'yes') ? 'bold' : 'normal',\n      fill: this.form.experiment.vars.foreground\n    }\n    var text_element = new Text(text, text_style)\n    text_element.x = 24\n    text_element.y = 5\n\n    // PIXI: create the border box.\n    var box_lines = new Graphics()\n    box_lines.lineStyle(1, 0x000000)\n    box_lines.moveTo(1, 0)\n    box_lines.lineTo(13, 0)\n    box_lines.moveTo(14, 1)\n    box_lines.lineTo(14, 13)\n    box_lines.moveTo(0, 1)\n    box_lines.lineTo(0, 13)\n    box_lines.moveTo(1, 14)\n    box_lines.lineTo(13, 14)\n    box_lines.x = 5\n    box_lines.y = 7\n\n    //  create the fill box.\n    var box_fill = new Graphics()\n    box_fill.lineStyle(1, 0xffffff, 1)\n    box_fill.beginFill(0xffffff)\n    box_fill.drawRect(1, 1, 12, 12)\n    box_fill.endFill()\n    box_fill.x = 5\n    box_fill.y = 7\n\n    //  create the check line.\n    this._checkbox = new Graphics()\n    this._checkbox.lineStyle(1, 0x04b010)\n    this._checkbox.moveTo(4, 5)\n    this._checkbox.lineTo(7, 12)\n    this._checkbox.lineTo(12, 3)\n    this._checkbox.x = 5\n    this._checkbox.y = 7\n    this._checkbox.visible = false\n\n    // Add the text_element to the container.\n    this._container.addChild(box_lines)\n    this._container.addChild(box_fill)\n    this._container.addChild(this._checkbox)\n    this._container.addChild(text_element)\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Set the interactive mode (if not set yet).\n    if (this._container.interactive === false) {\n      this._container.interactive = true\n      this._container.buttonMode = true\n      this._container.hitArea = new Rectangle(0, 0, this._container._width, this._container._height)\n      this._container.on('mousedown', function (event) {\n        this.response(event)\n      }.bind(this))\n      this._container.on('touchstart', function (event) {\n        this.response(event)\n      }.bind(this))\n    }\n\n    // Clear the old content.\n    this._container.removeChildren()\n\n    // Draw the frame (if enabled).\n    if (this.frame === true) {\n      this.draw_frame()\n    }\n\n    // Update the text.\n    var text = this.form.experiment.syntax.eval_text(this.text, null, false)\n\n    // Draw the text.\n    this.draw_text(text)\n\n    // Set the toggle\n    this.set_checked(this.checked)\n  }\n\n  /**\n     * Set the status of the checkbox.\n     * @param {Boolean} checked - Toggle to check or uncheck the checkbox.\n     */\n  set_checked (checked) {\n    // Set the property.\n    this.checked = checked\n\n    // PIXY: set the checkbox element.\n    this._checkbox.visible = checked\n\n    // Rerender the form.\n    this.form._canvas.show(this.form.experiment)\n\n    // Adjust the widget.\n    this.set_var(checked)\n  }\n\n  /**\n     * Process the response for the text input widget.\n     * @param {Object} event - The response event.\n     */\n  response (event) {\n    // Check if the checkbox is part of a group\n    if (this.group !== null) {\n      // Set group response.\n      for (var i = 0; i < this.form.widgets.length; i++) {\n        if ((this.form.widgets[i].type === 'checkbox') && (this.form.widgets[i] !== this) &&\n          (this.form.widgets[i].group === this.group)) {\n          this.form.widgets[i].set_checked(false)\n        }\n      }\n\n      // Set checkbox.\n      this.set_checked(true)\n    } else {\n      // Set single response.\n      this.set_checked(!this.checked)\n    }\n\n    // Complete the item element if accept_clicks is set to true.\n    if (this.click_accepts === true) {\n      if (this.form.timeout === null) {\n        this.form.item._complete()\n      } else {\n        this.form.experiment._runner._events._currentItem._status = constants.STATUS_FINALIZE\n      }\n    }\n  }\n\n  /**\n     * Sets an experimental variable.\n     * @param {Boolean|Number|String} pVal - The value for the variable.\n     * @param {String} pVar - The name of the variabler to set.\n     */\n  set_var (pVal, pVar) {\n    // set variable.\n    var variable = (typeof pVar !== 'undefined') ? pVar : this.var\n\n    // Only set variable if it is defined.\n    if (variable !== null) {\n      var values = []\n      for (var i = 0; i < this.form.widgets.length; i++) {\n        if ((this.form.widgets[i].type === 'checkbox') && (this.form.widgets[i].var === this.var) && (this.form.widgets[i].checked === true)) {\n          values.push(this.form.widgets[i].text)\n        }\n      }\n\n      // Inherited.\n      if (values === []) {\n        super.set_var('no', variable)\n      } else {\n        super.set_var(values.join(';'), variable)\n      }\n    }\n  }\n}\n","/** Class representing OpenSesame themes. */\nexport default class Themes {\n  /** Create a themes object which cpntains a list of html themes. */\n  constructor () {\n    // Definition of public properties.\n    this.theme = []\n    this.theme.gray = {\n      backgroundColor: '#888a85',\n      box_size: 16,\n      lineColorLeftTop: '#babdb6',\n      lineColorRightBottom: '#555753'\n    }\n  }\n}\n","import Canvas from '../backends/canvas.js'\nimport Themes from './themes.js'\nimport { constants } from '../system/constants.js'\n\n/** Class representing an Form widget for showing widgets. */\nexport default class FormWidget {\n  /**\n     * Create a form widget object used to show widget elements to the subject.\n     * @param {Object} experiment - The experiment item to which the form belongs.\n     * @param {String} cols - The unique name of the item.\n     * @param {String} rows - The unique name of the item.\n     * @param {String} spacing - The script containing the properties of the item.\n     * @param {String} margins - The script containing the properties of the item.\n     * @param {String} theme - The script containing the properties of the item.\n     * @param {Object} item - The item to which the form belongs.\n     * @param {String} timeout - The script containing the properties of the item.\n     * @param {String} clicks - The script containing the properties of the item.\n     */\n  constructor (experiment, cols, rows, spacing, margins, theme, item, timeout, clicks) {\n    // Set the class public properties.\n    this.clicks = clicks\n    this.cols = cols\n    this.experiment = experiment\n    this.height = this.experiment.vars.height\n    this.item = (item !== null) ? item : experiment\n    this.margins = margins\n    this.rows = rows\n    this.spacing = spacing\n    this.span = []\n    this.theme = theme\n    this.timeout = timeout\n    this.widgets = []\n    this.width = this.experiment.vars.width\n\n    // Calculate the total number ot rows and columns.\n    this.colNr = 0\n    for (let i = 0; i < cols.length; i++) {\n      this.colNr = this.colNr + Number(cols[i])\n    }\n    this.rowNr = 0\n    for (let i = 0; i < rows.length; i++) {\n      this.rowNr = this.rowNr + Number(rows[i])\n    }\n\n    // Set the class private properties.\n    this._groupId = 0\n\n    // Create the form canvas.\n    this._canvas = new Canvas(this.experiment, false)\n    this._canvas._styles.background_color = experiment.vars.background\n\n    // Set the form dimensions.\n    this._canvas._container.height = experiment.vars.height\n    this._canvas._container.width = experiment.vars.width\n    this._canvas._styles.font_family = experiment.vars.font_family\n\n    // Create the themes object.\n    this._themes = new Themes()\n  }\n\n  /** Create a unique group id for muliple rating scale groups. */\n  _getGroupId () {\n    // Return a unique group id and increase it.\n    return this._groupId++\n  }\n\n  /**\n     * Execute and render the form.\n     * @param {Object} pFocus_widget - The widget which receives focus (optional).\n     */\n  _exec (focus_widget) {\n    // Render the form.\n    this.render()\n\n    // Enabled the focus widget.\n    if (focus_widget !== null) {\n      // Focus the text_input widget.\n      focus_widget.setFocus()\n    }\n\n    // Set the timer to form pause.\n    this.experiment._runner._events._state = constants.TIMER_FORM\n\n    // PIXI: Set the cursor visibility to none (default).\n    this.experiment._runner._renderer.view.style.cursor = 'default'\n\n    // Set the onset time.\n    this.item.set_item_onset()\n\n    // Set the duration parameter.\n    if ((this.timeout !== null) && (this.item !== null)) {\n      this.item.sleep(this.timeout)\n    }\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Clear the old content.\n    this._canvas._container.removeChildren()\n\n    // render all widgets.\n    for (var i = 0; i < this.widgets.length; i++) {\n      // Add the widget to the container.\n      this._canvas._container.addChild(this.widgets[i]._container)\n\n      // Render the widget.\n      this.widgets[i].render()\n    }\n\n    // Show the form.\n    this._canvas.show(this.experiment)\n  }\n\n  /**\n     * Add a widget to a location on the form.\n     * @param {Object} widget - The widget to add to the form.\n     * @param {Object} pos - The position of the widget.\n     * @param {Number} colSpan - The width of the widget.\n     * @param {Number} rowSpan - The height of the widget.\n     */\n  set_widget (widget, pos, colSpan, rowSpan) {\n    // Calculate the form width and height minus the margins.\n    var form_width = this.experiment.vars.width - Number(this.margins[1]) - Number(this.margins[3])\n    var form_height = this.experiment.vars.height - Number(this.margins[0]) - Number(this.margins[2])\n\n    // Calculate the position and dimension of the widget on the form.\n    var x = Number(this.margins[3]) + Number(this.spacing)\n    for (let i = 0; i < Number(pos[0]); i++) {\n      x = x + (Number(this.cols[i]) / this.colNr) * form_width\n    }\n    var y = Number(this.margins[0]) + Number(this.spacing)\n    for (let i = 0; i < Number(pos[1]); i++) {\n      y = y + (Number(this.rows[i]) / this.rowNr) * form_height\n    }\n    var width = 0\n    let range = Number(Number(pos[0]) + Number(colSpan))\n    for (let i = Number(pos[0]); i < range; i++) {\n      width = width + Number(this.cols[i])\n    }\n    width = (width / this.colNr) * form_width - 2 * Number(this.spacing)\n\n    let height = 0\n    range = Number(Number(pos[1]) + Number(rowSpan))\n    for (var i = Number(pos[1]); i < range; i++) {\n      height = height + Number(this.rows[i])\n    }\n    height = (height / this.rowNr) * form_height - 2 * Number(this.spacing)\n\n    // Set the widget position and dimensions.\n    widget._container.width = Math.round(width)\n    widget._container.height = Math.round(height)\n    widget._container.x = Math.round(x)\n    widget._container.y = Math.round(y)\n\n    // Add the widget to the list.\n    this.widgets.push(widget)\n  }\n}\n","import Widget from './widget.js'\n\n/**\n * Class representing an OpenSesame label Widget.\n * @extends Widget\n */\nexport default class ImageWidget extends Widget {\n  /**\n     * Create a widget object which represents a text label.\n     * @param {Object} form - The form to which the widget belongs.\n     * @param {Object} properties - The properties belonging to the widget.\n     */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form)\n\n    // Set the class public properties.\n    this.adjust = (typeof properties.adjust !== 'undefined') ? (properties.adjust === 'true') : true\n    this.frame = (typeof properties.frame !== 'undefined') ? (properties.frame === 'yes') : false\n    this.path = (typeof properties.path !== 'undefined') ? properties.path : null\n    this.type = 'image'\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Clear the old content.\n    this._container.removeChildren()\n\n    // Draw the frame (if enabled).\n    if (this.frame === true) {\n      this.draw_frame()\n    }\n\n    // Get image from file pool.\n    var name = this.form.experiment._runner._syntax.remove_quotes(this.path)\n    var img = this.form.experiment._runner._pool[name].data\n\n    // Create a temporary canvas to make an image data array.\n    var canvas = document.createElement('canvas')\n    canvas.width = img.width\n    canvas.height = img.height\n    var ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n\n    // Create the image sprite.\n    var sprite = new PIXI.Sprite(PIXI.Texture.fromCanvas(canvas))\n\n    // Adjust the dimensions of the sprite.\n    if (this.adjust === true) {\n      // Calculate the aspect ratio.\n      var ar = (img.width / img.height)\n      // Adjust the size.\n      if (this._container._height >= this._container._width) {\n        // Stretch horizontal.\n        sprite.width = this._container._width\n        sprite.height = ar * this._container._width\n        sprite.x = 0\n        sprite.y = (this._container._height - sprite.height) / 2\n      } else {\n        // Stretc vertical.\n        sprite.height = this._container._height\n        sprite.width = ar * this._container._height\n        sprite.x = (this._container._width - sprite.width) / 2\n        sprite.y = 0\n      }\n    } else {\n      // No adjusting, just position the sprite in center of the widget.\n      sprite.x = (this._container._width / 2) - (sprite.width / 2)\n      sprite.y = (this._container._height / 2) - (sprite.height / 2)\n    }\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n}\n","import ImageWidget from './image_widget.js'\nimport { Rectangle } from 'pixi.js'\nimport { constants } from '../system/constants.js'\n\n/**\n * Class representing an OpenSesame Image Button Widget.\n * @extends ImageWidget\n */\nexport default class ImageButtonWidget extends ImageWidget {\n  /**\n     * Create a widget object which represents a text label.\n     * @param {Object} form - The form  which the widget belongs.\n     * @param {Object} properties - The properties belonging to the widget.\n     */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form, properties)\n\n    // Set the class public properties.\n    this.type = 'image_button'\n    this.var = (typeof properties.var !== 'undefined') ? properties.var : null\n\n    // Set the current status of the checkbox.\n    this.set_var(false, this.var)\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Set the interactive mode (if not set yet).\n    if ((this.form.item.vars.only_render === 'no') && (this._container.interactive === false)) {\n      this._container.interactive = true\n      this._container.buttonMode = true\n      this._container.hitArea = new Rectangle(0, 0, this._container._width, this._container._height)\n      this._container.on('mousedown', function (event) {\n        this.response(event)\n      }.bind(this))\n      this._container.on('touchstart', function (event) {\n        this.response(event)\n      }.bind(this))\n    }\n\n    // Inherited.\n    super.render()\n  }\n\n  /**\n     * Process the response for the button widget.\n     * @param {Object} event - The response event.\n     */\n  response (event) {\n    // Set the current status of the checkbox.\n    this.set_var(true, this.var)\n\n    // Complete the item element.\n    if (this.form.timeout === null) {\n      this.form.item._complete()\n    } else {\n      this.form.experiment._runner._events._currentItem._status = constants.STATUS_FINALIZE\n    }\n  }\n}\n","import { Text } from 'pixi.js'\nimport Widget from './widget.js'\n\n/**\n * Class representing an OpenSesame label Widget.\n * @extends Widget\n */\nexport default class LabelWidget extends Widget {\n  /**\n   * Create a widget object which represents a text label.\n   * @param {Object} form - The form  which the widget belongs.\n   * @param {Object} properties - The properties belonging to the widget.\n   */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form)\n\n    // Set the class public properties.\n    this.center = (typeof properties.center !== 'undefined')\n      ? (properties.center === 'yes')\n      : true\n    this.frame = (typeof properties.frame !== 'undefined')\n      ? (properties.frame === 'yes')\n      : false\n    this.text = properties.text\n    this.type = 'label'\n  }\n\n  /**\n     * Convert a text string to a collection of lines.\n     * @param {Number|String} text - The text to convert into lines.\n     * @param {Number} width - The height of the containing box.\n     * @param {Number} height - The width of the containing box.\n     * @param {Object} text_style - The styling of the text.\n     * @param {Array} - Array of text lines.\n     */\n  text_lines (text, width, height, text_style) {\n    // Create a temporary canvas context.\n    var canvas = document.createElement('canvas')\n    canvas.width = 800\n    canvas.height = 600\n    var buffer_context = canvas.getContext('2d')\n\n    // Set the context font style.\n    buffer_context.font = text_style.fontSize + 'px ' + text_style.fontFamily\n    if (text_style.fontWeight === 'bold') {\n      buffer_context.font = 'bold ' + buffer_context.font\n    }\n    if (text_style.fontStyle === 'italic') {\n      buffer_context.font = 'italic ' + buffer_context.font\n    }\n\n    // Create the lines of text\n    var words = text.split(' ')\n    var lines = []\n    var line = ''\n    var line_length = 0\n    while (words.length > 0) {\n      // Get the next word and the length of the word with one space.\n      var word = words.shift()\n      var word_length = buffer_context.measureText(word + ' ').width\n      if (word === '<br/>') {\n        // line is done, add it to the lines.\n        lines.push(line)\n        // Set the new line.\n        line = ''\n        line_length = word_length\n      } else if ((line_length + word_length) > width) {\n        // line is done, add it to the lines.\n        lines.push(line)\n        // Set the new line.\n        line = word\n        line_length = word_length\n      } else {\n        // Add the word to the line\n        line = (line === '') ? word : line + ' ' + word\n        // increate the length of the line.\n        line_length = line_length + word_length\n      }\n    }\n\n    // Check for remainder words.\n    lines.push(line)\n\n    // Return the lines.\n    return lines\n  }\n\n  /**\n     * Draw the label widget.\n     * @param {Number|String} text - The text for the label.\n     * @param {Number|String} html - Toggle if the text contains html (ignored).\n     */\n  draw_text (text, html) {\n    // Create the text element\n    var text_style = {\n      fontFamily: this.form._canvas._styles.font_family,\n      fontSize: this.form.experiment.vars.font_size,\n      fontStyle: (this.form.experiment.vars.font_italic === 'yes') ? 'italic' : 'normal',\n      fontWeight: (this.form.experiment.vars.font_bold === 'yes') ? 'bold' : 'normal',\n      fill: this.form.experiment.vars.foreground\n    }\n    // Get the lines and properties.\n    const text_elements = this.text_lines(text, this._container._width - 10,\n      this._container._height - 10, text_style)\n    const lineProperties = this.form._canvas._getTextBaseline('MgyQ', text_style.fontFamily,\n      text_style.fontSize, text_style.fontWeight)\n\n    // Calculate the starting y position.\n    let y = (this.center === true) ? (this._container._height - ((text_elements.length) * lineProperties.height)) / 2 : 5\n    // Create the lines.\n    for (let i = 0; i < text_elements.length; i++) {\n      const text_element = new Text(text_elements[i], text_style)\n      text_element.x = Math.round((this.center === true) ? (this._container._width - text_element.width) / 2 : 5)\n      text_element.y = Math.round(y)\n      y = y + lineProperties.height\n\n      // Add the text_element to the container.\n      this._container.addChild(text_element)\n    }\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Clear the old content.\n    this._container.removeChildren()\n\n    // Draw the frame (if enabled).\n    if (this.frame === true) {\n      this.draw_frame()\n    }\n\n    // Update the text.\n    const text = this.form.experiment.syntax.eval_text(this.text, this.form.item.vars, false)\n\n    // Draw the text.\n    this.draw_text(text)\n  }\n}\n","import Widget from './widget.js'\nimport { Graphics, Container, Rectangle } from 'pixi.js'\n\n/** Class representing an OpenSesame text input Widget. */\nexport default class RatingScaleWidget extends Widget {\n  /**\n   * Create a widget object which represents a text label.\n   * @param {Object} form - The form  which the widget belongs.\n   * @param {Object} properties - The properties belonging to the widget.\n   */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form)\n\n    // Set the class public properties.\n    this.click_accepts = (typeof properties.click_accepts !== 'undefined') ? (properties.click_accepts === 'yes') : false\n    this.default = (typeof properties.default !== 'undefined') ? properties.default : null\n    this.orientation = (typeof properties.orientation !== 'undefined') ? properties.orientation : 'horizontal'\n    this.nodes = (typeof properties.nodes !== 'undefined') ? properties.nodes : '5'\n    this.var = (typeof properties.var !== 'undefined') ? properties.var : null\n    this.type = 'rating_scale'\n\n    // Set the class private properties.\n    this._checkBoxes = []\n    this._groupId = this.form._getGroupId()\n\n    // Create a list of possible nodes.\n    this._processNodes()\n  }\n\n  /** Create a list of checkbox nodes. */\n  _processNodes () {\n    // Process the nodes.\n    this._nodes = []\n\n    // Check for a valid number.\n    if (!isNaN(parseFloat(this.nodes)) && isFinite(this.nodes)) {\n      // Create alist of empty nodes.\n      for (var i = 0; i < Number(this.nodes); i++) {\n        this._nodes.push('')\n      }\n    } else {\n      // Create a list of\n      var labels = this.nodes.split(';')\n      for (let i = 0; i < labels.length; i++) {\n        this._nodes.push(labels[i])\n      }\n    }\n  }\n\n  /** Draw a border for the rating scale.\n     * @param {Number} x - x position of the checkbox.\n     * @param {Number} y - y position of the checkbox.\n     * @param {Number} width - width of the border.\n     * @param {Number} height - height of the border.\n     */\n  _drawBorder (x, y, width, height) {\n    // Create the rectangle element.\n    var rectangle = new Graphics()\n    rectangle.lineStyle(1, this.form._canvas._styles._convertColorValue(this.form._themes.theme.gray.backgroundColor), 1)\n    rectangle.drawRect(x, y, width, height)\n    rectangle.x = 0\n    rectangle.y = 0\n\n    // Add the rectangle to the container.\n    this._container.addChild(rectangle)\n  }\n\n  /** Draw a checkbox element\n     * @param {Number} x - x position of the checkbox.\n     * @param {Number} y - y position of the checkbox.\n     */\n  _drawCheckBox (x, y) {\n    // PIXI: create the border box.\n    var box_lines = new Graphics()\n    box_lines.lineStyle(1, 0x000000)\n    box_lines.moveTo(1, 0)\n    box_lines.lineTo(13, 0)\n    box_lines.moveTo(14, 1)\n    box_lines.lineTo(14, 13)\n    box_lines.moveTo(0, 1)\n    box_lines.lineTo(0, 13)\n    box_lines.moveTo(1, 14)\n    box_lines.lineTo(13, 14)\n    box_lines.x = 5\n    box_lines.y = 7\n\n    // PIXI: create the fill box.\n    var box_fill = new Graphics()\n    box_fill.lineStyle(1, 0xffffff, 1)\n    box_fill.beginFill(0xffffff)\n    box_fill.drawRect(1, 1, 12, 12)\n    box_fill.endFill()\n    box_fill.x = 5\n    box_fill.y = 7\n\n    //  create the check line.\n    var box_check = new Graphics()\n    box_check.lineStyle(1, 0x04b010)\n    box_check.moveTo(4, 5)\n    box_check.lineTo(7, 12)\n    box_check.lineTo(12, 3)\n    box_check.x = 5\n    box_check.y = 7\n    box_check.visible = false\n\n    // Add the elements to a container.\n    var container = new Container()\n    container.addChild(box_lines)\n    container.addChild(box_fill)\n    container.addChild(box_check)\n    container.x = x\n    container.y = y\n\n    // Add the wisget to the container.\n    this._container.addChild(container)\n    this._checkBoxes.push(container)\n\n    // Set the interactive mode.\n    container.interactive = true\n    container.buttonMode = true\n    container.hitArea = new Rectangle(0, 5, 15, 15)\n    container.on('mousedown', function (event) {\n      this.response(event)\n    }.bind(this))\n    container.on('touchstart', function (event) {\n      this.response(event)\n    }.bind(this))\n  }\n\n  /** Draw a label element\n     * @param {Number} x - x position of the checkbox.\n     * @param {Number} y - y position of the checkbox.\n     * @param {String} text - the text for the label.\n     * @param {Boolean} horizotal - if true horizontal otherwise vertical.\n     */\n  _drawText (x, y, text, horizontal) {\n    // PIXI - Create the text element\n    var text_style = {\n      fontFamily: this.form._canvas._styles.font_family,\n      fontSize: this.form.experiment.vars.font_size,\n      fontStyle: (this.form.experiment.vars.font_italic === 'yes') ? 'italic' : 'normal',\n      fontWeight: (this.form.experiment.vars.font_bold === 'yes') ? 'bold' : 'normal',\n      fill: this.form.experiment.vars.foreground\n    }\n\n    // Get the lines and properties.\n    var lineProperties = this.form._canvas._getTextBaseline(text, text_style.fontFamily, text_style.fontSize, text_style.fontWeight)\n    var text_element = new Text(text, text_style)\n    if (horizontal === true) {\n      text_element.x = x - (text_element.width / 2) + 15\n      text_element.y = y - lineProperties.height\n    } else {\n      text_element.x = x - text_element.width - 15\n      text_element.y = y + 2\n    }\n\n    // Add the text_element to the container.\n    this._container.addChild(text_element)\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Set the interactive mode (if not set yet).\n    if ((this.form.item.vars.only_render === 'no') && (this._container.interactive === false)) {\n      this._container.interactive = true\n      this._container.buttonMode = true\n      this._container.hitArea = new Rectangle(0, 0, this._container._width, this._container._height)\n    }\n\n    // Clear the old content.\n    this._checkBoxes = []\n    this._container.removeChildren()\n\n    // Set the default positions.\n    var cx = this._container._width / 2\n    var cy = this._container._height / 2\n    var _h = this.form._themes.theme.gray.box_size\n\n    // Define horizontal or vertical positioning.\n    if (this.orientation === 'horizontal') {\n      // Calculate the distances between the checkboxes.\n      var dx = (1 * this._container._width - 3 * _h) / (this._nodes.length - 1)\n\n      // Create the rounding rectangle.\n      this._drawBorder(0, cy - 0.5 * _h, this._container._width, 2 * _h)\n\n      // create the label and checkbox widgets.\n      var _x = _h\n      for (var i = 0; i < this._nodes.length; i++) {\n        // Create the checkbox widget\n        this._drawCheckBox(_x, cy - 5)\n\n        // Update the text.\n        const text = this.form.experiment.syntax.eval_text(this._nodes[i], null, false)\n\n        // Create the text label;\n        this._drawText(_x, cy - 8, text, true)\n\n        // Increase the position.\n        _x = _x + dx\n      }\n    } else {\n      // Calculate the distances between the checkboxes.\n      var dy = (1 * this._container._height - 3 * _h) / (this._nodes.length - 1)\n\n      // Create the rounding rectangle.\n      this._drawBorder(cx - 0.5 * _h, 0, 2 * _h, this._container._height)\n\n      // create the label and checkbox widgets.\n      var _y = _h\n      for (let i = 0; i < this._nodes.length; i++) {\n        // Create the checkbox widget\n        this._drawCheckBox(cx - 5, _y)\n\n        // Update the text.\n        var text = this.form.experiment.syntax.eval_text(this._nodes[i], null, false)\n\n        // Create the text label;\n        this._drawText(cx - 8, _y, text, false)\n\n        // Increase the position.\n        _y = _y + dy\n      }\n    }\n\n    // Enable the default checkbox.\n    if (this.default !== null) {\n      // Enable the checkbox.\n      this._checkBoxes[Number(this.default)].children[2].visible = true\n\n      // Set the value\n      this.set_value(Number(this.default))\n    }\n  }\n\n  /**\n     * Process the response for the text input widget.\n     * @param {Object} event - The response event.\n     */\n  response (event) {\n    // Parse trough the boxes.\n    for (var i = 0; i < this._checkBoxes.length; i++) {\n      if (this._checkBoxes[i] === event.currentTarget) {\n        // Enable the checkbox.\n        this._checkBoxes[i].children[2].visible = true\n\n        // Set the value for the rating scale.\n        this.set_value(i)\n      } else {\n        // Disable the checkbox.\n        this._checkBoxes[i].children[2].visible = false\n      }\n    }\n  }\n\n  /**\n     * Sets the rating scale value.\n     * @param {Number} value - The value for the rating scale.\n     */\n  set_value (value) {\n    // Chekc for a valid value\n    if ((value === null) && ((value < 0) || (value > this._nodes.length))) {\n      this.form.experiment._runner._debugger.addError('Trying to select a non-existing node. Did you specify an incorrect default value?')\n    } else {\n      // Set the value property.\n      this.value = value\n\n      // Set te variable.\n      this.set_var(value)\n    }\n  }\n\n  /**\n     * Sets an experimental variable.\n     * @param {Boolean|Number|String} pVal - The value for the variable.\n     * @param {String} pVar - The name of the variabler to set.\n     */\n  set_var (pVal, pVar) {\n    // set variable.\n    var variable = (typeof pVar !== 'undefined') ? pVar : this.var\n\n    // Only set variable if it is defined.\n    if (variable !== null) {\n      var values = []\n      for (var i = 0; i < this.form.widgets.length; i++) {\n        if ((this.form.widgets[i].type === 'checkbox') && (this.form.widgets[i].var === this.var) && (this.form.widgets[i].checked === true)) {\n          values.push(this.form.widgets[i].text)\n        }\n      }\n\n      // Inherited.\n      if (values === []) {\n        super.set_var('no', variable)\n      } else {\n        super.set_var(values.join(';'), variable)\n      }\n    }\n  }\n}\n","import Widget from './widget.js'\nimport {\n  constants\n} from '../system/constants.js'\n\n// import TextInput from 'pixi-text-input'\n\n/**\n * Class representing an OpenSesame Image Widget.\n * @extends Widget\n */\nexport default class TextInputWidget extends Widget {\n  /**\n   * Create a widget button object which represents a text input.\n   * @param {Object} form - The form  which the widget belongs.\n   * @param {Object} properties - The properties belonging to the widget.\n   */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form)\n\n    // Set the class public properties.\n    this.center = (typeof properties.center !== 'undefined') ? (properties.center === 'yes') : false\n    this.focus = false\n    this.frame = (typeof properties.frame !== 'undefined') ? (properties.frame === 'yes') : true\n    this.stub = (typeof properties.stub !== 'undefined') ? properties.stub : 'Type here...'\n    this.text = (typeof properties.text !== 'undefined') ? properties.text : ''\n    this.var = (typeof properties.var !== 'undefined') ? properties.var : null\n    this.return_accepts = (typeof properties.return_accepts !== 'undefined') ? (properties.return_accepts === 'yes') : false\n    this.type = 'text_input'\n  }\n\n  /** Focus the Text area widget. */\n  setFocus () {\n    // Set focus toggle.\n    this.focus = true\n  }\n\n  /**\n   * Process the response for the text input widget.\n   * @param {Object} event - The response event.\n   */\n  response (widget, event) {\n    // Set the variable.\n    widget.set_var(widget.inputField.text, widget.var)\n\n    // Only respond to enter key.\n    if ((event.keyCode === 13) && (widget.return_accepts === true)) {\n      // Complete the item element.\n      if (widget.form.timeout === null) {\n        widget.form.item._complete()\n      } else {\n        widget.form.experiment._runner._events._currentItem._status = constants.STATUS_FINALIZE\n      }\n    }\n  }\n\n  /**\n   * Draw the label widget.\n   * @param {Number|String} pText - The text for the labe.\n   * @param {Number|String} pHtml - Toggle if the text contains html (ignored).\n   */\n  draw_text (text, html) {\n    // const box_style = {\n    //   fill: this.form._canvas._styles._convertColorValue(this.form.experiment.vars.background),\n    //   rounded: 5\n    // }\n\n    // // PIXI - Create the text element\n    // const text_style = {\n    //   fontFamily: this.form._canvas._styles.font_family,\n    //   fontSize: this.form.experiment.vars.font_size,\n    //   fontStyle: (this.form.experiment.vars.font_italic === 'yes') ? 'italic' : 'normal',\n    //   fontWeight: (this.form.experiment.vars.font_bold === 'yes') ? 'bold' : 'normal',\n    //   fill: this.form.experiment.vars.foreground\n    // }\n    // this.inputField = new TextInput(text_style, box_style)\n    // this.inputField.x = 5\n    // this.inputField.y = 5\n    // this.inputField.keydown = this.response\n    // this.inputField.focus()\n    // this._container.addChild(this.inputField)\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Clear the old content.\n    this._container.removeChildren()\n\n    // // Draw the frame (if enabled).\n    // if (this.frame === true) {\n    //   this.draw_frame()\n    // }\n\n    // Draw the text.\n    this.draw_text(this.text)\n  }\n}\n","import Item from '../items/item.js'\r\nimport {\r\n  isNumber\r\n} from 'lodash'\r\n\r\n/**\r\n * Class representing a advanced delay item.\r\n * @extends Item\r\n */\r\nexport default class AdvancedDelay extends Item {\r\n  /**\r\n   * Create an advanced delay plugin item which delays for e specific duration the experiment.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Waits for a specified duration'\r\n    this._duration = -1\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n   * Gaussian distribution function.\r\n   * @param {Number} mean - The mean value.\r\n   * @param {Number} std - The standard deviation value.\r\n   * @return {Number} - result value\r\n   */\r\n  _random_gauss (mean, std) {\r\n    let u = 0\r\n    let v = 0\r\n    while (u === 0) u = Math.random()\r\n    while (v === 0) v = Math.random()\r\n    return Math.max(0, mean + Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v) * std)\r\n  }\r\n\r\n  /**\r\n   * Uniform distribution function.\r\n   * @param {Number} mean - The mean value.\r\n   * @param {Number} stdev - The standard deviation value.\r\n   * @return {Number} - result value\r\n   */\r\n  _random_uniform (mean, jitter) {\r\n    return Math.max(0, Math.floor(mean + Math.random() * jitter - jitter / 2))\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.vars.duration = 1000\r\n    this.vars.jitter = 0\r\n    this.vars.jitter_mode = 'Uniform'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    const duration = this.vars.get('duration')\r\n    const jitter = this.vars.get('jitter')\r\n    const jitter_mode = this.vars.get('jitter_mode')\r\n    if ((!isNumber(duration)) || (duration < 0)) {\r\n      this._runner._debugger.addError('Duration should be a positive numeric value in advanced_delay ' + this.name)\r\n    }\r\n    if (jitter_mode === 'Uniform') {\r\n      this._duration = this._random_uniform(duration, jitter)\r\n    } else if (jitter_mode === 'Std. Dev.') {\r\n      this._duration = this._random_gauss(duration, jitter)\r\n    } else {\r\n      this._runner._debugger.addError('Unknown jitter mode in advanced_delay ' + this.name)\r\n    }\r\n    if (this._duration < 0) {\r\n      this._duration = 0\r\n    }\r\n    this._duration = Number(this._duration)\r\n    this.experiment.vars.set('delay_' + this.name, this._duration)\r\n    this._runner._debugger.addMessage('delay for ' + this._duration + ' ms.')\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    this.set_item_onset(this.time())\r\n    if (this._duration > 0) {\r\n      this.sleep(this._duration)\r\n    } else {\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from '../items/item.js'\nimport FormWidget from '../widgets/form.js'\nimport { constants } from '../system/constants.js'\n\n/**\n * Class representing a base form class.\n * @extends Item\n */\nexport default class FormBase extends Item {\n  /**\n     * Create a base form item which is used as basic class for all form types.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     * @param {String} itemType - The type of form to create.\n     * @param {String} description - The description of the form plugin.\n     */\n  constructor (experiment, name, script, itemType, description) {\n    // Inherited.\n    super(experiment, name, script)\n\n    // Define and set the public properties.\n    this.cols = []\n    this.description = 'A generic form plug-in'\n    this.focus_widget = null\n    this.form = null\n    this.options = []\n    this.rows = []\n    this.timeout = null\n\n    // Set the class private properties.\n    this._form_options = false\n    this._form_text = false\n\n    // Set the class public properties.\n    this.description = description\n    this.item_type = itemType\n\n    // Process the script.\n    this.from_string(script)\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    // PIXI: Set the cursor visibility to none (default).\n    this.experiment._runner._renderer.view.style.cursor = 'none'\n\n    // Set the timer to normal mode.\n    this.experiment._runner._events._state = constants.TIMER_NONE\n\n    // form is finalized.\n    this._status = constants.STATUS_FINALIZE\n\n    // Inherited.\n    super._complete()\n  }\n\n  _update (response) {\n    // Update the rendering of the active form.\n    this.form._canvas.show(this.form.experiment)\n  }\n\n  /** Resets all item variables to their default value. */\n  reset () {\n    this.vars.cols = '2;2'\n    this.vars.rows = '2;2'\n    this.vars.spacing = 10\n    this.vars._theme = 'gray'\n    this.vars.only_render = 'no'\n    this.vars.timeout = 'infinite'\n    this.vars.margins = '50;50;50;50'\n    this._widgets = []\n  }\n\n  parse_line (line) {\n    // Split the line in tokens.\n    var list = this.syntax.split(line)\n\n    if ((this._form_text === true) && (list[0] !== '__end__')) {\n      this.vars.form_text = this.vars.form_text + line.replace('\\t', '') + ' <br/> '\n    }\n    if ((this._form_options === true) && (list[0] !== '__end__')) {\n      this.options.push(line.replace('\\t', ''))\n    }\n\n    // Check for widget definition.\n    if (list[0] === 'widget') {\n      // Remove widget command.\n      list.shift()\n\n      // Add widget to the list.\n      this._widgets.push(list)\n    } else if (list[0] === '__options__') {\n      this._form_options = true\n    } else if (list[0] === '__form_text__') {\n      this.vars.form_text = ''\n      this._form_text = true\n    } else if (list[0] === '__end__') {\n      this._form_options = false\n      this._form_text = false\n    }\n  }\n\n  /** Implements the prepare phase of an item. */\n  prepare () {\n    // Retrieve the column, rows and margins.\n    var cols = (typeof this.vars.cols === 'string') ? this.vars.cols.split(';') : [String(this.vars.cols)]\n    var rows = (typeof this.vars.rows === 'string') ? this.vars.rows.split(';') : [String(this.vars.rows)]\n    var margins = this.vars.margins.split(';')\n\n    // Get the time out parameter.\n    let timeout\n    if (this.vars.timeout === 'infinite') {\n      timeout = null\n    } else {\n      timeout = this.vars.timeout\n    }\n\n    // Create the basic form.\n    this.form = new FormWidget(this.experiment, cols, rows, this.vars.spacing,\n      margins, this.vars._theme, this, timeout, this.vars.form_clicks === 'yes')\n\n    // Parse the widget definitions.\n    for (var i = 0; i < this._widgets.length; i++) {\n      this.focus_widget = null\n      var kwdict = {}\n      var parameters = []\n      parameters.push(this.form)\n      if (this._widgets[i].length > 5) {\n        for (var j = 5; j < this._widgets[i].length; j++) {\n          var varName = String(this._widgets[i][j]).substr(0, String(this._widgets[i][j]).indexOf('='))\n          var varValue = String(this._widgets[i][j]).substring(String(this._widgets[i][j]).indexOf('=') + 1, String(this._widgets[i][j]).length)\n          kwdict[varName] = this.syntax.remove_quotes(varValue)\n          kwdict[varName] = this.syntax.eval_text(kwdict[varName], this.form.item.vars, true)\n          kwdict[varName] = this.syntax.remove_quotes(kwdict[varName])\n          parameters.push(this.syntax.remove_quotes(varValue))\n        }\n      }\n\n      // Process focus keyword.\n      var focus = false\n      if ((typeof kwdict.focus !== 'undefined') && (kwdict.focus === 'yes')) {\n        delete (kwdict.focus)\n        focus = true\n      }\n\n      // Parse arguments\n      var _type = this._widgets[i][4]\n      var col = this._widgets[i][0]\n      var row = this._widgets[i][1]\n      var colspan = this._widgets[i][2]\n      var rowspan = this._widgets[i][3]\n\n      // Create the widget.\n      try {\n        var _w = this.experiment.items._newWidgetClass(_type, this.form, kwdict)\n      } catch (e) {\n        this.experiment._runner._debugger.addError('Failed to create widget ' + _type + ', error:' + e)\n      }\n\n      // Add the widget to the parent form.\n      this.form.set_widget(_w, [col, row], colspan, rowspan)\n\n      // Add as focus widget\n      if (focus === true) {\n        if (this.focus_widget != null) {\n          this.experiment._runner._debugger.addError('Osweb error: You can only specify one focus widget')\n        } else {\n          this.focus_widget = _w\n        }\n      }\n    }\n\n    // Inherited.\n    super.prepare()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Inherited.\n    super.run()\n\n    // Execute the form.\n    if (this.vars.only_render === 'yes') {\n      // Render the form.\n      this.form.render()\n\n      // Continue the process.\n      this._complete()\n    } else {\n      this.form._exec(this.focus_widget)\n    }\n  }\n}\n","import FormBase from './form_base.js'\nimport FormWidget from '../widgets/form.js'\n\n/**\n * Class representing a consent form.\n * @extends FormBase\n */\nexport default class FormConsent extends FormBase {\n  /**\n     * Create a form which shows some simple text.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script, 'form_consent', 'A simple consent form')\n\n    // Define and set the public properties.\n    this.decline_form = null\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    // Check if the concense form is completed or the decline sub form.\n    if (this.decline_form !== null) {\n      // Hide the default form.\n      this.decline_form._canvas._container.visible = false\n      this.form._canvas._container.visible = true\n      this.decline_form = null\n\n      // Re-run the consense form.\n      this.run()\n    } else {\n      // Check if the consent status is shown.\n      if (this.experiment.vars.get('accept_status') === true) {\n        // Accept button is selected, check the checkbox status.\n        if (this.experiment.syntax.remove_quotes(this.experiment.vars.get('checkbox_status')) === this.vars.get('checkbox_text')) {\n          // Go to the next form, so continue the closure.\n          super._complete()\n        } else {\n          console.log('decline form')\n          // Create the decline message form.\n          this.decline_form = new FormWidget(this.experiment, [1], [1], 10, ['50', '50', '50', '50'], 'gray', this, 5000, false)\n\n          // Create the text widget.\n          var widget = this.experiment.items._newWidgetClass('label', this.decline_form, { text: this.vars.decline_message, center: 'yes' })\n\n          // Add the widget to the parent form.\n          this.decline_form.set_widget(widget, [0, 0], 1, 1)\n\n          // Hide the default form.\n          this.form._canvas._container.visible = false\n          this.decline_form._canvas._container.visible = true\n\n          // Execute the decline form.\n          this.decline_form._exec(null)\n        }\n      } else {\n        // Decline button pressed, stop the experiment.\n        this.experiment._runner.exit()\n      }\n    }\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Inherited.\n    super.run()\n  }\n}\n","import FormBase from './form_base.js'\n\n/**\n * Class representing a form with multiple choise item.\n * @extends FormBase\n */\nexport default class FormMultipleChoice extends FormBase {\n  /**\n     * Create a form which shows some simple text.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script, 'form_multiple_choice', 'A simple multiple choise item')\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    // Inherited.\n    super._complete()\n  }\n\n  /** Implements the run phase of an item. */\n  prepare () {\n    //\n    this.vars.cols = '1;1;'\n    this.vars.rows = '1;1;'\n    this._widgets = []\n\n    this._widgets.push(this.syntax.split('0 0 2 1 label text=\"[form_title]\"'))\n    this._widgets.push(this.syntax.split('0 1 2 1 label center=no text=\"[question]\"'))\n    // Add the individual labels.\n    for (var i = 0; i < this.options.length; i++) {\n      this._widgets.push(this.syntax.split('0 ' + String(i + 2) + ' 2 1 checkbox group=group1 center=no text=\"' + this.options[i] + '\"'))\n      this.vars.rows = this.vars.rows + '1;'\n    }\n    this._widgets.push(this.syntax.split('0 ' + String(i + 3) + ' 2 2 button text=\"[button_text]\"'))\n    this.vars.rows = this.vars.rows + '1;1;'\n\n    // Inherited prepare.\n    super.prepare()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Inherited.\n    super.run()\n  }\n}\n","import FormBase from './form_base.js'\n\n/**\n * Class representing a form text display item.\n * @extends FormBase\n */\nexport default class FormTextDisplay extends FormBase {\n  /**\n     * Create a form which shows some simple text.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script, 'form_text_display', 'A simple text display form')\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    // Inherited.\n    super._complete()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Inherited.\n    super.run()\n  }\n}\n","import FormBase from './form_base.js'\n\n/**\n * Class representing a form text display item.\n * @extends Item\n */\nexport default class FormTextInput extends FormBase {\n  /**\n     * Create a form which shows some simple text.\n     * @param {Object} pExperiment - The experiment item to which the item belongs.\n     * @param {String} pName - The unique name of the item.\n     * @param {String} pScript - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script, 'form_text_input', 'A simple text input form')\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    // Inherited.\n    super._complete()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Inherited.\n    super.run()\n  }\n}\n","import { Texture, Sprite } from 'pixi.js'\nimport {\n  constants\n} from '../system/constants.js'\n\n/** Class representing a video. */\nexport default class Video {\n  /**\n   * Create a video object which controls the video device.\n   * @param {Object} experiment - The experiment to which the video belongs.\n   * @param {String} src - The video source name.\n   */\n  constructor (experiment, source) {\n    // Set class parameter properties.\n    this._experiment = experiment\n\n    // Set the class public properties.\n    this.audio = true\n    this.duration = 'keypress'\n    this.full_screen = false\n\n    // Set the class pivate properties.\n    this._playing = false\n    this._script = null\n\n    // Create the video instance\n    if (source !== null) {\n      // Set the video object.\n      this._video = source.data\n\n      // create a video texture from the video.\n      this._texture = Texture.from(source.data)\n\n      // create a new Sprite using the video texture (yes it's that easy)\n      this._videoSprite = new Sprite(this._texture)\n      this._video.pause()\n\n      // Set the event anchors.\n      this._video.onended = this._experiment._runner._events._videoEnded.bind(this)\n      this._video.onplay = this._experiment._runner._events._videoPlay.bind(this)\n    }\n  }\n\n  /** Update the video rendering. */\n  _update () {\n    if (this._playing === true) {\n      // Update the renderer.\n      this._experiment._runner._renderer.render(this._videoSprite)\n\n      // execute script.\n      if ((this._script !== null) && (this._event_handler_always === true)) {\n        // Start the parser\n        this._experiment._runner._pythonParser._run(null, this._script)\n      }\n    }\n  }\n\n  /** Play the actual video. */\n  play () {\n    // Enable the video playing.\n    this._video.play()\n\n    // Set the volume\n    this._video.volume = (this.audio === true) ? 1 : 0\n\n    // Check if the video must be scaled.\n    if (this.full_screen === true) {\n      this._videoSprite.width = this._experiment._runner._renderer.width\n      this._videoSprite.height = this._experiment._runner._renderer.height\n    }\n\n    // Render the first frame.\n    this._experiment._runner._renderer.render(this._videoSprite)\n\n    // Set the play toggle.\n    this._playing = true\n  }\n\n  /** Stop playing the video. */\n  stop () {\n    // Pause the actual sound.\n    this._video.pause()\n    this._playing = false\n  }\n\n  /** Set the blocking of the sound. */\n  wait () {\n    this._experiment._runner._events._run(-1, constants.RESPONSE_VIDEO, [])\n  }\n}\n","// Control elements\r\nimport Loop from '../items/loop.js'\r\nimport Sequence from '../items/sequence.js'\r\nimport Coroutines from '../items/coroutines.js'\r\n// Slides\r\nimport Sketchpad from '../items/sketchpad.js'\r\nimport Feedback from '../items/feedback.js'\r\n// Scripts\r\nimport InlineScript from '../items/inline_script.js'\r\nimport InlineJavaScript from '../items/inline_javascript.js'\r\n// Responses\r\nimport KeyboardResponse from '../items/keyboard_response.js'\r\nimport MouseResponse from '../items/mouse_response'\r\nimport Logger from '../items/logger.js'\r\n// Audio\r\nimport Sampler from '../items/sampler.js'\r\nimport Synth from '../items/synth.js'\r\n\r\n// Elements\r\nimport Arrow from '../elements/arrow.js'\r\nimport Circle from '../elements/circle.js'\r\nimport Ellipse from '../elements/ellipse.js'\r\nimport Fixdot from '../elements/fixdot.js'\r\nimport Gabor from '../elements/gabor.js'\r\nimport ImageElement from '../elements/image.js' // Image is a reserved JS class\r\nimport Line from '../elements/line.js'\r\nimport Noise from '../elements/noise.js'\r\nimport Rect from '../elements/rect.js'\r\nimport TextLine from '../elements/textline.js'\r\n\r\n// Widgets\r\nimport ButtonWidget from '../widgets/button.js'\r\nimport CheckBoxWidget from '../widgets/checkbox.js'\r\nimport FormWidget from '../widgets/form.js'\r\nimport ImageWidget from '../widgets/image_widget.js'\r\nimport ImageButtonWidget from '../widgets/image_button.js'\r\nimport LabelWidget from '../widgets/label.js'\r\nimport RatingScaleWidget from '../widgets/rating_scale.js'\r\nimport TextInputWidget from '../widgets/text_input.js'\r\nimport Themes from '../widgets/themes.js'\r\n\r\n// Plugins\r\nimport AdvancedDelay from '../plugins/advanced_delay.js'\r\nimport FormBase from '../plugins/form_base.js'\r\nimport FormConsent from '../plugins/form_consent.js'\r\nimport FormMultipleChoice from '../plugins/form_multiple_choice.js'\r\nimport FormTextDisplay from '../plugins/form_text_display.js'\r\nimport FormTextInput from '../plugins/form_text_input.js'\r\nimport MediaPlayer from '../plugins/media_player.js'\r\nimport Notepad from '../plugins/notepad.js'\r\nimport RepeatCycle from '../plugins/repeat_cycle.js'\r\nimport ResetFeedback from '../plugins/reset_feedback.js'\r\nimport TouchResponse from '../plugins/touch_response.js'\r\n\r\n/**\r\n * this variable maps the string representation of each element to the corresponding\r\n * class names.\r\n * @type {Object}\r\n */\r\nexport const itemClasses = {\r\n  // Items\r\n  loop: Loop,\r\n  sequence: Sequence,\r\n  sketchpad: Sketchpad,\r\n  feedback: Feedback,\r\n  inline_script: InlineScript,\r\n  inline_javascript: InlineJavaScript,\r\n  keyboard_response: KeyboardResponse,\r\n  mouse_response: MouseResponse,\r\n  logger: Logger,\r\n  sampler: Sampler,\r\n  synth: Synth,\r\n  coroutines: Coroutines,\r\n  // Elements\r\n  arrow: Arrow,\r\n  circle: Circle,\r\n  ellipse: Ellipse,\r\n  fixdot: Fixdot,\r\n  gabor: Gabor,\r\n  image: ImageElement,\r\n  line: Line,\r\n  noise: Noise,\r\n  rect: Rect,\r\n  textline: TextLine,\r\n  // Widgets\r\n  button_widget: ButtonWidget,\r\n  checkbox_widget: CheckBoxWidget,\r\n  form_widget: FormWidget,\r\n  image_button_widget: ImageButtonWidget,\r\n  image_widget: ImageWidget,\r\n  label_widget: LabelWidget,\r\n  rating_scale_widget: RatingScaleWidget,\r\n  text_input_widget: TextInputWidget,\r\n  themes: Themes,\r\n  // Plugins\r\n  advanced_delay: AdvancedDelay,\r\n  form_base: FormBase,\r\n  form_consent: FormConsent,\r\n  form_multiple_choice: FormMultipleChoice,\r\n  form_text_display: FormTextDisplay,\r\n  form_text_input: FormTextInput,\r\n  media_player_mpy: MediaPlayer,\r\n  notepad: Notepad,\r\n  repeat_cycle: RepeatCycle,\r\n  reset_feedback: ResetFeedback,\r\n  touch_response: TouchResponse\r\n}\r\n\r\nexport const constants = {\r\n  // Type of used collection mode.\r\n  PRESSES_ONLY: 1,\r\n  RELEASES_ONLY: 2,\r\n  PRESSES_AND_RELEASES: 3,\r\n\r\n  // Type of response used.\r\n  RESPONSE_NONE: 0,\r\n  RESPONSE_DURATION: 1,\r\n  RESPONSE_KEYBOARD: 2,\r\n  RESPONSE_MOUSE: 3,\r\n  RESPONSE_SOUND: 4,\r\n  RESPONSE_AUTOKEYBOARD: 5,\r\n  RESPONSE_AUTOMOUSE: 6,\r\n\r\n  // Running status of an item.\r\n  STATUS_NONE: 0,\r\n  STATUS_BUILD: 1,\r\n  STATUS_INITIALIZE: 2,\r\n  STATUS_EXECUTE: 3,\r\n  STATUS_FINALIZE: 4,\r\n\r\n  // Definition of the event loop status contstants.\r\n  TIMER_NONE: 0,\r\n  TIMER_WAIT: 1,\r\n  TIMER_EXIT: 2,\r\n  TIMER_PAUSE: 3,\r\n  TIMER_RESUME: 4,\r\n  TIMER_DONE: 5,\r\n  TIMER_BREAK: 6,\r\n  TIMER_ERROR: 7,\r\n  TIMER_FORM: 8\r\n}\r\n","import Item from '../items/item.js'\nimport Video from '../backends/video.js'\n\n/**\n * Class representing a video player item.\n * @extends Item\n */\nexport default class MediaPlayer extends Item {\n  /**\n     * Create a video player plugin item which plays videos.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script)\n\n    // Define and set the public properties.\n    this.description = 'A video player'\n\n    // Define and set the private properties.\n    this._script_executed = false\n\n    // Process the script.\n    this.from_string(script)\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    if (this._script_executed === false) {\n      // Stop the video playing.\n      this._video_player.stop()\n\n      // execute script.\n      if ((this._video_player._script !== null) && (this.vars.get('event_handler_trigger') === 'on keypress')) {\n        // Set the execute toggle.\n        this._script_executed = true\n\n        // Execute the script code.\n        this._runner._pythonParser._run(this, this._video_player._script)\n      } else {\n        // Inherited.\n        super._complete()\n      }\n    } else {\n      // Inherited.\n      super._complete()\n    }\n  }\n\n  /** Implements the update phase of an item. */\n  _update (response) {\n    // Update the video canvas.\n    this._video_player._update()\n  }\n\n  /** Implements the prepare phase of an item. */\n  prepare () {\n    // Opens the video file for playback.\n    this._video = this.experiment.pool[this.vars.get('video_src')]\n    this._video_player = new Video(this.experiment, this._video)\n\n    // Set the inline code options.\n    if (this.vars.event_handler !== '') {\n      this._video_player._script = this._runner._pythonParser._parse(this.vars.event_handler)\n    }\n    this._video_player._event_handler_always = (this.vars.event_handler_trigger === 'after every frame')\n\n    // Set the audio option.\n    this._video_player.audio = (this.vars.get('playaudio') === 'yes')\n\n    // Set the full screen option (if enabled).\n    this._video_player.full_screen = (this.vars.get('resizeVideo') === 'yes')\n\n    // Adjust the duration parameter from sound to video if defined.\n    if (this.vars.duration === 'sound') {\n      this.vars.duration = 'video'\n    }\n    this._video_player.duration = this.vars.duration\n\n    // Inherited.\n    super.prepare()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Set the onset time.\n    this.set_item_onset()\n    this.set_sri()\n\n    // Start the video player.\n    this._video_player.play()\n\n    // Start response processing.\n    this.process_response()\n  }\n}\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a notepad item.\r\n * @extends Item\r\n */\r\nexport default class Notepad extends Item {\r\n  /**\r\n     * Create a notepad plugin item which only shows some text in the console.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'A simple notepad to document your experiment. This plug-in does nothing.'\r\n\r\n    // Read the item definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Complete the current cycle.\r\n    this._complete()\r\n  }\r\n}\r\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a repeat cycle item.\r\n * @extends Item\r\n */\r\nexport default class RepeatCycle extends Item {\r\n  /**\r\n     * Create a repeat cycle item which repeat a cycle within a loop.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Optionally repeat a cycle from a loop'\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Prepare the condtion for which the repeat_cycle must fire.\r\n    const condition = this.syntax.compile_cond(this.vars.get('condition'))\r\n    // Run item only one time.\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      if (this.experiment._runner._pythonWorkspace._eval(condition) === true) {\r\n        this.experiment.vars.repeat_cycle = 1\r\n      }\r\n\r\n      // Complete the current cycle.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a reset feedback item.\r\n * @extends Item\r\n */\r\nexport default class ResetFeedback extends Item {\r\n  /**\r\n     * Create a reset feedback  item which resets the feedback values.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Resets the feedback variables, such as \"avg_rt\" and \"acc\"'\r\n\r\n    // Read the item definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Run item only one time.\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      // Run the item.\r\n      this.experiment.reset_feedback()\r\n\r\n      // Complete the current cycle.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import MouseResponse from '../items/mouse_response.js'\n\n/**\n * Class representing a reset feedback item.\n * @extends Item\n */\nexport default class TouchResponse extends MouseResponse {\n  /**\n     * Create a reset feedback  item which resets the feedback values.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script)\n\n    // Define and set the public properties.\n    this.description = 'A grid-based response item, convenient for touch screens'\n  }\n\n  /** Resets all item variables to their default value. */\n  reset () {\n    // Inherited.\n    super.reset()\n    this.vars.set('allowed_responses', null)\n\n    // Resets all item variables to their default value.\n    this.vars._ncol = 2\n    this.vars._nrow = 1\n  }\n\n  /** Implements the prepare phase of an item. */\n  prepare () {\n    // Temp hack\n    this.experiment.vars.correct = -1\n\n    // Inherited.\n    super.prepare()\n  }\n\n  /**\n     * Process a mouse click response.\n     * @param {Object} pRetval - The mouse response to process.\n     */\n  process_response_mouseclick (retval) {\n    super.process_response_mouseclick(retval)\n    // Calulate the row, column and cell.\n    this.col = Math.floor(\n      (this.experiment.vars.cursor_x + this.experiment.vars.width / 2) /\n        (this.experiment.vars.width / this.vars._ncol)\n    )\n    this.row = Math.floor(\n      (this.experiment.vars.cursor_y + this.experiment.vars.height / 2) /\n        (this.experiment.vars.height / this.vars._nrow)\n    )\n    this.cell = this.row * this.vars._ncol + this.col + 1\n    this.experiment.vars.response = this.cell\n    this.synonyms = [this.experiment.vars.get('response')]\n  }\n}\n","import {\n  constants\n} from './constants.js'\n\nimport isFunction from 'lodash/isFunction'\nimport isPlainObject from 'lodash/isPlainObject'\n\n/** Class representing a debugger. */\nexport default class Debugger {\n  /**\n   * Create a debugger which handles errors and messahes during an session.\n   * @param {Object} runner - The runner class to which the debugger belongs.\n   */\n  constructor (runner) {\n    // Create and set private properties.\n    this._runner = runner // Parent runner attached to the debugger.\n\n    // Create and set public properties.\n    this.enabled = true // Enable the debugger.\n    this.error = false // True if an error occured.\n    this.messageLog = [] // Arraty with alle log messages.\n  }\n\n  /** Initialize the debugger object class. */\n  _initialize () {\n    // Clear the log.\n    this.messageLog = []\n  }\n\n  /** Finalize the debugger object class. */\n  _finalize () {\n    // If enabled push the messages to the javascript console.\n    if (this.enabled === true) {\n      console.log(this.messageLog)\n    }\n\n    // Clear the log.\n    this.messageLog = []\n  }\n\n  /**\n   * Show a fatal error to the user and stops the running of the experiment.\n   * @param {String} errorText - The error shown to the user.\n   */\n  addError (errorText, context = null) {\n    // Set the error flag.\n    this.error = true\n\n    // Set status of the event system to break.\n    this._runner._events.state = constants.TIMER_ERROR\n\n    // Throw the exception.\n    console.error('OSWeb has stopped running due to a fatal error.')\n    console.error(errorText)\n\n    if (isPlainObject(context)) {\n      if (context.notify === true && isFunction(this._runner._onError)) {\n        const url = context.url || null\n        this._runner._onError(errorText, url)\n      }\n    }\n  }\n\n  /**\n   * Add a message to the debugger list.\n   * @param {String} message - The message to be added to the list.\n   */\n  addMessage (messageText) {\n    // Push the error message to the log.\n    this.messageLog.push(messageText)\n\n    if (this.enabled === true) {\n      console.log(messageText)\n    }\n  }\n\n  /**\n   * Mirror function for the AddMessage method.\n   * @param {String} messageText - The message to be added to the list.\n   */\n  msg (messageText) {\n    // Push the error message to the log.\n    this.addMessage(messageText)\n  }\n}\n","import {\n  isNumber\n} from 'lodash'\n\n/** Class representing a convertor. */\nexport default class Convertor {\n  /**\n   * Create a convertor which converts an osexp script to a JSON object stucture.\n   * @param {Object} runner - The runner class to which the debugger belongs.\n   */\n  constructor (runner) {\n    // Create and set private properties.\n    this.item = null // Current item to process.\n    this.runner = runner // Parent runner attached to the debugger.\n    this.variable = null // Container for global multiline variable.\n    this.variabelName = '' // Name of a global multiline variable.\n  }\n\n  /**\n   * Strip additional quotes for value token.\n   * @param {String} value - The value to check and (optional) convert.\n   * @return {String} - The converted value.\n   */\n  parseValue (value) {\n    // Strip additional quotes.\n    if ((value.length >= 4) && (value.substr(0, 1) === '\"') && (value.substr(value.length - 1, 1) === '\"')) {\n      return value.substr(1, value.length - 2)\n    } else {\n      return value\n    }\n  }\n\n  /**\n   * Process a single line within the osexp script.\n   * @param {String} line - The string line to parse.\n   */\n  parseLine (line) {\n    // Split a line into items and process them.\n    var items = line.match(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g)\n\n    // if defined process a single line.\n    if (items !== null) {\n      // Select action on first token.\n      switch (items[0]) {\n      case 'define':\n        // Process a define statement.\n        this.item = this.runner._itemStore.newItem(items[1], items[2], '')\n        break\n      case 'draw':\n        // Create the element.\n        var element = this.runner._itemStore._newElementClass(items[1], this.item, '')\n\n        // Split the properties and process them.\n        for (var i = 2; i < items.length; i++) {\n          var pair = items[i].split('=', 2)\n          element.properties[pair[0]] = pair[1]\n        }\n\n        // Add the element to the item.\n        this.item.elements.push(element)\n        break\n      case 'run':\n        if (this.item.type === 'sequence') {\n          // Process a run statement for a sequence item.\n          this.item.items.push({\n            item: items[1],\n            cond: items[2]\n          })\n        } else {\n          // Process a run statement for a loop item.\n          this.item.vars.item = items[1]\n        }\n        break\n      case 'set':\n        // Process a set statement.\n        this.item.vars[items[1]] = this.parseValue(items[2])\n        break\n      case 'setcycle':\n        // Process a setcycle statement.\n        var value = this.parseValue(items[3])\n\n        // Convert the python expression to javascript.\n        if (value[0] === '=') {\n          // Parse the python statement.\n          value = this.runner._pythonParser._prepare(value.slice(1))\n          if (value !== null) {\n            value = value.body[0]\n          }\n        } else {\n          // Check if the value is numeric\n          value = isNumber(value) ? Number(value) : value\n        }\n\n        // Set the matrix with the proper values.\n        if (this.item.orig_matrix[items[1]] === undefined) {\n          this.item.orig_matrix[items[1]] = {}\n        }\n        this.item.orig_matrix[items[1]][items[2]] = value\n        break\n      case 'widget':\n        // Remove the widget token from the list.\n        items.shift()\n\n        // Add the element to the item.\n        this.item._widgets.push(items)\n        break\n      default:\n        // check for multiline variables.\n        if ((items[0].length > 5) && (items[0].substr(0, 2) === '__') && (items[0].substr(-2) === '__')) {\n          // Start of end of the multiline variable.\n          if (items[0] === '__end__') {\n            this.item.vars[this.variableName] = this.variable\n            this.variable = null\n          } else {\n            this.variableName = items[0].substr(2, items[0].length - 4)\n            this.variable = []\n          }\n        } else {\n          if (this.variable !== null) {\n            this.variable.push(line)\n          }\n        }\n      }\n    } else {\n      if (this.variable !== null) {\n        this.variable.push('')\n      } else {\n        // Return to default level.\n        this.item = this.runner._experiment\n      }\n    }\n  }\n\n  /** Initialize the debugger object class. */\n  parseScript (script) {\n    // Set first item.\n    this.item = this.runner._experiment\n\n    // Split the script into lines.\n    if (script !== null) {\n      // Split the script into lines.\n      var lines = script.split('\\n')\n      for (var i = 0; i < lines.length; i++) {\n        // Parse a single line\n        this.parseLine(lines[i])\n      }\n    }\n  }\n}\n","import { constants } from '../system/constants.js'\r\nimport { Ticker } from 'pixi.js'\r\n\r\n/** Class representing the event system. */\r\nexport default class Events {\r\n  /** The events class controls the running of an experiment. */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._currentItem = null // The current active item.\r\n    this._keyDownEvent = null // Container for last key event.\r\n    this._keyDownHandler = null // Key down event handler.\r\n    this._keyPressMode = constants.PRESSES_ONLY // Keyboard press mode.\r\n    this._keyUpHandler = null // Key up event handler.\r\n    this._mouseDownEvent = null // Container for last mouse event.\r\n    this._mouseDownHandler = null // Mouse down event handler.\r\n    this._mouseMoveEvent = null // Container for last mouse move event.\r\n    this._mouseMoveHandler = null // Mouse move event handler.\r\n    this._mousePressMode = constants.PRESSES_ONLY // Mouse press mode.\r\n    this._mouseUpHandler = null // Mouse up event handler.\r\n    this._runner = runner // Parent runner class.\r\n    this._responseGiven = false // Valid response toggle\r\n    this._responseList = null // Items to respond on.\r\n    this._responseType = constants.RESPONSE_NONE // Set type of response (0 = none, 1 = keyboard, 2 = mouse, 3 = sound).\r\n    this._soundHasEnded = false // Sound play is finished.\r\n    this._state = constants.TIMER_NONE // Current status of the runner.\r\n    this._statePrevious = constants.TIMER_NONE // Previous state, used when pausing experiment.\r\n    this._timeHandler = null // Timing event handler.\r\n    this._timeOut = -1 // Duration before timeout occures.\r\n    this._timeStamp = -1 // Moment of update checking.\r\n    this._videoHasEnded = false // Video play is finished.\r\n\r\n    // Definition of the conversion table to convert keycodes to OpenSesame codes.\r\n    this._KEY_CODES = [\r\n      '', '', '', '', '', '', 'help', '', 'backspace', 'tab', '', '', 'clear', 'enter', 'enter_special', '', 'shift', 'ctrl', 'alt', 'pause', // 00  .. 19\r\n      'caps', '', '', '', '', '', '', 'escape', '', '', '', '', 'space', 'page up', 'page down', 'end', 'home', 'left', 'up', 'right', // 20  .. 39\r\n      'down', 'select', 'print', 'execute', 'print screen', 'insert', 'delete', '', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', // 40  .. 59\r\n      '<', '=', '>', '?', '@', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', // 60  .. 79\r\n      'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'left meta', 'right meta', 'menu', '', '', 'kp0', 'kp1', 'kp2', 'kp3', // 80  .. 99\r\n      'kp4', 'kp5', 'kp6', 'kp7', 'kp8', 'kp9', 'kp_multiply', 'kp_plus', '', 'kp_minus', 'kp_period', 'kp_divide', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', // 100 .. 119\r\n      'f9', 'f10', 'f11', 'f12', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 120 .. 139\r\n      '', '', '', '', 'numlock', 'scrollock', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 140 .. 159\r\n      '^', '!', '\"', '#', '$', '%', '&', '_', '(', ')', '*', '+', '|', '_', '{', '}', '~', '', '', '', // 160 .. 179\r\n      '', '', '', '', '', '', ';', '=', ',', '-', '.', '/', '`', '', '', '', '', '', '', '', // 180 .. 199\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '[', // 200 .. 219\r\n      '\\\\', ']', '\\'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 220 .. 239\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' // 240 .. 255\r\n    ]\r\n\r\n    // Definition of the conversion table to convert shift keycodes to OpenSesame codes.\r\n    this._KEY_SHIFTCODES = [\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'pause', // 00  .. 19\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 20  .. 39\r\n      '', '', '', '', '', '', '', '', ')', '!', '@', '#', '$', '%', '^', '&', '*', '(', '', ':', // 40  .. 59\r\n      '', '+', '', '', '', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', // 60  .. 79\r\n      'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'y', 'z', '', '', '', '', '', '', '', '', '', '', // 80  .. 99\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 100 .. 119\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 120 .. 139\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 140 .. 159\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '_', '', '', '', '', '', '', // 160 .. 179\r\n      '', '', '', '', '', '', '', '', '<', '', '>', '?', '~', '', '', '', '', '', '', '', // 180 .. 199\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '{', // 200 .. 219\r\n      '|', '}', '\"', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 220 .. 239\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' // 240 .. 255\r\n    ]\r\n  }\r\n\r\n  /** Initialize the event system. */\r\n  _initialize () {\r\n    // Create and set the keyboard event listeners.\r\n    this._keyDownHandler = this._keyDown.bind(this)\r\n    this._keyUpHandler = this._keyUp.bind(this)\r\n    window.addEventListener('keydown', this._keyDownHandler)\r\n    window.addEventListener('keyup', this._keyUpHandler)\r\n\r\n    // Create and set the mouse event listeners.\r\n    this._mouseDownHandler = this._mouseDown.bind(this)\r\n    this._mouseMoveHandler = this._mouseMove.bind(this)\r\n    this._mouseUpHandler = this._mouseUp.bind(this)\r\n    this._touchStartHandler = this._touchStart.bind(this)\r\n    this._runner._renderer.view.addEventListener('mousedown', this._mouseDownHandler)\r\n    this._runner._renderer.view.addEventListener('mousemove', this._mouseMoveHandler)\r\n    this._runner._renderer.view.addEventListener('mouseup', this._mouseUpHandler)\r\n    this._runner._renderer.view.addEventListener('touchstart', this._touchStartHandler)\r\n\r\n    // Set the current item to the experiment object.\r\n    this._currentItem = this._runner._experiment\r\n    this._state = constants.TIMER_NONE\r\n\r\n    // Create the time handler and start the experiment.\r\n    this._timeHandler = new Ticker()\r\n    this._timeHandler.add(this._time.bind(this))\r\n    this._timeHandler.start()\r\n  }\r\n\r\n  /** Finalize the event system. */\r\n  _finalize () {\r\n    // Remove the keyboard event listeners.\r\n    window.removeEventListener('keydown', this._keyDownHandler)\r\n    window.removeEventListener('keyup', this._keyUpHandler)\r\n\r\n    // Remove the mouse event listeners.\r\n    this._runner._renderer.view.removeEventListener('mousedown', this._mouseDownHandler)\r\n    this._runner._renderer.view.removeEventListener('mousemove', this._mouseMoveHandler)\r\n    this._runner._renderer.view.removeEventListener('mouseup', this._mouseUpHandler)\r\n    this._runner._renderer.view.removeEventListener('touchstart', this._touchStartHandler)\r\n\r\n    // Stop the timing event listener.\r\n    this._timeHandler.stop()\r\n    this._timeHandler.remove(this._time)\r\n\r\n    // Clear the properties.\r\n    this._currentItem = null\r\n    this._mouseDownEvent = null\r\n    this._mouseMoveEvent = null\r\n    this._responseList = null\r\n    this._timeHandler = null\r\n  }\r\n\r\n  /**\r\n     * Convert a keyboard code to a OpenSesame code (including special characters ctrl/shift/alt).\r\n     * @param {Object} event - The keyboard event to process.\r\n     * @return {String} - The converted keyboard code.\r\n     */\r\n  _convertKeyCode (event) {\r\n    // Check for special characters\r\n    var key = ''\r\n    if ((event.shiftKey === true) && (event.keyCode !== 16)) {\r\n      // Shift key pressed with other key, so convert shift keys.\r\n      key = this._KEY_SHIFTCODES[event.keyCode]\r\n    } else if ((event.shiftKey === true) && (event.keyCode === 16)) {\r\n      // Shift code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lshift' : 'rshift'\r\n    } else if ((event.ctrlKey === true) && (event.keyCode === 17)) {\r\n      // Ctrl code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lctrl' : 'rctrl'\r\n    } else if ((event.altKey === true) && (event.keyCode === 18)) {\r\n      // Alt code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lalt' : 'ralt'\r\n    } else {\r\n      // Convert standard keycode.\r\n      key = this._KEY_CODES[event.keyCode]\r\n    }\r\n\r\n    // Return function result.\r\n    return key\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving key down events.\r\n     * @param {Object} event - system keydown event.\r\n     */\r\n  _keyDown (event) {\r\n    // Store the keyboard event.\r\n    this._keyDownEvent = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time()\r\n    }\r\n\r\n    // Check for esc key to pause the experiment.\r\n    if ((event.keyCode === 27) && (this._state !== constants.TIMER_PAUSE)) {\r\n      // Set system to paused.\r\n      this._statePrevious = this._state\r\n      this._state = constants.TIMER_PAUSE\r\n\r\n      // Show the pause screen.\r\n      this._runner._screen._showPauseScreen()\r\n    } else if ((this._state === constants.TIMER_WAIT) &&\r\n      ((this._keyPressMode === constants.PRESSES_ONLY) ||\r\n      (this._keyPressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processKeyboardEvent(event, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving key up events.\r\n     * @param {Object} event - system keyup event.\r\n     */\r\n  _keyUp (event) {\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._keyPressMode === constants.RELEASES_ONLY) ||\r\n      (this._keyPressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processKeyboardEvent(event, 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Process and convert keyboard events into response objects.\r\n     * @param {Object} event - system keyboard event.\r\n     * @param {Number} keyboardState - type of keyboard event.\r\n     */\r\n  _processKeyboardEvent (event, keyboardState) {\r\n    // Create a new keyboard response object.\r\n    const keyboardResponse = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time(),\r\n      state: keyboardState,\r\n      type: constants.RESPONSE_KEYBOARD\r\n    }\r\n\r\n    // Convert response to proper keyboard token.\r\n    keyboardResponse.resp = this._convertKeyCode(event)\r\n\r\n    // Process the response to the current object.\r\n    if ((this._responseType === constants.RESPONSE_KEYBOARD) &&\r\n      ((this._responseList === null) ||\r\n      (this._responseList.indexOf(keyboardResponse.resp) >= 0))) {\r\n      // Process the current item.\r\n      if (this._currentItem !== null) {\r\n        // Process the response.\r\n        this._currentItem._update(keyboardResponse)\r\n      }\r\n\r\n      // Set the valid response given toggle.\r\n      this._responseGiven = true\r\n    }\r\n    return keyboardResponse\r\n  }\r\n\r\n  /** Prevent the right mouse context menu from showing. */\r\n  _mouseContext (event) {\r\n    // Prevent default action.\r\n    event.preventDefault()\r\n\r\n    // Return false to prevent the context menu from pushing up.\r\n    return false\r\n  }\r\n\r\n  /** Store the last mouse move event for later use. */\r\n  _mouseMove (event) {\r\n    // Store the mouse move event and its timestamp for use in the mouse class.\r\n    this._mouseMoveEvent = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time()\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for touch start events, which for now are translated to\r\n     * moudown events.\r\n     * @param {Object} event - system touchstart event.\r\n     */\r\n  _touchStart (event) {\r\n    event.button = 0\r\n    event.clientX = event.changedTouches[0].clientX\r\n    event.clientY = event.changedTouches[0].clientY\r\n    this._mouseDown(event)\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving mouse down events.\r\n     * @param {Object} event - system mousedown event.\r\n     */\r\n  _mouseDown (event) {\r\n    // Store the mouse down event and its timestamp for use in the mouse class.\r\n    this._mouseDownEvent = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time()\r\n    }\r\n\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._mousePressMode === constants.PRESSES_ONLY) || (this._mousePressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processMouseEvent(event, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving mouse up events.\r\n     * @param {Object} event - system mouseup event.\r\n     */\r\n  _mouseUp (event) {\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._mousePressMode === constants.RELEASES_ONLY) || (this._mousePressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      this._processMouseEvent(event, 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Process and convert mouse events into response objects.\r\n     * @param {Object} event - system mouse event.\r\n     * @param {Number} mouseState - type of mouse event.\r\n     */\r\n  _processMouseEvent (event, mouseState) {\r\n    // Create a mouse response object.\r\n    var mouseResponse = {\r\n      event: event,\r\n      rtTime: this._runner._experiment.clock.time(),\r\n      state: mouseState,\r\n      type: constants.RESPONSE_MOUSE\r\n    }\r\n\r\n    // Adjust mouse response.\r\n    mouseResponse.resp = String(event.button + 1)\r\n\r\n    // Process the response to the current object.\r\n    if ((this._responseType === constants.RESPONSE_MOUSE) && ((this._responseList === null) ||\r\n      (this._responseList.indexOf(mouseResponse.resp) >= 0))) {\r\n      // Process the response to the current object.\r\n      if (this._currentItem !== null) {\r\n        this._currentItem._update(mouseResponse)\r\n      }\r\n\r\n      // Set the valid response given toggle.\r\n      this._responseGiven = true\r\n    }\r\n    return mouseResponse\r\n  }\r\n\r\n  /**\r\n     * Event handler for sound event processing.\r\n     * @param {Object} event - sound end event.\r\n     */\r\n  _audioEnded (sampler) {\r\n    // If duration isequal to sound exit the sound item.\r\n    if (sampler.duration === 'sound') {\r\n      this.proceed()\r\n    }\r\n  }\r\n\r\n  /** Definition of methods for video event processing. */\r\n  _videoEnded (event) {\r\n    // If duration is set to video end respons to this.\r\n    var video = this\r\n    if (video.duration === 'video') {\r\n      video._experiment._runner._events._videoHasEnded = true\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for video play processing.\r\n     * @param {Object} event - sound end event.\r\n     */\r\n  _videoPlay (event) {\r\n  }\r\n\r\n  /**\r\n     * Event handler for experiment execution.\r\n     * @param {Object} event - system timer event.\r\n     */\r\n  _time (event) {\r\n    // Select the proper state.\r\n    switch (this._state) {\r\n    case constants.TIMER_NONE:\r\n      // Do nothing in the loop\r\n      break\r\n    case constants.TIMER_WAIT:\r\n      // Set current time stamp\r\n      this._timeStamp = this._currentItem.clock.time()\r\n\r\n      // Check if a time out occures or a valid response is given.\r\n      if (((this._timeOut === -1) && ((this._responseGiven === true) || (this._videoHasEnded === true))) ||\r\n                    ((this._timeOut > 0) && ((this._responseType === constants.RESPONSE_KEYBOARD) || (this._responseType === constants.RESPONSE_MOUSE)) && (this._responseGiven === true)) ||\r\n                    ((this._timeOut > 0) && ((this._timeStamp - this._currentItem.experiment.vars.get('time_' + this._currentItem.name)) > this._timeOut))) {\r\n        this.proceed()\r\n      } else {\r\n        // Update the current item without response.\r\n        this._currentItem._update(null)\r\n      }\r\n      break\r\n    case constants.TIMER_PAUSE:\r\n      // Do nothing in the loop\r\n      break\r\n    case constants.TIMER_RESUME:\r\n      // Do nothing in the loop\r\n      break\r\n    case constants.TIMER_BREAK:\r\n    case constants.TIMER_EXIT:\r\n      // Adjus the status.\r\n      this._state = constants.TIMER_NONE\r\n\r\n      // Exit the runner.\r\n      this._runner._finalize()\r\n      break\r\n    case constants.TIMER_FORM:\r\n      // Update the current item without response.\r\n      this._currentItem._update(null)\r\n      break\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Execute a stimulus/response wait period for a certain item.\r\n     * @param {Number} timeout - maximum time to wait for a response.\r\n     * @param {Number} responseType - type of response to wait for.\r\n     * @param {Array} responseList - list of acceptable respones.\r\n     */\r\n  _run (timeOut, responseType, responseList) {\r\n    // Set the event run|ning properties.\r\n    this._responseList = responseList\r\n    this._responseType = responseType\r\n    this._timeOut = timeOut\r\n\r\n    // Activate the event running.\r\n    this._responseGiven = false\r\n    this._soundHasEnded = false\r\n    this._state = constants.TIMER_WAIT\r\n    this._videoHasEnded = false\r\n  }\r\n\r\n  proceed () {\r\n    // Adjust the status.\r\n    this._state = constants.TIMER_NONE\r\n\r\n    // Remove the items from the general stack.\r\n    this._runner._itemStack.pop()\r\n\r\n    // Execute the post-run phase after duration is finished or response is received.\r\n    this._currentItem._complete()\r\n  }\r\n}\r\n","import { isFunction } from 'lodash'\r\n\r\n/** Class representing a parameter processor. */\r\nexport default class Parameters {\r\n  /**\r\n     * Create an session class which stores information about the client system.\r\n     * @param {Runner} runner - The runner class to which the debugger belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._itemCounter = 0 // Number of active parameter.\r\n    this._parameters = [] // All parameters to process.\r\n    this._runner = runner // Parent runner attached to the session object.\r\n  }\r\n\r\n  /** Initialize the parameters class. */\r\n  _initialize () {\r\n    // Check if subject parameter is already defined.\r\n    if (this._runner._subject !== null) {\r\n      // Set the subject number\r\n      this._runner._experiment.set_subject(this._runner._subject)\r\n\r\n      // Parameters are processed, next phase.\r\n      this._runner._screen._setupClickScreen()\r\n    } else {\r\n      // Update inroscreen.\r\n      this._runner._screen._updateIntroScreen('Retrieving input parameters.')\r\n\r\n      // Set properties if defined.\r\n      var parameter = {\r\n        dataType: 'number',\r\n        defaultValue: '0',\r\n        name: 'subject_nr',\r\n        title: 'Starting the experiment',\r\n        prompt: 'Please enter the subject number',\r\n        promptEnabled: true\r\n      }\r\n\r\n      // Add the subject parameter to the parameters list.\r\n      this._parameters.push(parameter)\r\n\r\n      // Process the Parameters.\r\n      this._processParameters()\r\n    }\r\n  }\r\n\r\n  /** Process all parameters within the parameter list. */\r\n  _processParameters () {\r\n    // Process all items for which a user input is required.\r\n    if (this._itemCounter < this._parameters.length) {\r\n      // Process a  parameter.\r\n      this._processParameter(this._parameters[this._itemCounter])\r\n    } else {\r\n      // Transfer the startup info to the context.\r\n      this._transferParameters()\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Callback function for dialog when aits OK button has been clicked.\r\n     * @param {Object} parameter - The parameter to set.\r\n     * @param {String} value - The value to set.\r\n     */\r\n  _onParamConfirm (parameter, value) {\r\n    // Get the response information\r\n    parameter.response = value\r\n\r\n    // Increase the counter.\r\n    this._itemCounter++\r\n\r\n    // Continue processing.\r\n    this._processParameters()\r\n  }\r\n\r\n  /** Callback function for dialog when its cancel button has been clicked. */\r\n  _onParamCancel () {\r\n    // Exit the runner.\r\n    this._runner._exit()\r\n  }\r\n\r\n  /**\r\n     * Process a single parameter\r\n     * @param {Object} parameter - The parameter which must be processed.\r\n     */\r\n  _processParameter (parameter) {\r\n    // Check if a user request is required.\r\n    if (parameter.promptEnabled === true) {\r\n      // Use passed function that displays a prompt. This leaves the display\r\n      // of the prompt to the library or system that implements osweb.\r\n      if (isFunction(this._runner._prompt)) {\r\n        this._runner._prompt(parameter.title, parameter.prompt,\r\n          parameter.defaultValue, parameter.dataType,\r\n          this._onParamConfirm.bind(this, parameter), this._onParamCancel.bind(this))\r\n      } else {\r\n        // Fallback to the window prompt if no function has been passed.\r\n        const result = window.prompt(parameter.prompt, parameter.defaultValue)\r\n\r\n        if (result === null) {\r\n          this._onParamCancel()\r\n        } else {\r\n          this._onParamConfirm(parameter, result)\r\n        }\r\n      }\r\n    } else {\r\n      // Assign default value to the Startup item.\r\n      parameter.response = parameter.defaultValue\r\n\r\n      // Increase the counter.\r\n      this._itemCounter++\r\n\r\n      // Continue processing.\r\n      this._processParameters()\r\n    }\r\n  }\r\n\r\n  /** Transfer the startup info items to the context. */\r\n  _transferParameters () {\r\n    // Transfer the startup info items to the context.\r\n    for (var i = 0; i < this._parameters.length; i++) {\r\n      // Additional run for subject_nr\r\n      if (this._parameters[i].name === 'subject_nr') {\r\n        this._runner._experiment.set_subject(this._parameters[i].response)\r\n      } else {\r\n        this._runner._experiment.vars.set(this._parameters[i].name,\r\n          this._parameters[i].response)\r\n      }\r\n    }\r\n\r\n    // Parameters are processed, next phase.\r\n    this._runner._screen._setupClickScreen()\r\n  }\r\n}\r\n","import { isFunction } from 'lodash'\r\nimport { Container, Sprite, Graphics, Text } from 'pixi.js'\r\nimport { VERSION_NUMBER } from '../index.js'\r\n\r\n/** Class representing a Screen. */\r\nexport default class Screen {\r\n  /**\r\n   * Create an introduction screen which handles the start of the experiment.\r\n   * @param {Object} runner - The runner class to which the screen belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the screen object.\r\n\r\n    // Set class properties.\r\n    this._active = true // If true the introduction screen is shown.\r\n    this._click = true // If true all is started with a mouse click.\r\n    this._container = null //  Container which holds the screen info.\r\n    this._exit = false // Exit toggle to prevent dialog when closing experiment.\r\n  }\r\n\r\n  screenCenter () {\r\n    return {\r\n      x: this._runner._renderer.width / 2,\r\n      y: this._runner._renderer.height / 2\r\n    }\r\n  }\r\n\r\n  /** Initialize the fullscreen mode if enabled. */\r\n  _fullScreenInit () {\r\n    // Check if fullscreen must be enabled.\r\n    if (this._runner._fullScreen === true) {\r\n      // Get the container element.\r\n      var element = this._runner._container\r\n\r\n      // Go full-screen\r\n      if (element.requestFullscreen) {\r\n        document.addEventListener('fullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('fullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.requestFullscreen()\r\n      } else if (element.webkitRequestFullscreen) {\r\n        document.addEventListener('webkitfullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('webkitfullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.webkitRequestFullscreen()\r\n      } else if (element.mozRequestFullScreen) {\r\n        document.addEventListener('mozfullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('mozfullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.mozRequestFullScreen()\r\n      } else if (element.msRequestFullscreen) {\r\n        document.addEventListener('MSFullscreenChange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('MSFullscreenError', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.msRequestFullscreen()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Finalize the fullscreen mode if if was enabled. */\r\n  _fullScreenExit () {\r\n    // Check if fullscreen must be enabled.\r\n    if (this._runner._fullScreen === true) {\r\n      // Set the exit toggle.\r\n      this._exit = true\r\n\r\n      // Exit the full screen mode.\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen()\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen()\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen()\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Event handler which responds to full-screen change. */\r\n  _fullScreenChanged () {\r\n    // Check if we are dropping out of full-screen.\r\n    if (document.fullscreenElement ||\r\n      document.webkitFullscreenElement ||\r\n      document.mozFullScreenElement ||\r\n      document.msFullscreenElement) {\r\n      // Scale the canvas\r\n      switch (this._runner._scaleMode) {\r\n      case 'noScale':\r\n        // Default mode, no scaling, canbas is centered on the screen.\r\n        this._runner._renderer.view.style.top = '0px'\r\n        this._runner._renderer.view.style.bottom = '0px'\r\n        this._runner._renderer.view.style.left = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.margin = 'auto'\r\n        this._runner._renderer.view.style.display = 'block'\r\n        this._runner._renderer.view.style.position = 'absolute'\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n        break\r\n      case 'showAll':\r\n        // Default mode, no scaling, canbas is centered on the screen.\r\n        this._runner._renderer.view.style.top = '0px'\r\n        this._runner._renderer.view.style.bottom = '0px'\r\n        this._runner._renderer.view.style.left = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.right = '0px'\r\n        this._runner._renderer.view.style.margin = 'auto'\r\n        this._runner._renderer.view.style.display = 'block'\r\n        this._runner._renderer.view.style.position = 'absolute'\r\n        if ((this._runner._container.clientWidth - this._runner._experiment.vars.width) >\r\n            (this._runner._container.clientHeight - this._runner._experiment.vars.height)) {\r\n          const ar = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n          this._runner._renderer.resize(Math.round(this._runner._experiment.vars.width * ar), this._runner._container.clientHeight)\r\n          this._runner._experiment._scale_x = Math.round(this._runner._experiment.vars.width * ar) / this._runner._experiment.vars.width\r\n          this._runner._experiment._scale_y = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n        } else {\r\n          const ar = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n          this._runner._renderer.resize(this._runner._container.clientWidth, Math.round(this._runner._experiment.vars.height * ar))\r\n          this._runner._experiment._scale_x = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n          this._runner._experiment._scale_y = Math.round(this._runner._experiment.vars.height * ar) / this._runner._experiment.vars.height\r\n        }\r\n        this._runner._experiment._currentCanvas._container.scale.x = this._runner._experiment._scale_x\r\n        this._runner._experiment._currentCanvas._container.scale.y = this._runner._experiment._scale_y\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n        break\r\n      case 'exactFit':\r\n        // Fit to the exact window size (cropping).\r\n        this._runner._experiment._scale_x = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n        this._runner._experiment._scale_y = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n\r\n        // Reize the current canvas.\r\n        this._runner._renderer.resize(this._runner._container.clientWidth, this._runner._container.clientHeight)\r\n        this._runner._experiment._currentCanvas._container.scale.x = this._runner._experiment._scale_x\r\n        this._runner._experiment._currentCanvas._container.scale.y = this._runner._experiment._scale_y\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n        break\r\n      }\r\n    } else {\r\n      // Check for exiting experiment.\r\n      if (this._exit === false) {\r\n        // Resclae to 1Fit to the exact window size (cropping).\r\n        this._runner._experiment._scale_x = 1\r\n        this._runner._experiment._scale_y = 1\r\n\r\n        // Fit to the exact window size (cropping).\r\n        this._runner._renderer.resize(this._runner._experiment.vars.width, this._runner._experiment.vars.height)\r\n        this._runner._experiment._currentCanvas._container.scale.x = 1\r\n        this._runner._experiment._currentCanvas._container.scale.y = 1\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n\r\n        // Open Sesame is running, request subject to continue of to stop.\r\n        if (isFunction(this._runner._confirm)) {\r\n          this._runner._confirm('Leaving full-screen mode, pausing experiment.',\r\n            'Please press ok the resume the experiment otherwise cancel to stop.',\r\n            this._onFullScreenConfirm.bind(this), this._onFullScreenCancel.bind(this))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Event handler which responds to full-screen change errors. */\r\n  _fullScreenError () {\r\n    // Show error message.\r\n    this._runner.debugger.addError('Could not start full-screen mode, experiment stopped.')\r\n  }\r\n\r\n  /** Event handler to respond to dialog ok conmfirmation. */\r\n  _onFullScreenConfirm () {\r\n    // Get the container element.\r\n    var element = this._runner._container\r\n    // Go full-screen\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen()\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen()\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen()\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen()\r\n    }\r\n  }\r\n\r\n  /** Event handler to respond to dialog cancel confirmation. */\r\n  _onFullScreenCancel () {\r\n    // Exit the experiment.\r\n    this._runner._finalize()\r\n  }\r\n\r\n  /** Set the introscreen elements. */\r\n  _setupIntroScreen ( logoSrc ) {\r\n    // Check if introscreen is used.\r\n    if (this._active === true) {\r\n      // Define introscreen elements.\r\n      this._introScreen = new Container()\r\n\r\n      const center = this.screenCenter()\r\n\r\n      const logoPath = (typeof logoSrc === 'undefined') ? 'img/opensesame.png' : logoSrc\r\n\r\n      const oswebLogo = Sprite.from(logoPath)\r\n      const oswebTitle = new Text('OSWeb', {\r\n        fontFamily: 'Arial',\r\n        fontSize: 26,\r\n        fill: '#FFFFFF'\r\n      })\r\n      const versionInfo = new Text(VERSION_NUMBER, {\r\n        fontFamily: 'Arial',\r\n        fontSize: 16,\r\n        fill: '#FFFFFF'\r\n      })\r\n\r\n      const copyrightText = new Text(\r\n        `Copyright Jaap Bos, Daniel Schreij & Sebastiaan Mathot, 2016 - ${(new Date()).getFullYear()}`,\r\n        {\r\n          fontFamily: 'Arial',\r\n          fontSize: 12,\r\n          fill: '#FFFFFF'\r\n        }\r\n      )\r\n\r\n      oswebLogo.width = oswebLogo.height = 150\r\n\r\n      oswebLogo.position.set(center.x - oswebLogo.width / 2, 50)\r\n      oswebTitle.position.set(center.x - oswebTitle.width / 2, 215)\r\n      versionInfo.position.set(center.x - versionInfo.width / 2, 250)\r\n      copyrightText.position.set(\r\n        center.x - copyrightText.width / 2,\r\n        center.y * 2 - copyrightText.height * 2\r\n      )\r\n\r\n      this._statusText = new Text('', {\r\n        fontFamily: 'Arial',\r\n        fontSize: 18,\r\n        fill: '#FFFFFF'\r\n      })\r\n      this._statusText.position.set(\r\n        center.x - this._statusText.width / 2,\r\n        center.y\r\n      )\r\n      this._introScreen.addChild(oswebLogo, oswebTitle,\r\n        versionInfo, copyrightText, this._statusText)\r\n\r\n      // Show the introduction screen.\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /** Check if the experiment must be clicked to start. */\r\n  _setupClickScreen () {\r\n    // Check if the experiment must be clicked to start.\r\n    if (this._click === true) {\r\n      // Update inroscreen.\r\n\r\n      const text = `\r\n    Your participation to this experiment should be anonymous.\r\n        Never provide any personal or sensitive information\r\n            (e.g. credit card or social security numbers).\r\n\r\n                    Click here with the mouse to begin.`\r\n\r\n      this._updateIntroScreen(text)\r\n\r\n      // Setup the mouse click response handler.\r\n      var clickHandler = function (event) {\r\n        // Remove the handler.\r\n        this._runner._renderer.view.removeEventListener('click', clickHandler)\r\n        this._runner._renderer.view.removeEventListener('touchstart', clickHandler)\r\n\r\n        // Finalize the introscreen elements.\r\n        this._clearIntroScreen()\r\n\r\n        // Start the task.\r\n        this._runner._initialize()\r\n      }.bind(this)\r\n\r\n      // Set the temporary mouse click.\r\n      this._runner._renderer.view.addEventListener('click', clickHandler, false)\r\n      this._runner._renderer.view.addEventListener('touchstart', clickHandler, false)\r\n    } else {\r\n      // Finalize the introscreen elements.\r\n      this._clearIntroScreen()\r\n\r\n      // Start the runner.\r\n      this._runner._initialize()\r\n    }\r\n  }\r\n\r\n  /** Clear the introscreen elements. */\r\n  _clearIntroScreen () {\r\n    // Update the introscreen elements.\r\n    if (this._active === true) {\r\n      // Clear the stage by temoving al the child elements.\r\n      for (var i = this._introScreen.children.length - 1; i >= 0; i--) {\r\n        this._introScreen.removeChild(this._introScreen.children[i])\r\n      }\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the progress bar used when loading the file pool.\r\n   * @param {Number} percentage - The percentage (0-100) of the progress bar.\r\n   */\r\n  _updateProgressBar (percentage) {\r\n    const center = this.screenCenter()\r\n\r\n    const xOuter = 200\r\n    const wOuter = 400\r\n    const hOuter = 20\r\n    const yOuter = center.y + 2 * hOuter\r\n\r\n    if (this._active === true) {\r\n      // Select the stage.\r\n      switch (percentage) {\r\n      case -1:\r\n        this._progressBarOuter = new Graphics()\r\n        this._progressBarOuter.lineStyle(1, 0xFFFFFF, 1)\r\n        this._progressBarOuter.drawRect(xOuter, yOuter, wOuter, hOuter)\r\n        this._progressBarOuter.x = 0\r\n        this._progressBarOuter.y = 0\r\n        this._progressBarInner = new Graphics()\r\n        this._progressBarInner.lineStyle(1, 0xFFFFFF, 1)\r\n        this._progressBarInner.drawRect(xOuter + 2, yOuter + 2, 1, hOuter - 4)\r\n        this._progressBarInner.x = 0\r\n        this._progressBarInner.y = 0\r\n        this._introScreen.addChild(this._progressBarInner)\r\n        this._introScreen.addChild(this._progressBarOuter)\r\n        this._runner._renderer.render(this._introScreen)\r\n        break\r\n      case 100:\r\n        this._introScreen.removeChild(this._progressBarInner)\r\n        this._introScreen.removeChild(this._progressBarOuter)\r\n        this._runner._renderer.render(this._introScreen)\r\n        break\r\n      default:\r\n        this._progressBarOuter.beginFill(0xFFFFFF)\r\n        this._progressBarOuter.drawRect(xOuter + 2, yOuter + 2, Math.round(percentage * (wOuter - 4)), hOuter - 4)\r\n        this._progressBarOuter.endFill()\r\n        this._runner._renderer.render(this._introScreen)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the introscreen elements.\r\n   * @param {String} text - The text which must be updated.\r\n   */\r\n  _updateIntroScreen (text) {\r\n    // Update the introscreen elements.\r\n    if (this._active === true) {\r\n      const center = this.screenCenter()\r\n      this._statusText.text = text\r\n      this._statusText.position.set(\r\n        center.x - this._statusText.width / 2,\r\n        center.y\r\n      )\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /** Show the pause screen. */\r\n  _showPauseScreen () {\r\n    // Open Sesame is running, request subject to continue of to stop.\r\n    if (isFunction(this._runner._confirm)) {\r\n      this._runner._confirm('Esc key pressed, pausing experiment.',\r\n        'Please press ok the resume the experiment otherwise cancel to stop.',\r\n        this._onPauseScreenConfirm.bind(this), this._onPauseScreenCancel.bind(this))\r\n    }\r\n  }\r\n\r\n  /** Event handler to respond to dialog ok conmfirmation. */\r\n  _onPauseScreenConfirm () {\r\n    // Restore the old state.\r\n    this._runner._events._state = this._runner._events._statePrevious\r\n  }\r\n\r\n  /** Event handler to respond to dialog cancel confirmation. */\r\n  _onPauseScreenCancel () {\r\n    // Exit the experiment.\r\n    this._runner._finalize()\r\n  }\r\n}\r\n","/** Class representing a client session information collector. */\r\nexport default class Session {\r\n  /**\r\n     * Create an session object which stores information about the client system.\r\n     * @param {Object} runner - The runner class to which the session belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._date = null // Date information container.\r\n    this._runner = runner // Parent runner attached to the session object.\r\n    this._session = null // Session information container.\r\n  }\r\n\r\n  /** Initialize the session. */\r\n  _initialize () {\r\n    // Update the loader text.\r\n    this._runner._screen._updateIntroScreen('Retrieving session information.')\r\n\r\n    // Get the session information.\r\n    this._getSessionInformation()\r\n  }\r\n\r\n  /** Retrieve session information from the client. */\r\n  _getSessionInformation () {\r\n    // Get the session information from the client system.\r\n    this._date = new Date()\r\n    this._session = {\r\n      browser: {\r\n        codename: navigator.appCodeName,\r\n        name: navigator.appName,\r\n        version: navigator.appVersion\r\n      },\r\n      date: {\r\n        startdate: ('0' + this._date.getDate()).slice(-2) + '-' + ('0' + this._date.getMonth()).slice(-2) + '-' + ('0' + this._date.getFullYear()).slice(-2),\r\n        starttime: ('0' + this._date.getHours()).slice(-2) + ':' + ('0' + this._date.getMinutes()).slice(-2) + ':' + ('0' + this._date.getSeconds()).slice(-2),\r\n        startdateUTC: ('0' + this._date.getUTCDate()).slice(-2) + '-' + ('0' + this._date.getUTCMonth()).slice(-2) + '-' + ('0' + this._date.getUTCFullYear()).slice(-2)\r\n      },\r\n      experiment: {\r\n        debug: 0,\r\n        parameters: 0,\r\n        pilot: 0,\r\n        taskname: 0,\r\n        taskversion: 0\r\n      },\r\n      screen: {\r\n        availableHeight: screen.availHeight,\r\n        availableWidth: screen.availWidth,\r\n        colorDepth: screen.colorDepth,\r\n        height: screen.height,\r\n        outerheight: window.outerheight,\r\n        outerwidth: window.outerwidth,\r\n        pixelDepth: screen.pixelDepth,\r\n        screenX: window.screenX,\r\n        screenY: window.screenY,\r\n        width: screen.width\r\n      },\r\n      system: {\r\n        os: navigator.platform\r\n      }\r\n    }\r\n  }\r\n}\r\n","import pako from 'pako'\nimport isFunction from 'lodash/isFunction'\nimport untar from 'js-untar'\n\n/**\n * FileStreamer makes it possible to asynchronously stream a file to another reader\n *\n * @class FileStreamer\n */\nclass FileStreamer {\n  constructor (file, chunkSize = 64 * 1024) {\n    this.file = file\n    this.offset = 0\n    this.chunkSize = chunkSize // bytes\n    this.rewind()\n  }\n\n  rewind () {\n    this.offset = 0\n  }\n\n  isEndOfFile () {\n    return this.offset >= this.getFileSize()\n  }\n\n  readBlock () {\n    const fileReader = new FileReader()\n    const blob = this.file.slice(this.offset, this.offset + this.chunkSize)\n\n    return new Promise((resolve, reject) => {\n      fileReader.onloadend = (event) => {\n        const target = (event.target)\n        if (target.error) {\n          return reject(target.error)\n        }\n\n        this.offset += target.result.byteLength\n\n        resolve({\n          data: target.result,\n          progress: Math.min(this.offset / this.file.size, 1)\n        })\n      }\n\n      fileReader.readAsArrayBuffer(blob)\n    })\n  }\n\n  getFileSize () {\n    return this.file.size\n  }\n}\n\n/**\n * Decompresses a cpmpressed experiment file\n *\n * @export\n * @param {File} zipfile The file to extract\n * @param {function} onProgress Function to be called during extraction progress. Receives proportion complete\n * @returns array of Files\n */\nexport async function decompress (zipfile, onProgress) {\n  const fs = new FileStreamer(zipfile)\n  const inflator = new pako.Inflate()\n  let block\n\n  while (!fs.isEndOfFile()) {\n    block = await fs.readBlock()\n    inflator.push(block.data, fs.isEndOfFile())\n    if (inflator.err) {\n      throw inflator.msg\n    }\n    if (isFunction(onProgress)) onProgress(block.progress)\n  }\n  return untar(inflator.result.buffer)\n}\n\n/**\n * Converts a File/Blob to a string representation\n *\n * @export\n * @param {File} inputFile The file to convert\n * @returns string\n */\nexport function readFileAsText (inputFile) {\n  const temporaryFileReader = new FileReader()\n\n  return new Promise((resolve, reject) => {\n    temporaryFileReader.onerror = () => {\n      temporaryFileReader.abort()\n      reject(new DOMException('Problem parsing input file.'))\n    }\n\n    temporaryFileReader.onload = () => {\n      resolve(temporaryFileReader.result)\n    }\n    temporaryFileReader.readAsText(inputFile)\n  })\n}\n\n/**\n * Returns current host as detected by browser\n *\n * @returns String\n */\nfunction getHost () {\n  return window.location.origin !== 'null' ? window.location.origin : 'http://nodejs.test'\n}\n\n/**\n * Checks if the passed string contains a valid URL\n *\n * @export\n * @param {String} str The string to check\n * @returns boolean\n */\nexport function parseUrl (str) {\n  try {\n    const host = getHost()\n    return new URL(str, host)\n  } catch (e) {\n    return false\n  }\n}\n","import WebFont from 'webfontloader'\r\nimport {\r\n  decompress,\r\n  readFileAsText,\r\n  parseUrl\r\n} from '../util/files'\r\nimport isString from 'lodash/isString'\r\nimport isObject from 'lodash/isObject'\r\nimport axios from 'axios'\r\n\r\n/** Class representing a information stream processor. */\r\nexport default class Transfer {\r\n  /**\r\n   * Create a transfer object used for streaming information.\r\n   * @param {Object} runner - The runner class to which the transfer belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._runner = runner // Parent runner attached to the transfer object.\r\n  }\r\n\r\n  /**\r\n   * Read an osexp file.\r\n   * @param {Object|String} source - A file object or a String containing the experiment or a download URL.\r\n   */\r\n  async _readSource (source) {\r\n    // Check type of object.\r\n    if (!isString(source) && (!isObject(source) || source.constructor !== File)) {\r\n      throw new Error('No osexp source file defined.')\r\n    }\r\n\r\n    // This var will hold the OS script after parsing\r\n    let osScript\r\n\r\n    if (source.constructor === File) {\r\n      // Source is a local file.\r\n      try {\r\n        osScript = await this._readOsexpFromFile(source)\r\n      } catch (e) {\r\n        throw new Error(`Could not read local osexp, ${e}`)\r\n      }\r\n    } else if (isString(source)) {\r\n      // Check if the source string is an URL\r\n      const uri = parseUrl(source)\r\n\r\n      if (uri !== false) {\r\n        // Attempt to download and load the remote experiment\r\n        try {\r\n          const remoteFile = await this.fetch(uri.href)\r\n          osScript = await this._readOsexpFromFile(remoteFile)\r\n        } catch (e) {\r\n          throw new Error(`Could not read remote osexp, ${e}`)\r\n        }\r\n      } else {\r\n        try {\r\n          osScript = this._processScript(source)\r\n        } catch (e) {\r\n          throw new Error(`Could not read source string, ${e}\\n\\n${source}`)\r\n        }\r\n      }\r\n    }\r\n    // Read in and generate the webfonts\r\n    await this._readWebFonts()\r\n\r\n    return osScript\r\n  }\r\n\r\n  /**\r\n   * Reads in an osexp from a string\r\n   *\r\n   * @param {File|String} osexpFile The osexp to parse, can be a string or a File containing a string\r\n   * @returns boolean\r\n   * @memberof Transfer\r\n   */\r\n  async _readExpFile (osexp) {\r\n    if ([File, Blob].includes(osexp.constructor)) {\r\n      osexp = await readFileAsText(osexp)\r\n    }\r\n    return this._processScript(osexp)\r\n  }\r\n\r\n  /**\r\n   * Reading and extracting an osexp file from a file location.\r\n   * @param {Object} file - A file object containing the experiment.\r\n   */\r\n  async _readOsexpFromFile (osexpFile) {\r\n    try {\r\n      return await this._readExpFile(osexpFile)\r\n    } catch (e) {\r\n      this._runner._debugger.addMessage(`Could not read osexp file as plain text: ${e.message}.\\nFile is probably binary`)\r\n    }\r\n    // Reading and extracting an osexp file from a file location.\r\n    const files = await decompress(\r\n      osexpFile,\r\n      (progress) => this._runner._screen._updateProgressBar(progress)\r\n    )\r\n\r\n    // Find the script in the array of extracted files. Throw an error if it isn't found.\r\n    const expFileIndex = files.findIndex((item) => item.name === 'script.opensesame')\r\n    if (expFileIndex === -1) throw new Error('Could not locate experiment script')\r\n    // Pop the script out of the file array and proccess it\r\n    const expFile = files.splice(expFileIndex, 1)[0]\r\n    const script = await this._readExpFile(expFile.blob)\r\n\r\n    // According to the zlib convention followed by the pako library we use to decompress\r\n    // the osexp file, files have a type of 0, so filter these out.\r\n    const poolFiles = files.filter(\r\n      (item) => item.type === '0'\r\n    )\r\n    // Process the file pool items\r\n    await this._processOsexpPoolItems(poolFiles)\r\n    return script\r\n  }\r\n\r\n  /**\r\n   * Reads an osexp file from a remote server, if its type is indicated to be\r\n   * 'text/plain' (opposed to being zipped)\r\n   * @param  {string} url The url at which the osexp can be found\r\n   * @return {void}\r\n   */\r\n  async fetch (url) {\r\n    const response = await axios.get(url, {\r\n      responseType: 'blob',\r\n      onDownloadProgress: (event) => {\r\n        if (event.lengthComputable) {\r\n          this._runner._screen._updateProgressBar(event.loaded / event.total)\r\n        }\r\n      }\r\n    })\r\n    let res\r\n    if (/Edge/.test(navigator.userAgent)) {\r\n      res = new Blob([response.data])\r\n      res.name = 'downloaded.osexp'\r\n    } else {\r\n      res = new File([response.data], 'downloaded.osexp')\r\n    }\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * Process an osexp script\r\n   * @param  {string} contents - The script contents\r\n   * @return {boolean} - True if script was successfully processed, false otherwise\r\n   */\r\n  _processScript (contents) {\r\n    if (contents.substr(0, 3) !== '---') {\r\n      throw new Error('Specified script file is not valid OpenSesame script')\r\n    }\r\n\r\n    // Disable the progressbar.\r\n    this._runner._screen._updateProgressBar(100)\r\n    // Set the script paramter.\r\n    // this._runner._script = contents\r\n    return contents\r\n  }\r\n\r\n  /**\r\n   * Asynchronously iterate over file pool files and generate items for them.\r\n   *\r\n   * @param {array} poolFiles The array containing file pool files\r\n   * @returns void\r\n   * @memberof Transfer\r\n   */\r\n  async _processOsexpPoolItems (poolFiles) {\r\n    // Async iterator that handles each file in the poolFiles array\r\n    const asyncIterator = {\r\n      currentIndex: 0,\r\n      next () { // All the action happens here\r\n        const currentFile = poolFiles[this.currentIndex]\r\n\r\n        // If currentFile is undefined, then the array has been depleted and all\r\n        // files have been processed. This ends the async iteration properly\r\n        if (!currentFile) {\r\n          return {\r\n            value: undefined,\r\n            done: true\r\n          }\r\n        }\r\n\r\n        // Generate the item.\r\n        const item = {\r\n          data: null,\r\n          folder: currentFile.name.match(/(.*)[/\\\\]/)[1] || '',\r\n          name: currentFile.name.replace(/^.*[\\\\/]/, '').replace(\r\n            /U\\+([0-9A-F]{4})/g, (whole, group1) => {\r\n              // Parse encoded characters back to their unicode counterparts\r\n              return String.fromCharCode(parseInt(group1, 16))\r\n            }\r\n          ),\r\n          size: currentFile.size,\r\n          type: 'undefined'\r\n        }\r\n\r\n        // Determine the file type and generate the appropriate osweb item\r\n        const ext = currentFile.name.substr(currentFile.name.lastIndexOf('.') + 1)\r\n        if (['jpg', 'jpeg', 'png', 'bmp'].includes(ext.toLowerCase())) {\r\n          // Create a new file pool mage item.\r\n          const img = new Image()\r\n          img.src = currentFile.getBlobUrl()\r\n          item.data = img\r\n          item.type = 'image'\r\n        } else if (['wav', 'ogg'].includes(ext.toLowerCase())) {\r\n          const ado = new Audio()\r\n          ado.src = currentFile.getBlobUrl()\r\n          item.data = ado\r\n          item.type = 'sound'\r\n        } else if (['ogv', 'mp4', 'm4v'].includes(ext.toLowerCase())) {\r\n          const ado = document.createElement('VIDEO')\r\n          ado.src = currentFile.getBlobUrl()\r\n          item.data = ado\r\n          item.type = 'video'\r\n        }\r\n        // Increment the counter.\r\n        this.currentIndex++\r\n\r\n        return {\r\n          value: item,\r\n          done: false\r\n        }\r\n      },\r\n      // for-await calls this on whatever it's passed, so\r\n      // iterators tend to return themselves.\r\n      [Symbol.asyncIterator] () {\r\n        return this\r\n      }\r\n    }\r\n\r\n    // Iterate over the file pool items\r\n    for await (const item of asyncIterator) {\r\n      // Add the item to the virtual pool.\r\n      this._runner._pool.add(item)\r\n\r\n      // Update the progress bar.\r\n      this._runner._screen._updateProgressBar(asyncIterator.currentIndex / poolFiles.length)\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Read in webfonts\r\n   *\r\n   * @returns Promise\r\n   * @memberof Transfer\r\n   */\r\n  async _readWebFonts () {\r\n    // Update the introscreen\r\n    this._runner._screen._updateProgressBar(100)\r\n    this._runner._screen._updateIntroScreen('Retrieving required webfonts.')\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Load the required fonts using webfont.\r\n      WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Droid Serif', 'Droid Sans Mono'],\r\n          urls: ['//fonts.googleapis.com/css?family=Droid Sans',\r\n            '//fonts.googleapis.com/css?family=Droid Serif',\r\n            '//fonts.googleapis.com/css?family=Droid Sans Mono'\r\n          ]\r\n        },\r\n        active: () => resolve(),\r\n        inactive: () => reject(new Error('Could not load webfonts'))\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Writing experiment result data to a location.\r\n   * @param {String} target - An addres to store result data.\r\n   * @param {Object} resultData - The result data itself to store.\r\n   */\r\n  _writeDataFile (target, resultData) {\r\n    // Check if the target and resultData are defined.\r\n    if ((target !== null) && (resultData !== null)) {\r\n      // Add the data as a form element.\r\n      var data = new FormData()\r\n      data.append('data', resultData.toString())\r\n\r\n      // Create the request.\r\n      var xhr = new XMLHttpRequest()\r\n      xhr.open('post', target + '?file=subject-' + this._runner._experiment.vars.subject_nr, true)\r\n\r\n      // Send the actual data.\r\n      return xhr.send(data)\r\n    }\r\n  }\r\n}\r\n","/** Class representing an item stack. */\r\nexport default class ItemStack {\r\n  /**\r\n   * Create an stack array for running items.\r\n   * @param {Object} runner - The runner to which the item stack belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._items = [] // Container for all items.\r\n    this._runner = runner // Parent runner attached to the item stack class.\r\n  }\r\n\r\n  /** Clear the entire item stack. */\r\n  clear () {\r\n    // Clears the stack.\r\n    this._items = []\r\n  }\r\n\r\n  /**\r\n   * Push a new item onto the item stack.\r\n   * @param {Object} item - The item to add to the item stack.\r\n   * @param {String} phase - The phase in which the stack exists.\r\n   */\r\n  push (item, phase) {\r\n    // Create the stack item.\r\n    const stackItem = {\r\n      item: item,\r\n      phase: phase\r\n    }\r\n\r\n    // Push the item onto the stack.\r\n    this._items.push(stackItem)\r\n  }\r\n\r\n  /**\r\n   * Pops the last item from the stack.\r\n   * @return {Object} - The last added item from the stack.\r\n   */\r\n  pop () {\r\n    // Pops the last item from the stack.\r\n    return this._items.pop()\r\n  }\r\n}\r\n","// This itemClasses variable is a temporary solution. We should think of a simpler\r\n// method of converting string names (e.g. keyboard_response) to the associated\r\n// class names (e.g. KeyboardResponse), without relying on eval.\r\nimport {\r\n  itemClasses\r\n} from '../system/constants.js'\r\n\r\n/** Class representing an item store. */\r\nexport default class ItemStore {\r\n  /**\r\n   * Create an item store for all OpenSesame items.\r\n   * @param {Object} runner - The runner to which the item store belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set the class private properties.\r\n    this._items = {} // All the unique items in the item store.\r\n    this._runner = runner // Parent runner attached to the item store.\r\n  }\r\n\r\n  /** Clear all the items in the store. */\r\n  _clean_up () {\r\n    // Clear the items.\r\n    this._items = {}\r\n  }\r\n\r\n  /**\r\n   * Checks of the classname is defined within the osweb namespace.\r\n   * @param {String} className - name of the class to check.\r\n   * @return {Boolean} - True if the class is valid within the opsweb context.\r\n   */\r\n  _isClass (className) {\r\n    // Return true if the classname is found in the item classes.\r\n    return (className in itemClasses)\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame element to a sketchpad item.\r\n   * @param {String} type -type of the element to be created.\r\n   * @param {Object} sketchpad - sketchpad item to which the item belongs.\r\n   * @param {String} script - string definition of the ites.\r\n   * @return {Object} - The item which wass created.\r\n   */\r\n  _newElementClass (type, sketchpad, string) {\r\n    // Create the element.\r\n    var element = new itemClasses[type](sketchpad, string)\r\n\r\n    // Return the element\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame item to the experiment.\r\n   * @param {String} type -type of the item to be created.\r\n   * @param {Object} experiment - experiment item to which the item belongs.\r\n   * @param {String} name - name of the item to be created.\r\n   * @param {String} script - string definition of the ites.\r\n   * @return {Object} - The item which was created.\r\n   */\r\n  _newItemClass (type, experiment, name, script) {\r\n    // Create the element.\r\n    var element = new itemClasses[type](experiment, name, script)\r\n\r\n    // Set the type of the item.\r\n    element.type = type\r\n\r\n    // Return the element\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame widget to the experiment.\r\n   * @param {String} type -type of the widget to be created.\r\n   * @param {Object} form - form to which the widget belongs.\r\n   * @param {String} variables - variabled belonging to the widget.\r\n   * @return {Object} - The widget which was created.\r\n   */\r\n  _newWidgetClass (type, form, variables) {\r\n    // Create the widget.\r\n    var widget = new itemClasses[type + '_widget'](form, variables)\r\n\r\n    // Return the element\r\n    return widget\r\n  }\r\n\r\n  /**\r\n   * Executes the prepare and the run phase of an item.\r\n   * @param {String} name - name of the item to prepare and run\r\n   * @param {String} parent - parent of the item.\r\n   */\r\n  execute (name, parent) {\r\n    // Prepare the item.\r\n    this.prepare(name, parent)\r\n    // Remove the prepare phase call of the item from the stack\r\n    this._runner._itemStack.pop()\r\n    // Run the item.\r\n    this.run(name, parent)\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the items in the store.\r\n   * @return {Array} - An array containing all the items.\r\n   */\r\n  items () {\r\n    // Create a list o keys.\r\n    var items = []\r\n    for (var key in this._items) {\r\n      items.push([key, this._items[key]])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return items\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the names of the items in the store.\r\n   * @return {Array} - An array containing all the names.\r\n   */\r\n  keys () {\r\n    // Create a list o keys.\r\n    var keys = []\r\n    for (var key in this._items) {\r\n      keys.push(key)\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return keys\r\n  }\r\n\r\n  /**\r\n   * Create a new OpenSesame item and add it to the item store.\r\n   * @param {String} type - type of item to add.\r\n   * @param {String} name - unique name of the item to add.\r\n   * @param {String} script - script containing definitions of the item.\r\n   */\r\n  newItem (type, name, script) {\r\n    // Check if the element is part of the osweb name space\r\n    if (this._isClass(type) === true) {\r\n      // Add the new item as property of items.\r\n      this._items[name] = this._newItemClass(type, this._runner._experiment, name, script)\r\n\r\n      return this._items[name]\r\n    } else {\r\n      // Unknown class definition, show error message.\r\n      this._runner._debugger.addError('The item \"' + type + '\" is not yet supported by osweb', {\r\n        notify: true,\r\n        url: 'https://osdoc.cogsci.nl/manual/osweb/#supported-functionality'\r\n      })\r\n      this._runner.exit()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes the prepare phase of an item, and updates the item stack.\r\n   * @param {String} name - name of the item to prepare.\r\n   * @param {String} parent - parent of the item.\r\n   */\r\n  prepare (name, parent) {\r\n    // Add item to the stack.\r\n    this._runner._itemStack.push(name, 'prepare')\r\n\r\n    // Prepare the item.\r\n    this._items[name]._parent = parent\r\n    this._items[name].prepare()\r\n  }\r\n\r\n  /**\r\n   * Executes the run phase of an item, and updates the item stack.\r\n   * @param {String} name - name of the item to run.\r\n   * @param {String} pParent - parent of the item.\r\n   */\r\n  run (name, parent) {\r\n    // Set the current and its parent item.\r\n    this._runner._events._currentItem = this._items[name]\r\n    this._runner._events._currentItem._parent = parent\r\n\r\n    // Executes the run phase of an item, and updates the item stack.\r\n    this._runner._itemStack.push(name, 'run')\r\n    this._items[name].run()\r\n  }\r\n\r\n  /**\r\n   * Create a valid name for an item within the OpenSesame context.\r\n   * @param {String} itemType - type of the item for which a name must be build.\r\n   * @param {String} suggestion - An suggestion how to build up the name.\r\n   * @return {String} - A valid string name for the given item.\r\n   */\r\n  valid_name (itemType, suggestion) {\r\n    // Check the optional parameters.\r\n    suggestion = (typeof suggestion === 'undefined') ? null : suggestion\r\n\r\n    let name\r\n    if (suggestion === null) {\r\n      name = 'new_' + itemType\r\n    } else {\r\n      name = this._runner._experiment.syntax.sanitize(suggestion, true, false)\r\n    }\r\n\r\n    // Create a unique name.\r\n    var i = 1\r\n    var uniqueName = name\r\n    while (Object.prototype.hasOwnProperty.call(this._items, uniqueName) === true) {\r\n      uniqueName = name + '_' + String(i)\r\n      i++\r\n    }\r\n\r\n    // Return function result\r\n    return uniqueName\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the values (items) in the store.\r\n   * @return {Array} - An array containing all the items.\r\n   */\r\n  values () {\r\n    // Create a list o keys.\r\n    var values = []\r\n    for (var key in this._items) {\r\n      values.push(this._items[key])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return values\r\n  }\r\n}\r\n","/** Class representing a file pool. */\r\nexport default class FilePoolStore {\r\n  /**\r\n   * Create a file store object for all stimuli files.\r\n   * @param {Object} runner - The runner to which the file store belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._items = [] // Container for all pool items.\r\n    this._runner = runner // Parent runner attached to the file pool.\r\n  }\r\n\r\n  /** Clear all the items in the store. */\r\n  _clean_up () {\r\n    // Clear the items.\r\n    this._items = []\r\n  }\r\n\r\n  /**\r\n   * General function for adding an item to the pool.\r\n   * @param {Object} item - The item which is added to the pool.\r\n   */\r\n  add (item, new_name) {\r\n    // Check parameter new_name.\r\n    new_name = (typeof new_name === 'undefined') ? null : new_name\r\n\r\n    // Set the new name of the item.\r\n    if (new_name !== null) {\r\n      item.name = new_name\r\n    }\r\n\r\n    // Add the item to the pool.\r\n    this._items.push(item)\r\n\r\n    // Link the item as property\r\n    this[item.name] = item\r\n  }\r\n\r\n  /**\r\n   * Should return the fallback folder bunt osweb this is not functional.\r\n   * @return {null} - always null due to the nature of osweb.\r\n   */\r\n  fallback_folder () {\r\n    // Always returns null because this function is not possible.\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the files in the store.\r\n   * @return {Array} - An array containing all the files.\r\n   */\r\n  files () {\r\n    // Create a list o keys.\r\n    var files = []\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      files.push(this._items[i])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return files\r\n  }\r\n\r\n  /**\r\n   * Renames a file in the pool folder.\r\n   * @param {String} old_path - The olod file name.\r\n   * @param {String} new_path - The new file name.\r\n   */\r\n  rename (old_path, new_path) {\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      // Check for the old_name.\r\n      if (this._items[i].name === old_path) {\r\n        // Set the new property name.\r\n        this[new_path] = this._items[i]\r\n\r\n        // Remove the old property name.\r\n        delete this[old_path]\r\n\r\n        // Set the new name.\r\n        this._items[i].name = new_path\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates and returns the total size in bytes of all thje fioles.\r\n   * @return {Number} - The size of all files in bytes.\r\n   */\r\n  size () {\r\n    // Create a list of keys.\r\n    var size = 0\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      size = size + this._items[i].size\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return size\r\n  }\r\n}\r\n","import {\r\n  isNumber,\r\n  toNumber,\r\n  isObject,\r\n  isString\r\n} from 'lodash'\r\n\r\n/** Class representing a syntax checker. */\r\nexport default class Syntax {\r\n  /**\r\n   * Create a syntax checker within OpenSesame.\r\n   * @param {Object} runner - The runner to which the syntax checker belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._runner = runner // Parent runner attached to the syntax class.\r\n    this.isNumber = isNumber // attach lodash function to class;\r\n  }\r\n\r\n  /**\r\n   * Compile a os condition for further processing.\r\n   * @param {String} cnd - The condition to compile.\r\n   * @param {Boolean} bytecode - The condition is converted to a python AST tree.\r\n   * @return {String} - The compiled condition.\r\n   */\r\n  compile_cond (cnd, bytecode) {\r\n    // Check for conditional paramters.\r\n    bytecode = (typeof bytecode === 'undefined') ? true : bytecode\r\n\r\n    if (cnd.toLowerCase() === 'always') {\r\n      return true\r\n    } else if (cnd.toLowerCase() === 'never') {\r\n      return false\r\n    } else {\r\n      if (cnd[0] === '=') {\r\n        cnd = cnd.substr(1)\r\n      } else {\r\n        cnd = this.remove_quotes(cnd)\r\n        // Scan for literals (strings, ßnumbers, etc).\r\n        cnd = cnd.replace(/(?!(?:and|or|not)\\b)(?:\".*?\"|'.*?'|\\[(?:\\w+?|=.+)\\]|\\b\\w+\\b)/g, (match, offset, string) => {\r\n          if (string[offset] === '[' && string[offset + match.length - 1] === ']') {\r\n            // Check if match is a variable.\r\n            if (string[offset - 1] === '\\\\' && string[offset - 2] !== '\\\\') {\r\n              // Check if the current match is escaped, and simpl\\w+?|=.+y return it untouched if so.\r\n              return `\"${match}\"`\r\n            }\r\n            // Check if the variable contains a Python expression\r\n            if (match[1] === '=') {\r\n              const expression = match.substring(2, match.length - 1)\r\n              const ast = this._runner._pythonParser._parse(expression)\r\n              return this._runner._pythonParser._run_statement(ast)\r\n            }\r\n\r\n            // Return the var. notation otherwise\r\n            const content = match.substring(1, match.length - 1)\r\n            return `var.${content}`\r\n          } else if (['\"', '\\''].includes(string[offset]) &&\r\n            string[offset] === string[offset + match.length - 1]) {\r\n            // Check if match is between quotes. Don't do anything then\r\n            return match\r\n          } else if (!Number.isNaN(Number(match))) {\r\n            return Number(match)\r\n          } else {\r\n            return `\"${match}\"`\r\n          }\r\n        })\r\n\r\n        // Handle operators.\r\n        cnd = cnd.replace(/([^!<>=\\-+*])(=)([^=])/g, '$1==$3')\r\n      }\r\n    }\r\n    if (bytecode === true) {\r\n      return this._runner._pythonParser._parse(cnd)\r\n    } else {\r\n      return cnd\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts a string to a float or integer if possible.\r\n   * @param {String|Number} value -The variable to convert to a number.\r\n   * @return {String|Number} - An number or float if variable could be converted, original value otherwise.\r\n   */\r\n  convert_if_numeric (value) {\r\n    var result = Number(value)\r\n    return Number.isNaN(result) ? value : result\r\n  }\r\n\r\n  /**\r\n   * Counts the quotes occuring inside the provided string.\r\n   * @param {String} line - The string line to count the quotes in.\r\n   * @return {Number} - The number of quotes counted.\r\n   */\r\n  count_quotes (line) {\r\n    var res = 0\r\n    var in_entity = false\r\n    for (var i = 0; i < line.length; i++) {\r\n      if ((line[i] === '\\\\' && !in_entity) || in_entity) { // reverse the flag\r\n        in_entity = !in_entity\r\n      } else if (line[i] === '\"' && !in_entity) { // an unescaped \"\r\n        res += 1\r\n      }\r\n    }\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * Evaluate a given text with optional variable definitions.\r\n   * @param {Boolean|Number|Object|String} txt - The text to evaluate.\r\n   * @param {Object} vars - The variables used for evaluation.\r\n   * @param {Boolean} addQuotes - The add quotes toggle.\r\n   * @return {Boolean|Number|Object|String} - The result of the evaluated text.\r\n   */\r\n  eval_text (text, vars, addQuotes = false) {\r\n    // if pTxt is an object then it is a parsed python expression.\r\n    if (isObject(text)) return this._runner._pythonParser._run_statement(text)\r\n    // if pTxt is already a number simply return it\r\n    if (isNumber(text)) return text\r\n    // Try to convert text to a number. If this succeeds return it.\r\n    if ((text !== '') && !isNaN(toNumber(text))) return toNumber(text)\r\n    text = this.escapeBrackets(text)\r\n    // First, parse the regular variables. These should be parsed recursively\r\n    // to allow for [[nested]variables].\r\n    const reNormal = /\\[(?!=)(\\w+?)\\]/g\r\n    while (text.search(reNormal) >= 0) {\r\n      text = text.replace(reNormal, (match, content, offset, string) => {\r\n        content = this.unescapeBrackets(content)\r\n        let value\r\n        try {\r\n          if ((typeof vars === 'undefined') || (vars === null) || (typeof vars[content] === 'undefined')) {\r\n            value = this._runner._experiment.vars[content]\r\n          } else {\r\n            value = vars[content]\r\n          }\r\n          // Value could still be an expression, so evaluate again\r\n          if (typeof value === 'undefined') {\r\n            throw new ReferenceError(`Variable '${content}' not present in var store`)\r\n          }\r\n          if (isString(value)) {\r\n            if (value !== '') {\r\n              value = this.eval_text(value, vars, addQuotes)\r\n            }\r\n          }\r\n        } catch (err) {\r\n          this._runner._debugger.addError(`Could not resolve variable '${content}': ${err.message}`)\r\n          throw err\r\n        }\r\n        if (addQuotes === true) {\r\n          // Temporary hack for string types.\r\n          return isString(value) ? `\"${value}\"` : value\r\n        }\r\n        return value\r\n      })\r\n    }\r\n    // Next, parse the inline-Python defintions. Those should only be parsed\r\n    // once, not recursively, because they may contain literal [brackets]\r\n    const rePython = /\\[=(.+?)\\]/g\r\n    text = text.replace(rePython, (match, content, offset, string) => {\r\n        // Check if contents of [] start with an =. In this case they should be\r\n        // evaluated as a Python statement\r\n        content = this.unescapeBrackets(content)\r\n        const ast = this._runner._pythonParser._parse(content)\r\n        return this._runner._pythonParser._run_statement(ast)\r\n    })    \r\n    // Try to convert the result to a number again. If this succeeds return it.\r\n    if (text !== '') {\r\n      const nr = toNumber(text)\r\n      if (!isNaN(nr)) return nr\r\n    }\r\n    // Check if content has additional quotes\r\n    return this.strip_slashes(this.unescapeBrackets(text))\r\n  }\r\n\r\n  /**\r\n   * Wraps and escapes a text so that it can safely be embedded in a\r\n        command string. For example:\r\n        He said: \"hi\"\r\n        would become:\r\n        \"He said: \\\"hi\\\"\"\r\n   * @param  {string} s The string to wrap\r\n   * @return {string}   The wrapped string\r\n   */\r\n  safe_wrap (s) {\r\n    // If s is a number, return untouched.\r\n    if (!isNumber(s)) {\r\n      // see if there are any non-alphanumeric characters.\r\n      // Wrap the value in quotes if so.\r\n      if (/[^a-z0-9_]/i.test(s)) {\r\n        s = '\"' + this.add_slashes(s) + '\"'\r\n      }\r\n    } else {\r\n      s = Number(s)\r\n    }\r\n    return s\r\n  }\r\n\r\n  /**\r\n   * Add escape slashes to the given string\r\n   * @param  {string} str The string to escape.\r\n   * @return {string}     The escaped string.\r\n   */\r\n  add_slashes (str) {\r\n    return str.replace(/\\\\/g, '\\\\\\\\')\r\n      // eslint-disable-next-line no-control-regex\r\n      .replace(/\\u0008/g, '\\\\b')\r\n      .replace(/\\t/g, '\\\\t')\r\n      .replace(/\\n/g, '\\\\n')\r\n      .replace(/\\f/g, '\\\\f')\r\n      .replace(/\\r/g, '\\\\r')\r\n      .replace(/'/g, '\\\\\\'')\r\n      .replace(/\"/g, '\\\\\"')\r\n  }\r\n\r\n  /**\r\n   * Strip escape slashes from the given string.\r\n   * @param {String} line - The string to strip from escape backslashes\r\n   * @return {String} - The stripped string.\r\n   */\r\n  strip_slashes (line) {\r\n    // Negative lookbehinds require ECMA2018, therefore we fall\r\n    // back to a more clunky technique\r\n    // return line.replace(/(?<!\\\\)\\\\(?=['\"\\\\])/mg, '')\r\n    return line.replace(/\\\\(?=['\"])/mg, '').replace(/\\\\\\\\/mg, '\\\\')\r\n  }\r\n  \r\n  /**\r\n   * Removes tab indentation from a script, if all lines are indented by a\r\n   * single tab.\r\n   * @param {String} script - A script\r\n   * @return {String} - A dedented script\r\n   */\r\n  dedent (script) {\r\n    const lines = script.split('\\n')\r\n    let dedented = []\r\n    for (const line of lines) {\r\n      if (line[0] !== '\\t') {\r\n        return script\r\n      }\r\n      dedented.push(line.slice(1))\r\n    }\r\n    return dedented.join('\\n')\r\n  }\r\n  \r\n  /**\r\n   * Extracts all multineline variable definitions from an OpenSesame script\r\n   * @param {String} script - The OpenSesame script of an item\r\n   * @return {Array} - An array of key, value mappings\r\n   */\r\n  parse_multiline_vars (script) {\r\n    const pattern = /__(\\w+)__\\n(.*?)\\n__end__/gms\r\n    let match\r\n    let vars = []\r\n    while ((match = pattern.exec(script)) !== null) {\r\n      vars[match[1]] = match[2]\r\n    }\r\n    return vars\r\n  }\r\n\r\n  /**\r\n   * Parses an instruction line of OpenSesame script\r\n   * @param {String} line - The line to parse\r\n   * @return {Array} - An array with command, list of arguments and an object with keyword arguments.\r\n   */\r\n  parse_cmd (line) {\r\n    // Check if quoted strings are properly closed.\r\n    if (this.count_quotes(line) % 2 !== 0) {\r\n      // Unequal number of quotes detected. Can't be right.\r\n      this._runner._debugger.addError('Invalid script definition, parsing error: ' + \" '\" + line + \"'\")\r\n    }\r\n\r\n    // Split the string line.\r\n    var tokens = this.split(line)\r\n    var cmd = tokens.shift()\r\n    var args = []\r\n    var kwargs = {}\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n      var value = tokens[i]\r\n      // Monster regex, splits into key/value pair.\r\n      let parsed = value.split(/(?:(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"))|(?:(\\w+)=(?:(?:(-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)|(\\w+))|(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")))/gm).filter(Boolean)\r\n      // parsed will have length 1 if the variable has no keyword, and will be\r\n      // of length 2 (split over the = symbol) if the variable had a keyword\r\n      if (parsed.length < 2) {\r\n        args.push(this.convert_if_numeric(this.sanitize(parsed[0])))\r\n      } else {\r\n        kwargs[parsed[0]] = this.convert_if_numeric(this.sanitize(parsed[1]))\r\n      }\r\n    }\r\n    return [cmd, args, kwargs]\r\n  }\r\n\r\n  create_cmd (cmd, args, kwargs) {\r\n    var result = cmd\r\n    if (typeof (args) !== 'undefined' && args instanceof Array && args.length > 0) {\r\n      for (var i = 0; i < args.length; i++) {\r\n        result += ' ' + this.safe_wrap(args[i])\r\n      }\r\n    }\r\n    if (typeof (kwargs) !== 'undefined' && args instanceof Object) {\r\n      for (var key in kwargs) {\r\n        result += ' ' + key + '=' + this.safe_wrap(kwargs[key])\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Remove additional quotes from a string line.\r\n   * @param {String} line - The string width additional quotes.\r\n   * @return {String} - Updated string.\r\n   */\r\n  remove_quotes (line) {\r\n    if (line === '\"\"') {\r\n      return ''\r\n    } else if ((line[0] === '\"') && (line[line.length - 1] === '\"')) {\r\n      return line.slice(1, line.length - 1)\r\n    } else if ((line[0] === \"'\") && (line[line.length - 1] === \"'\")) {\r\n      return line.slice(1, line.length - 1)\r\n    } else {\r\n      return line\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove invalid characters (notably quotes) from the string.\r\n   * @param {String} line - The string to restrecut.\r\n   * @param {Boolean} strict - If true use strict conversion (not implemented yet).\r\n   * @param {Boolean} allowVars -If true allow variable definitions in the string (not implemented yet).\r\n   * @return {String} - The restructured string.\r\n   */\r\n  sanitize (line, strict, allowVars) {\r\n    // Replace quotes.\r\n    line = line.replace(/^\"(.+(?=\"$))\"$/, '$1')\r\n\r\n    // Replace slashes and return result.\r\n    return this.strip_slashes(line)\r\n  }\r\n\r\n  /**\r\n   * Return an array with tokens ignoring whitespaces within.\r\n   * @param {String} line - line the line to split in tokens\r\n   * @return {Array} - The list of tokens\r\n   */\r\n  split (line) {\r\n    var result = line.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g)\r\n    return (result !== null) ? result : []\r\n  }\r\n\r\n  /**\r\n   * Replaces all escaped brackets by a placeholder string of the format\r\n   * `%%OPEN:1:%%`\r\n   * @param {String} text - The text to escape.\r\n   * @return {String} - The escaped text.\r\n   */\r\n  escapeBrackets (text) {\r\n    const result = text.replace(/\\\\+[[\\]]/g, (match, content, offset, str) => {\r\n      const NBrackets = match.length - 1\r\n      if (NBrackets % 2 === 1) {\r\n        const chartype = match[match.length - 1] === '[' ? 'OPEN' : 'CLOSE'\r\n        return `%%${chartype}:${NBrackets}:%%`\r\n      }\r\n      return match\r\n    })\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Replaces all placeholder strings by escaped brackets.\r\n   * `%%OPEN:1:%%`\r\n   * @param {String} text - The text to unescape.\r\n   * @return {String} - The unescaped text.\r\n   */\r\n  unescapeBrackets (text) {\r\n    const result = text.replace(/%%(OPEN|CLOSE):\\d+:%%/g, (match, content, offset, str) => {\r\n      const chartype = match.substr(2, 4) === 'OPEN' ? '[' : ']'\r\n      const i1 = match.indexOf(':') + 1\r\n      const i2 = match.lastIndexOf(':')\r\n      const nBrackets = parseInt(match.substr(i1, i2 - i1))\r\n      return Array(nBrackets).join('\\\\') + chartype\r\n    })\r\n    return result\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\n\r\n/** Class implementing a python math library. */\r\nexport default class PythonMath {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n\r\n    // Set class properties.\r\n    this.e = Math.E\r\n    this.pi = Math.PI\r\n  }\r\n\r\n  /** Initialization phase of the python_math class. */\r\n  _initialize () {\r\n    // Insert math library methods into the python interpreter.\r\n    filbert.pythonRuntime.imports.math = {}\r\n    filbert.pythonRuntime.imports.math.ceil = this.ceil\r\n    filbert.pythonRuntime.imports.math.copysign = this.copysign\r\n    filbert.pythonRuntime.imports.math.fabs = this.fabs\r\n    filbert.pythonRuntime.imports.math.factorial = this.factorial\r\n    filbert.pythonRuntime.imports.math.floor = this.floor\r\n    filbert.pythonRuntime.imports.math.fmod = this.fmod\r\n    filbert.pythonRuntime.imports.math.frexp = this.frexp\r\n    filbert.pythonRuntime.imports.math.fsum = this.fsum\r\n    filbert.pythonRuntime.imports.math.acos = this.acos\r\n    filbert.pythonRuntime.imports.math.asin = this.asin\r\n    filbert.pythonRuntime.imports.math.atan = this.atan\r\n    filbert.pythonRuntime.imports.math.atan2 = this.atan2\r\n    filbert.pythonRuntime.imports.math.cos = this.cos\r\n    filbert.pythonRuntime.imports.math.hypot = this.hypot\r\n    filbert.pythonRuntime.imports.math.sin = this.sin\r\n    filbert.pythonRuntime.imports.math.tan = this.tan\r\n    filbert.pythonRuntime.imports.math.e = this.e\r\n    filbert.pythonRuntime.imports.math.pi = this.pi\r\n  }\r\n\r\n  /** Import 'ceil' function for osweb script. */\r\n  ceil (x) {\r\n  }\r\n\r\n  /** Import 'copysign' function for osweb script. */\r\n  copysign (x, y) {\r\n  }\r\n\r\n  /** Import 'fabs' function for osweb script. */\r\n  fabs (x) {\r\n  }\r\n\r\n  /** Import 'factorial' function for osweb script. */\r\n  factorial (x) {\r\n  }\r\n\r\n  /** Import 'floor' function for osweb script. */\r\n  floor (x) {\r\n    return Math.floor(x)\r\n  }\r\n\r\n  /** Import 'fmod' function for osweb script. */\r\n  fmod (x, y) {\r\n  }\r\n\r\n  /** Import 'frexp' function for osweb script. */\r\n  frexp (x) {\r\n  }\r\n\r\n  /** Import 'fsum' function for osweb script. */\r\n  fsum (iterable) {\r\n  }\r\n\r\n  /** Import 'acos' function for osweb script. */\r\n  acos (x) {\r\n    return Math.acos(x)\r\n  }\r\n\r\n  /** Import 'asin' function for osweb script. */\r\n  asin (x) {\r\n    return Math.asin(x)\r\n  }\r\n\r\n  /** Import 'atan' function for osweb script. */\r\n  atan (x) {\r\n    return Math.atan(x)\r\n  }\r\n\r\n  /** Import 'atan2' function for osweb script. */\r\n  atan2 (y, x) {\r\n    return Math.atan2(y, x)\r\n  }\r\n\r\n  /** Import 'cos' function for osweb script. */\r\n  cos (x) {\r\n    return Math.cos(x)\r\n  }\r\n\r\n  /** Import 'hypot' function for osweb script. */\r\n  hypot (x, y) {\r\n  }\r\n\r\n  /** Import 'sin' function for osweb script. */\r\n  sin (x) {\r\n    return Math.sin(x)\r\n  }\r\n\r\n  /** Import 'tan' function for osweb script. */\r\n  tan (x) {\r\n    return Math.tan(x)\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\nimport Canvas from '../backends/canvas.js'\r\n\r\n/** Class implementing a python opensesame library. */\r\nexport default class PythonOpenSesame {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n  }\r\n\r\n  /** Initialization phase of the python_library class. */\r\n  _initialize () {\r\n    this._objects = {}\r\n\r\n    // Insert clock class into the python interpreter.\r\n    filbert.pythonRuntime.imports.clock = {}\r\n    filbert.pythonRuntime.imports.clock.sleep = this._runner._experiment.clock.sleep\r\n    filbert.pythonRuntime.imports.clock.time = this._runner._experiment.clock.time\r\n\r\n    // Insert log class into the python interpreter.\r\n    filbert.pythonRuntime.imports.log = {}\r\n    filbert.pythonRuntime.imports.log.close = this._runner._experiment._log.close\r\n    filbert.pythonRuntime.imports.log.open = this._runner._experiment._log.open\r\n    filbert.pythonRuntime.imports.log.write = this._runner._experiment._log.write\r\n    filbert.pythonRuntime.imports.log.write_vars = this._runner._experiment._log.write_vars\r\n\r\n    // Insert var class into the python interpreter.\r\n    filbert.pythonRuntime.imports.var = this._runner._experiment.vars\r\n    filbert.pythonRuntime.imports.var.get = this._runner._experiment.vars.get\r\n    filbert.pythonRuntime.imports.var.has = this._runner._experiment.vars.has\r\n    filbert.pythonRuntime.imports.var.set = this._runner._experiment.vars.set\r\n    filbert.pythonRuntime.imports.var.unset = this._runner._experiment.vars.unset\r\n\r\n    // Insert general opensesame methods into the python interpreter.\r\n    filbert.pythonRuntime.functions.reset_feedback = this._runner._experiment.reset_feedback\r\n    filbert.pythonRuntime.functions.set_subject_nr = this._runner._experiment.set_subject\r\n    filbert.pythonRuntime.functions.canvas = this.canvas\r\n    filbert.pythonRuntime.functions.copy_sketchpad = this.copy_sketchpad\r\n    filbert.pythonRuntime.functions.keyboard = this.keyboard\r\n    filbert.pythonRuntime.functions.mouse = this.mouse\r\n    filbert.pythonRuntime.functions.pause = this.pause\r\n    filbert.pythonRuntime.functions.set_subject_nr = this.set_subject_nr\r\n    filbert.pythonRuntime.functions.sometimes = this.sometimes\r\n    filbert.pythonRuntime.functions.synth = this.synth\r\n    filbert.pythonRuntime.functions.xy_circle = this.xy_circle\r\n    filbert.pythonRuntime.functions.xy_distance = this.xy_distance\r\n    filbert.pythonRuntime.functions.xy_from_polar = this.xy_from_polar\r\n    filbert.pythonRuntime.functions.xy_grid = this.xy_grid\r\n    filbert.pythonRuntime.functions.xy_random = this.xy_random\r\n    filbert.pythonRuntime.functions.xy_to_polar = this.xy_to_polar\r\n  }\r\n\r\n  /** Import 'canvas' function for osweb script. */\r\n  canvas (auto_prepare, style_args) {\r\n    return new Canvas(this._runner._experiment, auto_prepare, style_args)\r\n  }\r\n\r\n  /** Import 'copy_sketchpad' function for osweb script. */\r\n  copy_sketchpad (name) {\r\n  }\r\n\r\n  /** Import 'keyboard' function for osweb script. */\r\n  keyboard (resp_args) {\r\n  }\r\n\r\n  /** Import 'mouse' function for osweb script. */\r\n  mouse (resp_args) {\r\n  }\r\n\r\n  /** Import 'pause' function for osweb script. */\r\n  pause (test) {\r\n  }\r\n\r\n  /** Import 'sampler' function for osweb script. */\r\n  sampler (src, playback_args) {\r\n  }\r\n\r\n  /** Import 'set_response' function for osweb script. */\r\n  set_response (response, response_time, correct) {\r\n  }\r\n\r\n  /** Import 'sometimes' function for osweb script. */\r\n  sometimes (p) {\r\n  }\r\n\r\n  /** Import 'synth' function for osweb script. */\r\n  synth (osc, freq, length, attack, decay) {\r\n  }\r\n\r\n  /** Import 'xy_circle' function for osweb script. */\r\n  xy_circle (n, rho, phi0, pole) {\r\n  }\r\n\r\n  /** Import 'xy_distance' function for osweb script. */\r\n  xy_distance (x1, y1, x2, y2) {\r\n  }\r\n\r\n  /** Import 'xy_from_polar' function for osweb script. */\r\n  xy_from_polar (rho, phi, pole) {\r\n  }\r\n\r\n  /** Import 'xy_grid' function for osweb script. */\r\n  xy_grid (n, spacing, pole) {\r\n  }\r\n\r\n  /** Import 'xy_random' function for osweb script. */\r\n  xy_random (n, width, height, min_dist, pole) {\r\n  }\r\n\r\n  /** Import 'xy_to_polar' function for osweb script. */\r\n  xy_to_polar (x, y, pole) {\r\n  }\r\n}\r\n","import filbert from 'filbert'\n\n/** Class implementing a python random library. */\nexport default class PythonRandom {\n  /**\n     * Create a python AST runner.\n     * @param {Object} runner - The runner to which the library belongs.\n     */\n  constructor (runner) {\n    // Set class parameter properties.\n    this._runner = runner // Parent runner attached to the library.\n  }\n\n  /** Initialization phase of the python_library class. */\n  _initialize () {\n    // Insert math library methods into the python interpreter.\n    filbert.pythonRuntime.imports.random = {}\n    filbert.pythonRuntime.imports.random.random = this.random\n    filbert.pythonRuntime.imports.random.shuffle = this.shuffle\n  }\n\n  /** Import 'Random' function for osweb script. */\n  random () {\n    return Math.random()\n  }\n\n  /** Import 'Shuffle' function for osweb script. */\n  shuffle (x, random) {\n    // Fisher-Yates (aka Knuth) Shuffle.\n    var currentIndex = x.length; var temporaryValue; var randomIndex\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = x[currentIndex]\n      x[currentIndex] = x[randomIndex]\n      x[randomIndex] = temporaryValue\n    }\n    return x\n  }\n}\n","/** Class implementing a python string library. */\r\nexport default class PythonString {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n  }\r\n\r\n  /** Initialization phase of the python_library class. */\r\n  _initialize () {\r\n  }\r\n\r\n  /** Import 'capitalize' function for osweb script. */\r\n  capitalize () {\r\n  }\r\n\r\n  /** Import 'center' function for osweb script. */\r\n  center (width, fillchar) {\r\n  }\r\n\r\n  /** Import 'upper' function for osweb script. */\r\n  upper () {\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\nimport PythonMath from './python_math.js'\r\nimport PythonOpenSesame from './python_opensesame.js'\r\nimport PythonRandom from './python_random.js'\r\nimport PythonString from './python_string.js'\r\nimport toNumber from 'lodash/toNumber'\r\n\r\n/** Class implementing a python AST interpreter. */\r\nexport default class PythonParser {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the AST object belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the AST object.\r\n\r\n    // Set class properties.\r\n    this.python_math = new PythonMath(this._runner)\r\n    this.python_opensesame = new PythonOpenSesame(this._runner)\r\n    this.python_random = new PythonRandom(this._runner)\r\n    this.python_string = new PythonString(this._runner)\r\n\r\n    // Definition of private properties.\r\n    this._classes = {} // Accessible classes within the script code.\r\n    this._function_stack = [] // Function call stack.\r\n    this._global_return_value = null // Global return value for blocking calls.\r\n    this._inline_script = null // Parent inline_script item.\r\n    this._node = null // Current active node.\r\n    this._onConsole = null\r\n    this._stack = 0 // Stack counter (hack to precent stack overflow).\r\n    this._statement = null // process one statement or an script.\r\n    this._status = 0 // Status of the walker.\r\n    this._variables = {} // Object containing all global objects and variables.\r\n  }\r\n\r\n  /** Initialization phase of the python class. */\r\n  _initialize () {\r\n    // Set the python variable connections with opensesame.\r\n    this._variables.clock = this._runner._experiment.clock\r\n    this._variables.exp = this._runner._experiment\r\n    this._variables.items = this._runner._itemStore\r\n    this._variables.pool = this._runner._pool\r\n    this._variables.var = this._runner._experiment.vars\r\n\r\n    // Set the console handler.\r\n    if (this._runner._onConsole !== null) {\r\n      this._onConsole = this._runner._onConsole\r\n    }\r\n\r\n    // Initialize internal libraries to the interpreter.\r\n    this.python_math._initialize()\r\n    this.python_opensesame._initialize()\r\n    this.python_random._initialize()\r\n    this.python_string._initialize()\r\n  }\r\n\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {String} script - Parse a python script using the filbert library.\r\n     */\r\n  _parse (script) {\r\n    // Check if the script exists.\r\n    if (script !== '\"\"') {\r\n      var locations = false\r\n      var parseFn = filbert.parse\r\n      var ranges = false\r\n\r\n      // Try to parse the script.\r\n      try {\r\n        var code = script\r\n        var ast = parseFn(code, {\r\n          locations: locations,\r\n          ranges: ranges\r\n        })\r\n        return ast\r\n      } catch (e) {\r\n        this._runner._debugger.addError('Script parsing error: ' + e.message)\r\n        return null\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get the context part of a identifier (before the dot '.').\r\n     * @param {String} identifier - Full name of the identifier.\r\n     */\r\n  _get_context (identifier) {\r\n    // Split the identifer\r\n    var items = identifier.value.split('.')\r\n\r\n    if ((items[0] === '__pythonRuntime') && (items[1] === 'imports')) {\r\n      return this._variables[items[2]]\r\n    } else {\r\n      // Return the object context\r\n      if (this._variables[items[0]] !== undefined) {\r\n        return this._variables[items[0]]\r\n      } else {\r\n        return window[items[0]]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get an element form a library of the variable container.\r\n     * @param {String} element - Full name of the element to retrieve.\r\n     * @return {Object} - The given element found in the context.\r\n     */\r\n  _get_element (element) {\r\n    // Split the identifier name space.\r\n    var items = element.value.split('.')\r\n\r\n    // Check if the identifier is part of the internal scope.\r\n    if (items[0] === '__pythonRuntime') {\r\n      // Check if the identifier is part of the import scope.\r\n      if (items[1] === 'imports') {\r\n        var import_lib = filbert.pythonRuntime.imports[items[2]]\r\n        const value = import_lib[items[3]]\r\n        // Attempt to convert the value to a number,\r\n        // if this fails return the original value\r\n        return isNaN(toNumber(value)) ? value : toNumber(value)\r\n      } else {\r\n        var default_lib = filbert.pythonRuntime[items[1]]\r\n        return default_lib[items[2]]\r\n      }\r\n    } else {\r\n      // No internal scope, check if it is defined in the global scope\r\n      if (this._variables[items[0]] !== undefined) {\r\n        if (items.length === 1) {\r\n          return this._variables[items[0]]\r\n        } else {\r\n          return this._variables[items[0]][items[1]]\r\n        }\r\n      } else {\r\n        if (window[items[0]] !== undefined) {\r\n          if (items.length === 1) {\r\n            return window[items[0]]\r\n          } else {\r\n            return window[items[0]][items[1]]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get the value of an element form a library of the variable container.\r\n     * @param {String} element - Full name of the element to retrieve.\r\n     * @return {Boolean|Number|Object|String} - The value of the given element.\r\n     */\r\n  _get_element_value (element) {\r\n    switch (element.type) {\r\n    case 'identifier':\r\n      // Split the identifier name space.\r\n      var items = element.value.split('.')\r\n\r\n      // Set the element value in the global scope.\r\n      if (items.length === 1) {\r\n        if (this._variables[items[0]] !== undefined) {\r\n          return this._variables[items[0]]\r\n        } else {\r\n          return window[items[0]]\r\n        }\r\n      } else {\r\n        if (items[0].indexOf('__filbertRight') !== -1) {\r\n          if (items[1].indexOf('__filbertIndex') !== -1) {\r\n            var container = this._variables[items[0]]\r\n            var index = this._variables[items[1]]\r\n            return container[index]\r\n          } else {\r\n            if (this._variables[items[0]] !== undefined) {\r\n              return this._variables[items[0]][items[1]]\r\n            } else {\r\n              return window[items[0]][items[1]]\r\n            }\r\n          }\r\n        } else if (items[0] === '__pythonRuntime') {\r\n          if (items[1] === 'imports') {\r\n            const import_lib = filbert.pythonRuntime.imports[items[2]]\r\n            const value = import_lib[items[3]]\r\n            // Attempt to convert the value to a number,\r\n            // if this fails return the original value\r\n            return isNaN(toNumber(value)) ? value : toNumber(value)\r\n          } else {\r\n            var default_lib = filbert.pythonRuntime[items[1]]\r\n            return default_lib[items[2]]\r\n          }\r\n        } else {\r\n          if (this._variables[items[0]] !== undefined) {\r\n            return this._variables[items[0]][items[1]]\r\n          } else {\r\n            return window[items[0]][items[1]]\r\n          }\r\n        }\r\n      }\r\n    case 'literal':\r\n      // return the value of the literal.\r\n      return element.value\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set the value of an element.\r\n     * @param {String} element - Full name of the element to set.\r\n     * @param {Boolean|Number|Object|String} value - The value for the given element.\r\n     */\r\n  _set_element_value (element, value) {\r\n    // Split the identifier name space.\r\n    var items = element.value.split('.')\r\n\r\n    // Set the element value in the global scope.\r\n    if (items.length === 1) {\r\n      if (window[items[0]] !== undefined) {\r\n        window[items[0]] = value\r\n      } else {\r\n        this._variables[items[0]] = value\r\n      }\r\n    } else {\r\n      if (window[items[0]] !== undefined) {\r\n        window[items[0]][items[1]] = value\r\n      } else {\r\n        this._variables[items[0]][items[1]] = value\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set the given node to the current node.\r\n     * @param {Object} node - The node to set as current node.\r\n     */\r\n  _set_node (node) {\r\n    // Set the current node as the parent node\r\n    node.parent = this._node\r\n\r\n    // Set the new node as the current node.\r\n    this._node = node\r\n  }\r\n\r\n  /**\r\n     * Set the return value of a node.\r\n     * @param {Boolean|Number|Object|String} value - The return value for the processed node.\r\n     */\r\n  _set_return_value (value) {\r\n    // Create or acces the return_values array.\r\n    this._node.parent.return_values = (typeof this._node.parent.return_values === 'undefined') ? [] : this._node.parent.return_values\r\n\r\n    // Push the value.\r\n    this._node.parent.return_values.push(value)\r\n  }\r\n\r\n  /** Process an AST array expression. */\r\n  _array_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.elements.length) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.elements[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Redefine the return values.\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        this._node.return_values[i] = this._get_element_value(this._node.return_values[i])\r\n      }\r\n      var return_value = { type: 'literal', value: this._node.return_values }\r\n\r\n      // Set the return value.\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST assignment expression. */\r\n  _assignment_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // process id.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process init.\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // define variables\r\n      var tmp_value\r\n\r\n      // Select binary operator.\r\n      switch (this._node.operator) {\r\n      case '=':\r\n        // Process the init value.\r\n        this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      case '-=':\r\n        tmp_value = this._get_element_value(this._node.return_values[0])\r\n        this._set_element_value(this._node.return_values[0], tmp_value - this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      case '/=':\r\n        tmp_value = this._get_element_value(this._node.return_values[0])\r\n        this._set_element_value(this._node.return_values[0], tmp_value / this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      case '%=':\r\n        tmp_value = this._get_element_value(this._node.return_values[0])\r\n        this._set_element_value(this._node.return_values[0], tmp_value % this._get_element_value(this._node.return_values[1]))\r\n        break\r\n      }\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST binary expression. */\r\n  _binary_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process property\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // define variables.\r\n      var left = this._get_element_value(this._node.return_values[0])\r\n      var right = this._get_element_value(this._node.return_values[1])\r\n      var return_value = { type: 'literal' }\r\n\r\n      // Select binary operator.\r\n      switch (this._node.operator) {\r\n      case '-':\r\n        return_value.value = left - right\r\n        break\r\n      case '/':\r\n        return_value.value = left / right\r\n        break\r\n      case '==':\r\n        return_value.value = (left === right)\r\n        break\r\n      case '!=':\r\n        return_value.value = (left !== right)\r\n        break\r\n      case '>':\r\n        return_value.value = (left > right)\r\n        break\r\n      case '<':\r\n        return_value.value = (left < right)\r\n        break\r\n      case '>=':\r\n        return_value.value = (left >= right)\r\n        break\r\n      case '<=':\r\n        return_value.value = (left <= right)\r\n        break\r\n      case '%':\r\n        if ((typeof left === 'number') && (typeof right === 'number')) {\r\n          return_value.value = left % right\r\n        } else {\r\n          return_value.value = left.replace(/%s/g, right)\r\n        }\r\n        break\r\n      case 'instanceof':\r\n        return_value.value = left instanceof right\r\n        break\r\n      }\r\n\r\n      // Set the return value.\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST block statement. */\r\n  _block_statement () {\r\n    // Initialize node specific properties.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if ((this._node.index < this._node.body.length) && (this._node.break === false)) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.body[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Reset node index and return to the parent node.\r\n      if (this._node.break === true) {\r\n        this._node.break = false\r\n        this._node.parent.break = true\r\n      }\r\n\r\n      this._node.index = 0\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST break statement. */\r\n  _break_statement () {\r\n    // Set break flag for parent element.\r\n    this._node.parent.break = true\r\n\r\n    // Return to the parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST call expression. */\r\n  _call_expression () {\r\n    // Initialize status properties.\r\n    this._node.arguments = (typeof this._node.arguments === 'undefined') ? [] : this._node.arguments\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process arguments and caller.\r\n      if (this._node.index < this._node.arguments.length) {\r\n        // Set current node to next node in list.\r\n        this._node.index++\r\n        this._set_node(this._node.arguments[this._node.index - 1])\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Set parent node.\r\n        this._node.status = 1\r\n        this._set_node(this._node.callee)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 1:\r\n      // Get the first return value, which is the name of the caller element.\r\n      var return_value = this._node.return_values.pop()\r\n\r\n      // Get the arguments used on the caller element.\r\n      var tmp_arguments = []\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        tmp_arguments.push(this._get_element_value(this._node.return_values[i]))\r\n      }\r\n\r\n      var caller = this._get_element(return_value)\r\n      var context = this._get_context(return_value)\r\n\r\n      if ((return_value.value === 'sleep') || (return_value.value === '__pythonRuntime.imports.clock.sleep')) {\r\n        // Adjust the status to special.\r\n        this._node.status = 2\r\n\r\n        // Check the context.\r\n        if (typeof context === 'undefined') {\r\n          context = this\r\n        }\r\n\r\n        // Execute the blocking call.\r\n        caller.apply(context, tmp_arguments)\r\n      } else {\r\n        // Check the context.\r\n        if (typeof context === 'undefined') {\r\n          context = this\r\n        }\r\n\r\n        // Execute the call, check first for internal function call.\r\n        if (this._node.callee.type === 'FunctionExpression') {\r\n          return_value = { type: 'literal', value: caller }\r\n        } else {\r\n          return_value = { type: 'literal', value: caller.apply(context, tmp_arguments) }\r\n        }\r\n\r\n        // Set the return value.\r\n        this._set_return_value(return_value)\r\n\r\n        // Reset node index and return to the parent node.\r\n        this._node.index = 0\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 2:\r\n      // Special state used when calling a blocking method (sleep, clock.sleep, keyboard.get_key(), mouse.get_click).\r\n      this._set_return_value(this.global_return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST empty statment. */\r\n  _empty_statement () {\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n\r\n    // Return to the node processessor.\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST expression statement. */\r\n  _expression_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.expression)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Set parent node.\r\n      this._node.status = 0\r\n      this._node = this._node.parent\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST for statement. */\r\n  _for_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.init)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process object.\r\n      this._node.status = 2\r\n      this._set_node(this._node.test)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Check if the test node has returned true.\r\n      if (this._node.return_values[0].value === true) {\r\n        // Process object.\r\n        this._node.status = 3\r\n        this._node.return_values = []\r\n        this._set_node(this._node.body)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Range has ended.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 3:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.update)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST for in statement. */\r\n  _for_in_statement () {\r\n    // Initialize status property.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process object.\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Retrieve the range on which the loop travels.\r\n      var tmp_range = this._get_element_value(this._node.return_values[1])\r\n\r\n      // Execute the range.\r\n      if (this._node.index < tmp_range.length) {\r\n        // Set the value of the range.\r\n        this._set_element_value(this._node.return_values[0], tmp_range[this._node.index])\r\n\r\n        // Increase the index.\r\n        this._node.index++\r\n\r\n        // Execute the body.\r\n        this._set_node(this._node.body)\r\n        this._process_nodes()\r\n      } else {\r\n        this._node.index = 0\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST function expression. */\r\n  _function_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process defaults.\r\n      this._node.status = 1\r\n      this._set_node(this._node.body)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Remove the last return value from the global function stack.\r\n      var return_value = this._function_stack.pop()\r\n\r\n      // Set the return value\r\n      this._set_return_value(return_value)\r\n\r\n      // Set parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST identifier. */\r\n  _identifier () {\r\n    // Retrieve the identifier information.\r\n    const return_value = { type: 'identifier', value: this._node.name }\r\n\r\n    // Set the return value.\r\n    this._set_return_value(return_value)\r\n\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST if statement. */\r\n  _if_statement () {\r\n    // Initialize status property.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.test)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Check if expression is true.\r\n      if (this._node.return_values[0].value === true) {\r\n        this._node.status = 2\r\n        this._set_node(this._node.consequent)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      } else if (this._node.alternate !== null) {\r\n        this._node.status = 2\r\n        this._set_node(this._node.alternate)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      } else {\r\n        this._node.status = 2\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 2:\r\n      // Set parent node.\r\n      if (this._node.break === true) {\r\n        this._node.break = false\r\n        this._node.parent.break = true\r\n      }\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST literal. */\r\n  _literal () {\r\n    // Retrieve the identifier information.\r\n    var return_value = { type: 'literal', value: this._node.value }\r\n\r\n    // Set the return value.\r\n    this._set_return_value(return_value)\r\n\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST logical expression. */\r\n  _logical_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.left)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process property\r\n      this._node.status = 2\r\n      this._set_node(this._node.right)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // define variables.\r\n      var left = this._get_element_value(this._node.return_values[0])\r\n      var right = this._get_element_value(this._node.return_values[1])\r\n      var return_value = { type: 'literal' }\r\n\r\n      // Select binary operator.\r\n      switch (this._node.operator) {\r\n      case '&&':\r\n        return_value.value = left && right\r\n        break\r\n      case '||':\r\n        return_value.value = left || right\r\n        break\r\n      }\r\n\r\n      // Set the return value.\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST member expression */\r\n  _member_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.object)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process property\r\n      this._node.status = 2\r\n      this._set_node(this._node.property)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Build the combing return value.\r\n      var return_value = { type: 'identifier', value: this._node.return_values[0].value + '.' + this._node.return_values[1].value }\r\n\r\n      // Set the return value\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST new expression. */\r\n  _new_expression () {\r\n    // Initialize status properties.\r\n    this._node.arguments = (typeof this._node.arguments === 'undefined') ? [] : this._node.arguments\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Process arguments and caller.\r\n      if (this._node.index < this._node.arguments.length) {\r\n        // Set current node to next node in list.\r\n        this._node.index++\r\n        this._set_node(this._node.arguments[this._node.index - 1])\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Set parent node.\r\n        this._node.status = 1\r\n        this._set_node(this._node.callee)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      }\r\n    } else {\r\n      // Get the caller and context element.\r\n      let returnValue = this._node.return_values.pop()\r\n      var caller = this._get_element(returnValue)\r\n      var context = this._get_context(returnValue)\r\n\r\n      // Create the aruments array.\r\n      var tmp_arguments = []\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        tmp_arguments.push(this._get_element_value(this._node.return_values[i]))\r\n      }\r\n\r\n      // Execute the call.\r\n      returnValue = { type: 'literal', value: caller.apply(context, tmp_arguments) }\r\n\r\n      // Set the return value\r\n      this._set_return_value(returnValue)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST program. */\r\n  _program () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.body.length) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.body[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Change status and end the running process.\r\n      this._node.index = 0\r\n      this._status = 2\r\n\r\n      // Complete the inline item.\r\n      if (this._inline_script !== null) {\r\n        this._inline_script._complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Process an AST return statement. */\r\n  _return_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    let returnValue\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Process object.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Set return value.\r\n      returnValue = { type: 'identifier', value: this._node.return_values[0].value }\r\n\r\n      // Set the return value\r\n      this._function_stack.push(returnValue)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST unary expression. */\r\n  _unary_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      var return_value = { type: 'literal' }\r\n\r\n      // process the operator.\r\n      switch (this._node.operator) {\r\n      case '!' :\r\n        return_value.value = !(this._node.return_values[0].value)\r\n        break\r\n      case '-' :\r\n        return_value.value = -(this._node.return_values[0].value)\r\n        break\r\n      }\r\n\r\n      // Set the return value\r\n      this._set_return_value(return_value)\r\n\r\n      // Return to the node processessor.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST update expression. */\r\n  _update_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Process the init value.\r\n      switch (this._node.operator) {\r\n      case '++' :\r\n        this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[0]) + 1)\r\n        break\r\n      }\r\n\r\n      // Return to the node processessor.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST variable declaration. */\r\n  _variable_declaration () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.declarations.length) {\r\n      // Set current node to next node in list.\r\n      this._node.index++\r\n      this._set_node(this._node.declarations[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST variable declarator. */\r\n  _variable_declarator () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // process id.\r\n      this._node.status = 1\r\n      this._set_node(this._node.id)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 1:\r\n      // Process init.\r\n      this._node.status = 2\r\n      this._set_node(this._node.init)\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n      break\r\n    case 2:\r\n      // Process the init value.\r\n      this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[1]))\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process an AST while statement. */\r\n  _while_statement () {\r\n    // Initialize status property.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n    case 0:\r\n      // Check for the break flag.\r\n      if (this._node.break === true) {\r\n        this._node.break = false\r\n        // Set parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      } else {\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.test)\r\n\r\n        // Return to the node processeor.\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    case 1:\r\n      // Check if expression is true.\r\n      if (this._node.return_values[0].value === true) {\r\n        // Reset the test\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n\r\n        // execute the body.\r\n        this._set_node(this._node.body)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Set parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n      }\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Process all AST nodes. */\r\n  _process_nodes () {\r\n    // Select type of processing.\r\n    if (this._statement === null) {\r\n      // Script processing.\r\n      this._process_nodes_jump()\r\n    } else {\r\n      if (this._node === this._statement) {\r\n        // Return the result value of the expression.\r\n        return (this._node.body[0].return_values[0].value)\r\n      } else {\r\n        // Statement processing.\r\n        this._process_nodes_timeout()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Process a single AST nodes (timeout is for non-blocking) */\r\n  _process_nodes_jump () {\r\n    // Increase the stack counter.\r\n    this._stack++\r\n    if (this._stack > 500) {\r\n      // Clear the stack.\r\n      this._stack = 0\r\n\r\n      // Process nodes with a timeout (this is a hack for clearing the browser cache.\r\n      setTimeout(function () {\r\n        this._process_nodes_timeout()\r\n      }.bind(this), 1)\r\n    } else {\r\n      // Process the nodes without a timeout.\r\n      this._process_nodes_timeout()\r\n    }\r\n  }\r\n\r\n  /** Process a single AST nodes (timeout is for non-blocking) */\r\n  _process_nodes_timeout () {\r\n    // Select the type of node to process\r\n    switch (this._node.type) {\r\n    case 'ArrayExpression':\r\n      this._array_expression()\r\n      break\r\n    case 'AssignmentExpression':\r\n      this._assignment_expression()\r\n      break\r\n    case 'BinaryExpression':\r\n      this._binary_expression()\r\n      break\r\n    case 'BlockStatement':\r\n      this._block_statement()\r\n      break\r\n    case 'BreakStatement':\r\n      this._break_statement()\r\n      break\r\n    case 'CallExpression':\r\n      this._call_expression()\r\n      break\r\n    case 'EmptyStatement':\r\n      this._empty_statement()\r\n      break\r\n    case 'ExpressionStatement':\r\n      this._expression_statement()\r\n      break\r\n    case 'ForStatement':\r\n      this._for_statement()\r\n      break\r\n    case 'ForInStatement':\r\n      this._for_in_statement()\r\n      break\r\n    case 'FunctionExpression':\r\n      this._function_expression()\r\n      break\r\n    case 'Identifier':\r\n      this._identifier()\r\n      break\r\n    case 'IfStatement':\r\n      this._if_statement()\r\n      break\r\n    case 'Literal':\r\n      this._literal()\r\n      break\r\n    case 'LogicalExpression':\r\n      this._logical_expression()\r\n      break\r\n    case 'MemberExpression':\r\n      this._member_expression()\r\n      break\r\n    case 'NewExpression':\r\n      this._new_expression()\r\n      break\r\n    case 'Program':\r\n      this._program()\r\n      break\r\n    case 'ReturnStatement':\r\n      this._return_statement()\r\n      break\r\n    case 'UnaryExpression':\r\n      this._unary_expression()\r\n      break\r\n    case 'UpdateExpression':\r\n      this._update_expression()\r\n      break\r\n    case 'VariableDeclaration':\r\n      this._variable_declaration()\r\n      break\r\n    case 'VariableDeclarator':\r\n      this._variable_declarator()\r\n      break\r\n    case 'WhileStatement':\r\n      this._while_statement()\r\n      break\r\n    default:\r\n      this._runner._debugger.addError('Invalid node type to process: ' + this._node.type)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Run a single line python AST statement.\r\n     * @param {Object} ast_tree - The AST tree to run.\r\n     * @return {Boolean|Number|Object|String} - The result value of the AST evaluation.\r\n     */\r\n  _run_statement (ast_tree) {\r\n    this._node = ast_tree.body[0]\r\n    this._node.parent = ast_tree\r\n    this._statement = ast_tree\r\n\r\n    // Adjust status of partser to running and start the process.\r\n    this._status = 1\r\n\r\n    // Process the nodes.\r\n    this._process_nodes()\r\n\r\n    // Return the result value of the expression.\r\n    let returnValue\r\n    if (ast_tree.body[0].return_values[0].type === 'identifier') {\r\n      returnValue = this._get_element_value(ast_tree.body[0].return_values[0])\r\n    } else {\r\n      returnValue = ast_tree.body[0].return_values[0].value\r\n    }\r\n\r\n    // Clear the return value container for next cycle.\r\n    ast_tree.body[0].return_values = []\r\n\r\n    // Retur value of the statement.\r\n    return returnValue\r\n  }\r\n\r\n  /**\r\n     * Run an AST python script.\r\n     * @param {Object} inline_script - The Inline Script item to which the AST tree belongs.\r\n     * @param {Object} ast_tree - The AST tree to run.\r\n     */\r\n  _run (inline_script, ast_tree) {\r\n    // Set the inline item.\r\n    this._inline_script = inline_script\r\n\r\n    // set the self parameter.\r\n    this._variables.self = inline_script\r\n\r\n    // Set the first node and its parent.\r\n    this._node = ast_tree\r\n    this._node.parent = null\r\n    this._statement = null\r\n\r\n    // Adjust status of partser to running and start the process.\r\n    this._status = 1\r\n    this._process_nodes()\r\n  }\r\n}\r\n","import isFunction from 'lodash/isFunction'\r\n\r\n/** Class representing a data logger. */\r\nexport default class Log {\r\n  /**\r\n   * Create a log object which stores all the response data.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   */\r\n  constructor (experiment) {\r\n    this._experiment = experiment // Anchor to the experiment object.\r\n  }\r\n\r\n  /**\r\n   * Write one signle line to the message log.\r\n   * @param {Array} varList - Array with variables to write to the log.\r\n   */\r\n  write_vars (varList) {\r\n    const entry = {}\r\n    for (const varName of varList) {\r\n      const value = this._experiment.vars.get(varName, 'NA', false)\r\n      if (isFunction(value)) continue\r\n      entry[varName] = value\r\n    }\r\n    if (isFunction(this._experiment.onLog)) {\r\n      this._experiment.onLog(entry)\r\n    }\r\n    this._experiment._runner._data.push(entry)\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport JavaScriptWorkspace from '../classes/javascript_workspace.js'\r\nimport Canvas from '../backends/canvas.js'\r\nimport Log from '../backends/log'\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\nimport {\r\n  VERSION_NAME,\r\n  VERSION_NUMBER\r\n} from '../index.js'\r\n\r\n/**\r\n * Class representing an Experiment item.\r\n * @extends Item\r\n */\r\nexport default class Experiment extends Item {\r\n  /** The experiment class defines the starting point for an experiment. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._canvas = new Canvas(this)\r\n    this._currentCanvas = this._canvas\r\n    this._log = new Log(this)\r\n    this._scale_x = 1 // Scaling of the canvas for fullscreen mode.\r\n    this._scale_y = 1 // Scaling of the canvas for fullscreen mode.\r\n    this._javascriptWorkspace = new JavaScriptWorkspace(this)\r\n\r\n    // Create and set public properties.\r\n    this.debug = this._runner._debugger.enabled\r\n    this.items = this._runner._itemStore\r\n    this.pool = this._runner._pool\r\n\r\n    // Set default variables\r\n    this.vars.start = 'experiment'\r\n    this.vars.title = 'My Experiment'\r\n    this.vars.bidi = 'no'\r\n    this.vars.round_decimals = 2\r\n    this.vars.form_clicks = 'no'\r\n    this.vars.uniform_coordinates = 'no'\r\n    this.vars.sessionid = new Date().valueOf() + Math.floor(Math.random() * 100000)\r\n\r\n    // Sound parameters.\r\n    this.vars.sound_freq = 48000\r\n    this.vars.sound_sample_size = -16\r\n    this.vars.sound_channels = 2\r\n    this.vars.sound_buf_size = 1024\r\n\r\n    // Default backend\r\n    this.vars.canvas_backend = 'xpyriment'\r\n\r\n    // Display parameters.\r\n    this.vars.width = 1024\r\n    this.vars.height = 768\r\n    this.vars.background = 0x000000\r\n    this.vars.foreground = 0xFFFFFF\r\n\r\n    // Font parameters.\r\n    this.vars.font_size = 18\r\n    this.vars.font_family = 'mono'\r\n    this.vars.font_italic = 'no'\r\n    this.vars.font_bold = 'no'\r\n    this.vars.font_underline = 'no'\r\n  }\r\n\r\n  /** Resets the feedback variables (acc, avg_rt, etc.). */\r\n  reset_feedback () {\r\n    this.vars.total_responses = 0\r\n    this.vars.total_correct = 0\r\n    this.vars.total_response_time = 0\r\n    this.vars.avg_rt = 'undefined'\r\n    this.vars.average_response_time = 'undefined'\r\n    this.vars.accuracy = 'undefined'\r\n    this.vars.acc = 'undefined'\r\n  }\r\n\r\n  /**\r\n    * Sets the subject number and parity (even/ odd).\r\n    * @param  {Number} pNr - The subject number to be used.\r\n    */\r\n  set_subject (pNr) {\r\n    // Sets the subject number and parity (even/ odd).\r\n    this.vars.subject_nr = pNr\r\n    if ((pNr % 2) === 0) {\r\n      this.vars.subject_parity = 'even'\r\n    } else {\r\n      this.vars.subject_parity = 'odd'\r\n    }\r\n  }\r\n\r\n  /**\r\n    * Extracts a the definition of a single item from the string.\r\n    * @param {String} script - The script to read the definition form.\r\n    * @return {String} - The definition found from the script.\r\n    */\r\n  read_definition (script) {\r\n    // Extracts a the definition of a single item from the string.\r\n    var line = script.shift()\r\n    var def_str = ''\r\n    while ((line !== null) && (line.length > 0) && (line.charAt(0) === '\\t')) {\r\n      def_str = def_str + line.substring(1) + '\\n'\r\n      line = script.shift()\r\n    }\r\n    return def_str\r\n  }\r\n\r\n  /**\r\n   * Construct the experiment object from OpenSesame script.\r\n   * @param {String} script - The opensesame script contents\r\n   */\r\n  from_string (script) {\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      this._source = script.split('\\n')\r\n      var l = this._source.shift()\r\n      while (l != null) {\r\n        // Set the processing of the next line.\r\n        const get_next = true\r\n        // eslint-disable-next-line no-unused-vars\r\n        let cmd, args, kwargs\r\n        try {\r\n          // Split the single line into a set of tokens.\r\n          [cmd, args, kwargs] = this._runner._syntax.parse_cmd(l)\r\n        } catch (e) {\r\n          this._runner._debugger.addError('Failed to parse script. Maybe it contains illegal characters or unclosed quotes: ' + e.message)\r\n        }\r\n\r\n        if ((cmd !== null) && (args.length > 0)) {\r\n          // Try to parse the line as variable (or comment)\r\n          if (this.parse_variable(l) === false) {\r\n            if (cmd === 'define') {\r\n              if (args.length === 2) {\r\n                // Get the type, name and definition string of an item.\r\n                var item_type = args[0]\r\n                var item_name = this._runner._syntax.sanitize(args[1])\r\n                var def_str = this.read_definition(this._source)\r\n                this._runner._itemStore.newItem(item_type, item_name, def_str)\r\n              } else {\r\n                this._runner._debugger.addError('Failed to parse definition: ' + l)\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Get the next line.\r\n        if (get_next === true) {\r\n          l = this._source.shift()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Initializes the clock backend. */\r\n  init_clock () {\r\n    // Initializes the clock backend.\r\n    this.clock._initialize()\r\n  }\r\n\r\n  /** Initializes the canvas backend. */\r\n  init_display () {\r\n    // Initializes the canvas backend.\r\n    this._canvas.init_display(this)\r\n  }\r\n\r\n  /** Event handler for external data retrieval. */\r\n  onLog (data) {\r\n    // Function to be overwritten by external handler\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Runs the experiment.\r\n    switch (this._status) {\r\n    case constants.STATUS_INITIALIZE:\r\n      // Adjust the status of the item.\r\n      this._status = constants.STATUS_FINALIZE\r\n\r\n      // Save the date and time, and the version of OpenSesame\r\n      this.vars.datetime = new Date().toString()\r\n      this.vars.opensesame_version = VERSION_NUMBER\r\n      this.vars.opensesame_codename = VERSION_NAME\r\n      this.init_clock()\r\n      this.init_display()\r\n      this.reset_feedback()\r\n\r\n      // Add closing message to debug system.\r\n      this._runner._debugger.addMessage('experiment.run(): experiment started at ' + new Date().toUTCString())\r\n\r\n      if (this._runner._itemStore._items[this.vars.start] !== null) {\r\n        this._runner._itemStack.clear()\r\n        this._runner._itemStore.prepare(this.vars.start, this)\r\n      } else {\r\n        this._runner._debugger.addError('Could not find the item that is the entry point of the experiment: ' + this.vars.start)\r\n      }\r\n      break\r\n    case constants.STATUS_FINALIZE:\r\n      // Add closing message to debug system.\r\n      this._runner._debugger.addMessage('experiment.run(): experiment finished at ' + new Date().toUTCString())\r\n\r\n      // Complete the run process.\r\n      this.end()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Ends an experiment. */\r\n  end () {\r\n    this._runner._finalize()\r\n  }\r\n}\r\n","import { autoDetectRenderer } from 'pixi.js'\r\nimport {\r\n  constants\r\n} from './constants.js'\r\nimport Debugger from './debugger.js'\r\nimport Convertor from './convertor.js'\r\nimport Events from './events.js'\r\nimport Parameters from './parameters.js'\r\nimport Screen from './screen.js'\r\nimport Session from './session.js'\r\nimport Transfer from './transfer.js'\r\nimport ItemStack from '../classes/item_stack.js'\r\nimport ItemStore from '../classes/item_store.js'\r\nimport PythonWorkspace from '../classes/python_workspace.js'\r\nimport FilePoolStore from '../classes/file_pool_store.js'\r\nimport Syntax from '../classes/syntax.js'\r\nimport PythonParser from '../python/python.js'\r\nimport Experiment from '../items/experiment.js'\r\n\r\n/** Class representing the Runner. */\r\nexport default class Runner {\r\n  /** Create a runner which runs an experiment. */\r\n  constructor (content) {\r\n    // Create and set private properties.\r\n    this._confirm = null // Optionale confirm dialog function.\r\n    this._container = null // HTML: The container (div) element.\r\n    this._data = [] // Experiment result data.\r\n    this._experiment = null // The experiment container.\r\n    this._fullScreen = false // Full screen toggle mode.\r\n    this._mimetype = null // Distinction between text and binanry files.\r\n    this._name = 'noname.exp' // Name of the experiment which is run.\r\n    this._onConsole = null // Event handler for processing print messages.\r\n    this._onFinished = null // Event handler for finishing the experiment.\r\n    this._onLog = null // Event handler to call when logger is encountered.\r\n    this._onError = null // Event handler to call when an error is encountered.\r\n    this._prompt = null // Optional prompt dialog function.\r\n    this._renderer = null // PIXI: The visual stimuli renderer.\r\n    this._scaleMode = 'noScale' // Scale type used for full screen mode.\r\n    this._script = null // Container for the experiment script.\r\n    this._source = null // Link to the source experiment file.\r\n    this._subject = null // If defined containing the subject number.\r\n    this._target = null // Link to the target location for the data.\r\n\r\n    // Create and set private class properties.\r\n    this._debugger = new Debugger(this) // Internal error system.\r\n    this._convertor = new Convertor(this)\r\n    this._events = new Events(this) // The event processor.\r\n    this._itemStack = new ItemStack(this) // The global item stack.\r\n    this._itemStore = new ItemStore(this) // The global item store.\r\n    this._parameters = new Parameters(this) // Parameter processor.\r\n    this._pool = new FilePoolStore(this) // The virtual file pool store.\r\n    this._pythonParser = new PythonParser(this) // Python parser\r\n    this._pythonWorkspace = new PythonWorkspace(this) // Python workspace.\r\n    this._screen = new Screen(this) // Introduction screen renderer.\r\n    this._session = new Session(this) // Session information container.\r\n    this._syntax = new Syntax(this) // The script syntax checker.\r\n    this._transfer = new Transfer(this) // File transfer system.\r\n\r\n    // Create the content container.\r\n    this._setupContent(content)\r\n  }\r\n\r\n  /**\r\n   * Setup the content container which shows all the visual output.\r\n   * @param {String|Object} content - The content (div element) in which the experiment is projected.\r\n   */\r\n  _setupContent (content) {\r\n    // Check if the experiment container is defined.\r\n    if (typeof content !== 'undefined') {\r\n      // Get the div element from the DOM element tree\r\n      this._container = (typeof content === 'string') ? document.getElementById(content) : content\r\n\r\n      // Create and set the experiment canvas.\r\n      this._renderer = autoDetectRenderer(800, 600, {\r\n        antialias: true,\r\n        transparent: false,\r\n        resolution: 1\r\n      })\r\n      this._renderer.backgroundColor = 0x000000\r\n\r\n      // Append the canvas to the container.\r\n      this._container.appendChild(this._renderer.view)\r\n    } else {\r\n      // Show error message.\r\n      this._debugger.addError('No content parameter specified.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup the context from which the experiment is created.\r\n   * @param {Object} context - An JSON object containing information about the experiment.\r\n   */\r\n  async _setupContext (context) {\r\n    // Check if the script parameter is defined.\r\n    if (typeof context !== 'undefined') {\r\n      // Initialize the context parameters.\r\n      // Use ES6 destructuring to determine values and set default ones if\r\n      // required.\r\n      ({\r\n        confirm: this._confirm = null,\r\n        debug: this._debugger.enabled = false,\r\n        fullScreen: this._fullScreen = false,\r\n        introClick: this._screen._click = true,\r\n        introScreen: this._screen._active = true,\r\n        mimetype: this._mimetype = null,\r\n        name: this._name = 'noname.exp',\r\n        onConsole: this._onConsole = null,\r\n        onFinished: this._onFinished = null,\r\n        onLog: this._onLog = null,\r\n        onError: this._onError = null,\r\n        prompt: this._prompt = null,\r\n        scaleMode: this._scaleMode = 'noScale',\r\n        source: this._source = null,\r\n        subject: this._subject = null,\r\n        target: this._target = null\r\n      } = context)\r\n\r\n      // Set up the introscreen.\r\n      this._screen._setupIntroScreen()\r\n\r\n      this._screen._updateIntroScreen('Loading experiment.')\r\n      this._screen._updateProgressBar(-1)\r\n\r\n      // Load the script file, using the source parameter.\r\n      try {\r\n        this._script = await this._transfer._readSource(this._source)\r\n      } catch (e) {\r\n        this._debugger.addError(`Error reading osexp: ${e}`)\r\n        this._exit()\r\n        return\r\n      }\r\n\r\n      // Update the introscreen\r\n      this._screen._updateIntroScreen('Building experiment structure.')\r\n\r\n      // Continue the experiment build.\r\n      this._build()\r\n\r\n      // Initialize the parameters class and request user input.\r\n      this._parameters._initialize()\r\n    } else {\r\n      // Show error message.\r\n      this.debugger.addError('No context parameter specified.')\r\n    }\r\n  }\r\n\r\n  /** Build the experiment system. */\r\n  _build () {\r\n    // Create the experiment item.\r\n    this._experiment = new Experiment(this, this._name, this._script)\r\n    this._convertor.parseScript(this._script)\r\n    this._experiment.from_string(this._script)\r\n\r\n    // Set the onlog event handler (if defined).\r\n    if (this._onLog) {\r\n      this._experiment.onLog = this._onLog\r\n    }\r\n  }\r\n\r\n  /** initialize the runner. */\r\n  _initialize () {\r\n    // Initialize the helper classes.\r\n    this._debugger._initialize()\r\n    this._events._initialize()\r\n    this._pythonParser._initialize()\r\n    this._session._initialize()\r\n\r\n    // Prepare and run the experiment item.\r\n    this._experiment.prepare()\r\n    this._experiment.run()\r\n  }\r\n\r\n  /** finalize the runner. */\r\n  _finalize () {\r\n    // Finalize the event system.\r\n    this._events._finalize()\r\n\r\n    // Finalize the debugger.\r\n    this._debugger._finalize()\r\n\r\n    // Clear the item store and file pool.\r\n    this._itemStore._clean_up()\r\n    this._pool._clean_up()\r\n\r\n    // Exit the runner.\r\n    this._exit()\r\n  }\r\n\r\n  /** Exit the experiment environment and execute the optional callback. */\r\n  _exit () {\r\n    // Leave the full screen mode\r\n    this._screen._fullScreenExit()\r\n\r\n    // Reset te size of the container and the canvas.\r\n    this._experiment._canvas._exitDisplay()\r\n\r\n    // Clear the experiment item.\r\n    this._experiment = null\r\n\r\n    // Check if a callback function is defined.\r\n    if (this._onFinished) {\r\n      // Execute callback function.\r\n      this._onFinished(this._data, this._session._session)\r\n    }\r\n  }\r\n\r\n  /** Exit a running experiment. */\r\n  exit () {\r\n    // Set state of the event system to break.\r\n    this._events._state = constants.TIMER_BREAK\r\n  }\r\n\r\n  /** Run an experiment */\r\n  run (context) {\r\n    // Build the experiment.\r\n    this._setupContext(context)\r\n  }\r\n}\r\n","/* eslint-disable no-undef */\n/* eslint-disable no-extend-native */\n/*\n * OsWeb\n *\n * An experiment research tool written in Javascript (ES2016) and HTML to be\n * used in Qualtrics or other web-based tools. Based upon OpenSesame.\n *\n * Author: drs. J. Bos, D. Schreij & S. Mathot\n *\n * Copyright (c) University of Groningen\n * Faculty of Behavioural and Social Sciences\n * Technical Support Service\n *\n */\n\nimport Runner from './system/runner.js'\n\nexport const VERSION_NAME = OSWEB_VERSION_NAME\nexport const VERSION_NUMBER = OSWEB_VERSION_NO\n\n// Add replaceAll function to string prototype\n// eslint-disable-next-line no-extend-native\nString.prototype.replaceAll = function (str1, str2, ignore) {\n  return this.replace(\n    new RegExp(\n      str1.replace(/([/,!\\\\^${}[]\\(\\)\\.\\*\\+\\?\\|<>-&])/g, '\\\\$&'),\n      (ignore ? 'gi' : 'g')),\n    (typeof (str2) === 'string') ? str2.replace(/\\$/g, '$$$$') : str2)\n}\n\n// Add _pySlide function to string prototype (HACK for the filbert interpreter).\nString.prototype._pySlice = function (start, end, step) {\n  if (end !== null) {\n    return this.slice(start, end)\n  } else {\n    return this.slice(start)\n  }\n}\n\n// Create the osweb library container.\nconst osweb = {\n  printVersionInfo: function () {\n    // Show library name and library version number in the console.\n    console.log(`${VERSION_NAME} v${VERSION_NUMBER}`)\n  },\n  getRunner: function (target) {\n    return new Runner(target)\n  }\n}\n\nexport default osweb\n","/* This is the entry script for the webpack builder\nThis script ties all needed modules or files together and provides the\ncorrect setting for the webpack-devserver\n*/\nimport './scss/osweb.scss'\nimport osweb from './js/osweb/index.js'\n\nif (typeof window !== 'undefined') {\n  window.alertify = require('alertifyjs')\n  require('alertifyjs/build/css/alertify.css')\n  require('alertifyjs/build/css/themes/default.css')\n  window.osweb = osweb\n  window.osweb.printVersionInfo()\n}\n\nif (module.hot) {\n  module.hot.accept()\n}\n","import { Container, Graphics, Sprite, Text, Texture } from 'pixi.js'\nimport Styles from './styles.js'\n\n/** Class representing a drawing canvas. */\nexport default class Canvas {\n  /**\n   * Create a canvas object which is used to show all visual stimuli.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   * @param {Boolean} auto_prepare - If true the canvas is prepared after drawing.\n   * @param {Object} style_args - Optional styling argument for the canvas.\n   */\n  constructor (experiment, auto_prepare) {\n    // Create and set public properties.\n    this.auto_prepare = (typeof auto_prepare === 'undefined') ? true : auto_prepare // Set autoprepare toggle (not supported yet).\n    this.experiment = experiment // Anchor to the experiment object.\n\n    // Create and set private properties.\n    this._container = new Container() // Create the container which represents the canvas.\n    this._font_string = 'bold 18px Courier New' // Default font definition string.\n    this._height = this.experiment._runner._renderer.height // Height of the HTML canvas used for drawing.\n    this._styles = new Styles() // The style container.\n    this._width = this.experiment._runner._renderer.width // Width of the HTML canvas used for drawing.\n  }\n\n  /**\n   * Calculate the coordinates for the arraw shape.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Number} bodyWidth - The width of the element body.\n   * @param {Number} bodyLength - The height of the element body.\n   * @param {Number} headWidth - The width of the element head.\n   * @return {Array} - The coordinates defining the arrow element.\n   */\n  _arrow_shape (sx, sy, ex, ey, bodyWidth, bodyLength, headWidth) {\n    // Length\n    var d = Math.sqrt(Math.pow(ey - sy, 2) + Math.pow(sx - ex, 2))\n    var angle = Math.atan2(ey - sy, ex - sx)\n    var _headWidth = (1 - bodyWidth) / 2.0\n    bodyWidth = bodyWidth / 2.0\n\n    // calculate coordinates\n    var p4 = [ex, ey]\n    var p1 = [sx + bodyWidth * headWidth * Math.cos(angle - Math.PI / 2), sy + bodyWidth * headWidth * Math.sin(angle - Math.PI / 2)]\n    var p2 = [p1[0] + bodyLength * Math.cos(angle) * d, p1[1] + bodyLength * Math.sin(angle) * d]\n    var p3 = [p2[0] + _headWidth * headWidth * Math.cos(angle - Math.PI / 2), p2[1] + _headWidth * headWidth * Math.sin(angle - Math.PI / 2)]\n    var p7 = [sx + bodyWidth * headWidth * Math.cos(angle + Math.PI / 2), sy + bodyWidth * headWidth * Math.sin(angle + Math.PI / 2)]\n    var p6 = [p7[0] + bodyLength * Math.cos(angle) * d, p7[1] + bodyLength * Math.sin(angle) * d]\n    var p5 = [p6[0] + _headWidth * headWidth * Math.cos(angle + Math.PI / 2), p6[1] + _headWidth * headWidth * Math.sin(angle + Math.PI / 2)]\n\n    return [p1, p2, p3, p4, p5, p6, p7]\n  }\n\n  /**\n   * Checks if the supplied string contains HTML markup.\n   * @param {String} str - The string to check.\n   * @return {Boolean} - True if HTML markup was found, false if not.\n   */\n  _containsHTML (str) {\n    let doc\n    try {\n      doc = new DOMParser().parseFromString(str, 'text/html')\n      return Array.from(doc.childNodes).some(node => node.nodeType === 1)\n    } catch (e) {\n      console.error('Could not parse DOM: ' + e.message)\n    }\n  }\n\n  /** Exit the display and return to default settings. */\n  _exitDisplay () {\n    // Clear container.\n    this.clear()\n\n    // Set the cursor visibility to default (visible).\n    this.experiment._runner._renderer.view.style.cursor = 'default'\n\n    //  Set the renderer dimensions.\n    this.experiment._runner._renderer.resize(800, 600)\n\n    // Clear the renderer.\n    this.experiment._runner._renderer.backgroundColor = 0x000000\n    this.experiment._runner._renderer.clear()\n    this.experiment._runner._renderer.render(this._container)\n\n    try {\n      document.body.style.backgroundColor = '#FFFFFF'\n    } catch (e) {\n      console.log('Could not reset body color to white', e)\n    }\n  }\n\n  /**\n   * Checks if addiotional style is defined otherwise use default.\n   * @param {Object} styleArgs - The additional style.\n   * @return {Object} - returns a style object.\n   */\n  _getStyle (styleArgs) {\n    // Check if the supplied style does exist.\n    if (typeof (styleArgs) === 'undefined') {\n      return this._styles\n    } else {\n      const styles = new Styles()\n      // Shorter notation: (but keeping old code in comments if this does not work as expected)\n      Object.assign(styles, styleArgs)\n      // styles._background_color = (typeof (styleArgs._background_color) !== 'undefined') ? styleArgs._background_color : 0x000000\n      // styles._bidi = (typeof (styleArgs._bidi) !== 'undefined') ? styleArgs._bidi : false\n      // styles._color = (typeof (styleArgs._color) !== 'undefined') ? styleArgs._color : 0xffffff\n      // styles._fill = (typeof (styleArgs._fill) !== 'undefined') ? styleArgs._fill : false\n      // styles._font_bold = (typeof (styleArgs._font_bold) !== 'undefined') ? styleArgs._font_bold : true\n      // styles._font_family = (typeof (styleArgs._font_family) !== 'undefined') ? styleArgs._font_family : 'Arial'\n      // styles._font_italic = (typeof (styleArgs._font_italic) !== 'undefined') ? styleArgs._font_italic : false\n      // styles._font_size = (typeof (styleArgs._font_size) !== 'undefined') ? styleArgs._font_size : 24\n      // styles._font_underline = (typeof (styleArgs._font_underline) !== 'undefined') ? styleArgs._font_underline : false\n      // styles._penwidth = (typeof (styleArgs._penwidth) !== 'undefined') ? styleArgs._penwidth : 1\n      return styles\n    }\n  }\n\n  /**\n   * Calculates the height, ascent en descent in pixels for the given font.\n   * @param {String} textLine The line of text.\n   * @param {String} fontFamily The font family to use.\n   * @param {Number} fontSize The size of the font.\n   * @return {Object} object containing the height, ascent en descent of the text.\n   */\n  _getTextBaseline (textLine, fontFamily, fontSize, fontBold) {\n    // Create the text element.\n    const text = document.createElement('span')\n    text.style.fontFamily = fontFamily || 'Arial'\n    text.style.fontWeight = (fontBold === true) ? 'bold' : 'normal'\n    text.style.fontSize = String(fontSize) + 'px'\n    text.innerHTML = textLine\n    // Create the calculation div.\n    const block = document.createElement('div')\n    block.style.display = 'inline-block'\n    block.style.lineHeight = 'normal'\n    // block.style.width = '1px'\n    // block.style.height = '0px'\n    // Create the container div.\n    const div = document.createElement('div')\n    div.append(text, block)\n    document.body.appendChild(div)\n\n    // Set the variables.\n    const result = {}\n    let rect\n    let top1\n    let top2\n\n    // Calculate the ascent\n    block.style.verticalAlign = 'baseline'\n    rect = block.getBoundingClientRect()\n    top1 = rect.top + document.body.scrollTop\n    rect = text.getBoundingClientRect()\n    top2 = rect.top + document.body.scrollTop\n    result.ascent = Math.round(top1 - top2)\n\n    // Calculate the descent and the heigt.\n    block.style.verticalAlign = 'bottom'\n    rect = block.getBoundingClientRect()\n    top1 = rect.top + document.body.scrollTop\n    rect = text.getBoundingClientRect()\n    top2 = rect.top + document.body.scrollTop\n    result.height = Math.round(top1 - top2)\n    result.descent = result.height - result.ascent\n\n    document.body.removeChild(div)\n\n    // Return the result.\n    return result\n  }\n\n  /**\n   * Returns the correct envelop setting to use.\n   * @param {String} env - Envelop parameter.\n   * @return {String} - The envelop type to use.\n   */\n  _match_env (env) {\n    if (['c', 'circular', 'round'].includes(env)) {\n      return 'c'\n    } else if (['g', 'gaussian', 'gauss', 'normal', 'rect', 'square'].includes(env)) {\n      return 'g'\n    } else if (['rectangular', 'rectangle'].includes(env)) {\n      return 'r'\n    } else if (['l', 'linear', 'lin', 'ln'].includes(env)) {\n      return 'l'\n    } else {\n      return 'g'\n    }\n  }\n\n  /**\n   * Parse recursively a HTML based text area and returns a set of text elements.\n   * @param {Object} htmlNode - The html node to process.\n   * @param {Object} textBlock - Object containing the translated text block.\n   * @param {Object} currentStyle - Object containing the current style to use.\n   */\n  _parseHtmlNode (htmlNode, textBlock, currentStyle) {\n    // Create a style for the current leven\n    var elementStyle = this._getStyle(currentStyle)\n\n    // Process the node content itself.\n    switch (htmlNode.nodeType) {\n    case 1:\n      // Select the proper html tag\n      switch (htmlNode.nodeName) {\n      case 'B':\n        // Process bold tag.\n        elementStyle.font_bold = true\n        break\n      case 'BR':\n        // Process break tag, get the total width of the line.\n        textBlock.row.height = (textBlock.row.height > 0) ? textBlock.row.height : textBlock.prev_height\n        textBlock.row.width = (textBlock.x_pos > textBlock.row.width) ? textBlock.x_pos : textBlock.row.width\n        textBlock.width = (textBlock.width > textBlock.row.width) ? textBlock.width : textBlock.row.width\n        textBlock.y_pos = textBlock.y_pos + textBlock.row.height\n        textBlock.x_pos = 4\n        textBlock.height = textBlock.height + textBlock.row.height\n        // new row with elements.\n        textBlock.rows.push(textBlock.row)\n        textBlock.row = {\n          ascent: 0,\n          width: 0,\n          height: 0,\n          text_elements: [],\n          text_dimensions: [],\n          text_underline: []\n        }\n        break\n      case 'I':\n        // Process italic tag.\n        elementStyle.font_italic = true\n        break\n      case 'SPAN':\n        // Get the style tokens.\n        if (htmlNode.attributes.length > 0) {\n          var tokens = htmlNode.attributes[0].value.split(';')\n          // parse through the style tokens.\n          for (var j = 0; j < tokens.length; j++) {\n            var property = tokens[j].slice(0, tokens[j].indexOf(':'))\n            var value = tokens[j].slice(tokens[j].indexOf(':') + 1, tokens[j].length)\n            // Set the supported properties.\n            switch (property) {\n            case 'color':\n              elementStyle.color = value\n              break\n            case 'font-size':\n              elementStyle.font_size = value\n              break\n            case 'font-family':\n              elementStyle.font_family = value\n              break\n            }\n          }\n        }\n        break\n      case 'U':\n        // Process underline tag.\n        elementStyle.font_underline = true\n        break\n      }\n      break\n    case 3:\n      // Create the text style element.\n      var textStyle = {\n        fontFamily: elementStyle.font_family,\n        fontStyle: (elementStyle.font_italic === true) ? 'italic' : 'normal',\n        fontWeight: (elementStyle.font_bold === true) ? 'bold' : 'normal',\n        fontSize: elementStyle.font_size,\n        fill: elementStyle.color\n      }\n\n      // Create the text element and get the dimension.\n      var bounds = {}\n      var textElement = new Text(htmlNode.textContent, textStyle)\n      textElement.getBounds(false, bounds)\n\n      // Get the height and descent (for vertical positioning);\n      var dimension = this._getTextBaseline(htmlNode.textContent, elementStyle.font_family, elementStyle.font_size, elementStyle.font_bold)\n\n      // Position the text element and update the width.\n      textElement.x = textBlock.x_pos\n      textElement.y = textBlock.y_pos\n      textBlock.x_pos = textBlock.x_pos + bounds.width\n      textBlock.row.width = (textBlock.x_pos > textBlock.row.width) ? textBlock.x_pos : textBlock.row.width\n      textBlock.width = (textBlock.width > textBlock.row.width) ? textBlock.width : textBlock.row.width\n      textBlock.row.height = ((bounds.height + 1) > textBlock.row.height) ? bounds.height + 1 : textBlock.row.height\n      textBlock.row.ascent = (dimension.ascent > textBlock.row.ascent) ? dimension.ascent : textBlock.row.ascent\n      textBlock.prev_height = textBlock.row.height\n      textBlock.row.text_elements.push(textElement)\n      textBlock.row.text_dimensions.push(dimension)\n      textBlock.row.text_underline.push(elementStyle.font_underline)\n      break\n    }\n\n    // Process the child nodes recursive (if any).\n    for (var i = 0; i < htmlNode.childNodes.length; i++) {\n      this._parseHtmlNode(htmlNode.childNodes[i], textBlock, elementStyle, (i === (htmlNode.childNodes.length - 1)))\n    }\n  }\n\n  /**\n   * Resizes the container div (osweb_div), which contains all elements on display\n   * @param {Number} width - Width to set.\n   * @param {Number} height -Hheight to set.\n   */\n  _resizeContainer (width, height) {\n    // Set the parent container dimensions.\n    this.experiment._runner._container.style.width = width + 'px'\n    this.experiment._runner._container.style.height = height + 'px'\n  }\n\n  /**\n   * Draws an arrow element on the canvas.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Number} bodyWidth - The width of the element body.\n   * @param {Number} bodyLength - The height of the element body.\n   * @param {Number} headWidth - The width of the element head.\n   * @param {Object} styleArgs - Optional styling arguments for the element.\n   */\n  arrow (sx, sy, ex, ey, bodyWidth, bodyLength, headWidth, styleArgs) {\n    // Calculate coordinate points for the arrow.\n    var points = this._arrow_shape(sx, sy, ex, ey, bodyWidth, bodyLength, headWidth)\n\n    // Draw the arrow as a polygon.\n    this.polygon(points, styleArgs)\n  }\n\n  /**\n   * Draws an arrow element on the canvas.\n   * @param {Number} sx - The x coordinate of the element.\n   * @param {Number} sy - The y coordinate of the element.\n   * @param {Number} ex - The radius the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  circle (x, y, r, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create a circle element.\n    var circle = new Graphics()\n    circle.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      circle.beginFill(elementStyle.background_color)\n      circle.drawCircle(0, 0, r)\n      circle.endFill()\n    } else {\n      circle.drawCircle(0, 0, r)\n    }\n    circle.x = x\n    circle.y = y\n\n    // Add the circle element to container.\n    this._container.addChild(circle)\n  }\n\n  /**\n   * Clear the current canvas.\n   * @param {Number} background_color - The color to draw (optional).\n   * @param {Object} style_args - JSON object containing style arguments (optional).\n   */\n  clear (backgroundColor, styleArgs) {\n    // Clear the stage by temoving al the child elements.\n    for (var i = this._container.children.length - 1; i >= 0; i--) {\n      this._container.removeChild(this._container.children[i])\n    }\n  }\n\n  /**\n   * Copies the contents of the passed canvas onto current one.\n   * @param  {osweb.canvas} canvas The source canvas to copy\n   * @return {void}\n   */\n  copy (canvas) {\n    this.clear()\n\n    // Loop over the shapes on the passed canvas and copy them onto the current one\n    for (const shape of canvas._container.children) {\n      this._container.addChild(shape.clone())\n    }\n  }\n\n  /**\n   * Draws an ellipse element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} w - The width the element.\n   * @param {Number} h - The height the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  ellipse (x, y, w, h, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create an ellipse element.\n    var ellipse = new Graphics()\n    ellipse.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      ellipse.beginFill(elementStyle.background_color)\n      ellipse.drawEllipse(0, 0, (w / 2), (h / 2))\n      ellipse.endFill()\n    } else {\n      ellipse.drawEllipse(0, 0, (w / 2), (h / 2))\n    }\n    ellipse.x = x + (w / 2)\n    ellipse.y = y + (h / 2)\n\n    // Add the ellipse element to container.\n    this._container.addChild(ellipse)\n  }\n\n  /**\n   * Draws a fixdot element on the canvas.\n   * @param {int} x - The x coordinate of the element.\n   * @param {int} y - The y coordinate of the element.\n   * @param {String} - The style of the fixation dot.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  fixdot (x, y, style, styleArgs) {\n    // Check the color and style arguments.\n    style = (typeof style === 'undefined') ? 'default' : style\n\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    if (typeof x === 'undefined') {\n      if (this.uniform_coordinates === true) {\n        x = 0\n      } else {\n        x = this._width / 2\n      }\n    }\n    if (typeof y === 'undefined') {\n      if (this.uniform_coordinates === true) {\n        y = 0\n      } else {\n        y = this._height / 2\n      }\n    }\n\n    var s = 4\n    var h = 2\n    if (style.indexOf('large') !== -1) {\n      s = 16\n    } else if ((style.indexOf('medium') !== -1) || (style === 'default')) {\n      s = 8\n    } else if (style.indexOf('small') !== -1) {\n      s = 4\n    } else {\n      this.experiment._runner._debugger.addError('Unknown style: ' + style)\n    }\n\n    var styles = new Styles()\n    if ((style.indexOf('open') !== -1) || (style === 'default')) {\n      styles._fill = true\n      styles._background_color = elementStyle.color\n      styles._color = elementStyle.color\n      this.ellipse(x - s, y - s, 2 * s, 2 * s, styles)\n      styles._background_color = elementStyle.background_color\n      styles._color = elementStyle.background_color\n      this.ellipse(x - h, y - h, 2 * h, 2 * h, styles)\n    } else if (style.indexOf('filled') !== -1) {\n      styles._fill = true\n      styles._background_color = elementStyle.color\n      styles._color = elementStyle.color\n      this.ellipse(x - s, y - s, 2 * s, 2 * s, styles)\n    } else if (style.indexOf('cross') !== -1) {\n      styles._penwidth = 1\n      styles._color = elementStyle.color\n      this.line(x, y - s, x, y + s, styles)\n      this.line(x - s, y, x + s, y, styles)\n    } else {\n      this.experiment._runner._debugger.addError('Unknown style: ' + style)\n    }\n  }\n\n  /**\n   * Draws a gabor element on the canvas.\n   *\n   * @param {Number} x The x coordinate of the element\n   * @param {Number} y The y coordinate of the element\n   * @param {float} orient The rotation of the element (range between 0 and 1)\n   * @param {float} freq The frequency of the bands\n   * @param {String} env The type of envelope used for the element\n   * @param {*} size The size of the gabor\n   * @param {*} stdev The standard deviation of the guass fade\n   * @param {*} phase The phase of the element (start offset)\n   * @param {*} color1 The first color for the element\n   * @param {*} color2 The second color for the element\n   * @param {*} bgmode The background mode of the element\n   * @memberof Canvas\n   */\n  gabor (x, y, orient, freq, env, size, stdev, phase, color1, color2, bgmode) {\n    // Returns a surface containing a Gabor patch.\n    env = this._match_env(env)\n\n    // Create a temporary canvas to make an image data array.\n    const canvas = document.createElement('canvas')\n    canvas.width = size\n    canvas.height = size\n    const ctx = canvas.getContext('2d')\n    const px = ctx.getImageData(0, 0, size, size)\n\n    // Conver the orientation to radians.\n    orient = Math.PI * orient / -180\n    color1 = this._styles._convertColorValueToRGB(color1)\n    color2 = this._styles._convertColorValueToRGB(color2)\n\n    // rx and ry reflect the real coordinates in the target image\n    for (let rx = 0; rx < size; rx++) {\n      for (let ry = 0; ry < size; ry++) {\n        // Distance from the center\n        const dx = rx - 0.5 * size\n        const dy = ry - 0.5 * size\n\n        // Get the coordinates (x, y) in the unrotated Gabor patch.\n        const t = Math.atan2(dy, dx) + orient\n        const r = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))\n        const ux = r * Math.cos(t)\n        const uy = r * Math.sin(t)\n        let f\n\n        // Get the amplitude without the envelope (0 .. 1).\n        let amp = 0.5 + 0.5 * Math.cos(2.0 * Math.PI * (ux * freq + phase))\n\n        // The envelope adjustment\n        if (env === 'g') {\n          // $f = exp(-0.5 * pow($x / $std, 2) - 0.5 * pow($y / $std, 2));\n          f = Math.exp(-0.5 * Math.pow(ux / stdev, 2) - 0.5 * Math.pow(uy / stdev, 2))\n        } else if (env === 'l') {\n          f = Math.max(0, (0.5 * size - r) / (0.5 * size))\n        } else if (env === 'c') {\n          if (r > 0.5 * size) {\n            f = 0.0\n          } else {\n            f = 1.0\n          }\n        } else {\n          f = 1.0\n        }\n\n        // Apply the envelope\n        if (bgmode === 'avg') {\n          amp = amp * f + 0.5 * (1.0 - f)\n        } else {\n          amp = amp * f\n        }\n\n        // Recalculate the color values.\n        const color = {\n          r: color1.r * amp + color2.r * (1.0 - amp),\n          g: color1.g * amp + color2.g * (1.0 - amp),\n          b: color1.b * amp + color2.b * (1.0 - amp)\n        }\n\n        // Set the color values at pixel level.\n        var position = rx * 4 + (ry * size * 4)\n        px.data[position] = color.r\n        px.data[position + 1] = color.g\n        px.data[position + 2] = color.b\n        px.data[position + 3] = 255\n      }\n    }\n\n    // Put the calculated data back on the canvas and create an image of it.\n    ctx.putImageData(px, 0, 0)\n\n    // Retrieve the image from the recourses\n    var sprite = new Sprite(Texture.from(canvas))\n\n    // Position the image.\n    sprite.x = x - (size / 2)\n    sprite.y = y - (size / 2)\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Returns the canvas height\n   * @return {Number} - The height of the canvas in pixels.\n   */\n  get height () {\n    return this._height\n  }\n\n  /**\n   * Returns the canvas width\n   * @return {Number} - The width of the canvas in pixels.\n   */\n  get width () {\n    return this._width\n  }\n\n  /**\n   * Draws an image element on the canvas.\n   * @param {String} fname - The name of the element to draw.\n   * @param {Boolean|Number|String} center - If true the image is centered.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} scale - The scaling factor of the element.\n   */\n  image (fname, center, x, y, scale) {\n    // Get image from file pool.\n    const name = this.experiment._runner._syntax.remove_quotes(fname)\n    const path = this.experiment._runner._pool[name]\n    if (typeof (path) === 'undefined') {\n      this.experiment._runner._debugger.addError(`\"${fname}\" does not exist`)\n    }\n    const img = path.data\n    // Create a temporary canvas to make an image data array.\n    const canvas = document.createElement('canvas')\n    canvas.width = img.width\n    canvas.height = img.height\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n\n    const sprite = new Sprite(Texture.from(canvas))\n\n    // Scale the image.\n    sprite.scale.x = scale\n    sprite.scale.y = scale\n\n    // Position the image\n    if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n      sprite.x = x - (sprite.width / 2)\n      sprite.y = y - (sprite.height / 2)\n    } else {\n      sprite.x = x\n      sprite.y = y\n    }\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Initializes the  display container on which the canvas is displayed.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   */\n  init_display (experiment) {\n    // Set the dimension properties.\n    this._height = experiment.vars.height\n    this._width = experiment.vars.width\n\n    // Set the renderer dimensions.\n    experiment._runner._renderer.resize(this._width, this._height)\n\n    // Set the renderer background color.\n    experiment._runner._renderer.clear(this._styles._convertColorValue(experiment.vars.background, 'number'))\n    experiment._runner._renderer.backgroundColor = this._styles._convertColorValue(experiment.vars.background, 'number')\n\n    // PIXU: Set the cursor visibility to none (default).\n    experiment._runner._renderer.view.style.cursor = 'none'\n\n    // Start the fullscreen mode (if enabled).\n    experiment._runner._screen._fullScreenInit()\n\n    // Set focus to the experiment canvas.\n    experiment._runner._renderer.view.focus()\n  }\n\n  /**\n   * Draws a line element on the canvas.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  line (sx, sy, ex, ey, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create a line element.\n    var line = new Graphics()\n    line.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    line.moveTo(0, 0)\n    line.lineTo(ex - sx, ey - sy)\n    line.x = sx\n    line.y = sy\n\n    // Add the line element to container.\n    this._container.addChild(line)\n  }\n\n  /**\n   * Draws a gabor element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {String} env - The type of envelop used  for the element.\n   * @param {Object} size - Optional styling argument for the element.\n   * @param {Number} stdev - The standard deviation  for the element.\n   * @param {Number|String} color1 - The first color for the element.\n   * @param {Number|String} color2 - Teh second color for the element.\n   * @param {String} bgmode - The type of background mode for the element.\n   */\n  noise (x, y, env, size, stdev, color1, color2, bgmode) {\n    // Returns a surface containing a noise patch.\n    env = this._match_env(env)\n\n    // Create a temporary canvas to make an image data array.\n    var canvas = document.createElement('canvas')\n    canvas.width = size\n    canvas.height = size\n    var ctx = canvas.getContext('2d')\n    var px = ctx.getImageData(0, 0, size, size)\n\n    // Create a surface\n    color1 = this._styles._convertColorValueToRGB(color1)\n    color2 = this._styles._convertColorValueToRGB(color2)\n\n    // rx and ry reflect the real coordinates in the target image\n    for (let rx = 0; rx < size; rx++) {\n      for (let ry = 0; ry < size; ry++) {\n        // Distance from the center\n        const ux = rx - 0.5 * size\n        const uy = ry - 0.5 * size\n        const r = Math.sqrt(Math.pow(ux, 2) + Math.pow(uy, 2))\n        let f\n        // Get the amplitude without the envelope (0 .. 1)\n        var amp = Math.random()\n        // The envelope adjustment\n        if (env === 'g') {\n          f = Math.exp(-0.5 * Math.pow(ux / stdev, 2) - 0.5 * Math.pow(uy / stdev, 2))\n        } else if (env === 'l') {\n          f = Math.max(0, (0.5 * size - r) / (0.5 * size))\n        } else if (env === 'c') {\n          if (r > 0.5 * size) {\n            f = 0.0\n          } else {\n            f = 1.0\n          }\n        } else {\n          f = 1.0\n        }\n\n        // Apply the envelope\n        if (bgmode === 'avg') {\n          amp = amp * f + 0.5 * (1.0 - f)\n        } else {\n          amp = amp * f\n        }\n\n        // Recalculate the collor values.\n        const color = {\n          r: color1.r * amp + color2.r * (1.0 - amp),\n          g: color1.g * amp + color2.g * (1.0 - amp),\n          b: color1.b * amp + color2.b * (1.0 - amp)\n        }\n\n        // Set the color values at pixel level.\n        var position = rx * 4 + (ry * size * 4)\n        px.data[position] = color.r\n        px.data[position + 1] = color.g\n        px.data[position + 2] = color.b\n        px.data[position + 3] = 255\n      }\n    }\n\n    // Put the calculated data back on the canvas and create an image of it.\n    ctx.putImageData(px, 0, 0)\n\n    // Retrieve the image from the recourses\n    var sprite = new Sprite(Texture.from(canvas))\n\n    // Position the image.\n    sprite.x = x - (size / 2)\n    sprite.y = y - (size / 2)\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Draws a polygon element on the canvas.\n   * @param {Array} verticles - The coordinates of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  polygon (verticles, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Adjust the points.\n    var path = []\n    for (var i = 0; i < verticles.length; i++) {\n      path.push(verticles[i][0])\n      path.push(verticles[i][1])\n    }\n    path.push(verticles[0][0])\n    path.push(verticles[0][1])\n\n    // Create a polygon element.\n    var polygon = new Graphics()\n    polygon.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) polygon.beginFill(elementStyle.background_color)\n    polygon.drawPolygon(path)\n    if (elementStyle.fill === true) polygon.endFill()\n\n    // Add the polygon item to container.\n    this._container.addChild(polygon)\n  }\n\n  /** Implements the prepare phase of a canvas. */\n  prepare () {}\n\n  /**\n   * Draws a rectangle element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} w - The width of the element.\n   * @param {Number} h - The height of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  rect (x, y, w, h, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n    // Create a rectangle element.\n    var rectangle = new Graphics()\n    rectangle.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      rectangle.beginFill(elementStyle.background_color)\n      rectangle.drawRect(0, 0, w, h)\n      rectangle.endFill()\n    } else {\n      rectangle.drawRect(0, 0, w, h)\n    }\n    rectangle.x = x\n    rectangle.y = y\n\n    // Add the rectangle element to container.\n    this._container.addChild(rectangle)\n  }\n\n  /**\n   * Returns the size ion pixels of the canvas.\n   * @return {Array} - The widht an height as an array tupple.\n   */\n  size () {\n    // Create object tuple.\n    var size = {\n      width: this._width,\n      height: this._height\n    }\n    return size\n  }\n\n  /**\n   * Show a canvas on the ptimary canvas.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   * @return {Number} - The current time stamp.\n   */\n  show (experiment) {\n    // Check parameter.\n    experiment = (typeof experiment !== 'undefined') ? experiment : this.experiment\n\n    // Add the container to the stage object and update the stage.\n    this.experiment._currentCanvas = this\n\n    // Set the scaling.\n    this._container.scale.x = this.experiment._scale_x\n    this._container.scale.y = this.experiment._scale_y\n\n    // Set renderer background and render the content.\n    this.experiment._runner._renderer.backgroundColor = this._styles._background_color\n    try {\n      const c = this._styles.rgb\n      document.body.style.backgroundColor = `rgb(${c.r},${c.g},${c.b})`\n    } catch (e) {\n      console.error(e)\n    }\n    this.experiment._runner._renderer.render(this._container)\n\n    // Return the current time.\n    if (experiment != null) {\n      return experiment.clock.time()\n    } else {\n      return null\n    }\n  }\n\n  /**\n   * Draws a text element on the canvas.\n   * @param {String} txt - The x coordinate of the element.\n   * @param {Boolean} center - If true the text must be centered.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Boolean} html - If true the text parameter contains HTML tags.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  text (txt, center, x, y, html, styleArgs) {\n    // Newlines are not dealt with correctly, so we convert them to <br />\n    // tags, which results in the same behavior as the desktop.\n    txt = txt.replace('\\n', '<br />')\n    // Get the style\n    const elementStyle = this._getStyle(styleArgs)\n\n    // Only jump through the HTML rendering hoops if the html == 'yes' and\n    // text actually contains HTML markup.\n    if ((html === 'yes') && (this._containsHTML(txt))) {\n      //  Define the text block object.\n      const textBlock = {\n        element_style: elementStyle,\n        height: 0,\n        row: {\n          ascent: 0,\n          height: 0,\n          text_elements: [],\n          text_dimensions: [],\n          text_underline: [],\n          width: 0\n        },\n        rows: [],\n        styles: [],\n        width: 0,\n        x_pos: 4,\n        y_pos: 0\n      }\n\n      // First create a div container for parsing the html text.\n      const div = document.createElement('div')\n      document.body.appendChild(div)\n      div.style.fontFamily = elementStyle.font_family\n      div.style.fontSize = String(elementStyle.font_size) + 'px'\n      div.style.fontWeight = (elementStyle.font_bold === true) ? 'bold' : 'normal'\n      div.style.lineHeight = 'normal'\n      div.style.display = 'inline-block'\n      div.style.visibility = 'hidden'\n      div.innerHTML = txt\n\n      // Parse the html recursive.\n      this._parseHtmlNode(div, textBlock, elementStyle)\n\n      // Remove the html div.\n      document.body.removeChild(div)\n\n      // Add the last row (if any).\n      if (textBlock.row.text_elements.length !== 0) {\n        textBlock.height = textBlock.height + textBlock.row.height\n        textBlock.rows.push(textBlock.row)\n      }\n\n      // Recalculate the x and y positions depending on height, width and centering.\n      textBlock.y_pos = 0\n      for (let i = 0; i < textBlock.rows.length; i++) {\n        // Parse a textline.\n        for (let j = 0; j < textBlock.rows[i].text_elements.length; j++) {\n          // Check for vertical correction.\n          const adjust = textBlock.rows[i].ascent - textBlock.rows[i].text_dimensions[j].ascent\n          textBlock.rows[i].text_elements[j].y = textBlock.y_pos + adjust\n\n          // Check for horizontal centering.\n          if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n            textBlock.rows[i].text_elements[j].x = textBlock.rows[i].text_elements[j].x + x - (textBlock.rows[i].width / 2)\n            textBlock.rows[i].text_elements[j].y = textBlock.rows[i].text_elements[j].y + y - (textBlock.height / 2)\n          } else {\n            textBlock.rows[i].text_elements[j].x = textBlock.rows[i].text_elements[j].x + x\n            textBlock.rows[i].text_elements[j].y = textBlock.rows[i].text_elements[j].y + y + 6\n          }\n\n          // if underlined add additional styling.\n          if (textBlock.rows[i].text_underline[j] === true) {\n            this.line(textBlock.rows[i].text_elements[j].x,\n              textBlock.rows[i].text_elements[j].y + textBlock.rows[i].text_dimensions[j].ascent + 7,\n              textBlock.rows[i].text_elements[j].x + textBlock.rows[i].text_elements[j].width,\n              textBlock.rows[i].text_elements[j].y + textBlock.rows[i].text_dimensions[j].ascent + 7,\n              elementStyle)\n          }\n\n          //  Add text element to the stage.\n          this._container.addChild(textBlock.rows[i].text_elements[j])\n        }\n        textBlock.y_pos = textBlock.y_pos + textBlock.rows[i].height\n      }\n    } else {\n      //  Create the text element\n      var textStyle = {\n        fontFamily: elementStyle.font_family,\n        fontSize: elementStyle.font_size,\n        fontWeight: (elementStyle.font_bold === true) ? 'bold' : 'normal',\n        fill: elementStyle.color\n      }\n      var textElement = new Text(txt, textStyle)\n\n      if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n        textElement.x = x - (textElement.width / 2)\n        textElement.y = y - (textElement.height / 2)\n      } else {\n        textElement.x = x\n        textElement.y = y\n      }\n\n      //  Add text element to the stage.\n      this._container.addChild(textElement)\n    }\n  }\n}\n","import isInteger from 'lodash/isInteger'\n\n/** Class representing a style container. */\nexport default class Styles {\n  /** Styles is a simple class that holds information about the style. */\n  constructor (item) {\n    this._initConstants()\n    // Set class private properties.\n    if (typeof (item) === 'undefined') {\n      this._background_color = 0x000000\n      this._bidi = false\n      this._color = 'white'\n      this._fill = false\n      this._font_bold = false\n      this._font_family = 'Arial'\n      this._font_italic = false\n      this._font_size = 24\n      this._font_underline = false\n      this._html = false\n      this._penwidth = 1\n    } else {\n      this.background_color = item.vars.get('background', 0x000000)\n      this.bidi = item.vars.get('bidi', 'no')\n      this.color = item.vars.get('foreground', 'white')\n      this.fill = item.vars.get('fill', 'no') === 'yes'\n      this.font_bold = item.vars.get('font_bold', 'no')\n      this.font_family = item.vars.get('font_family', 'Arial')\n      this.font_italic = item.vars.get('font_italic', 'no')\n      this.font_size = item.vars.get('font_size', 24)\n      this.font_underline = item.vars.get('font_underline', 'no')\n      this.html = item.vars.get('html', 'no')\n      this.penwidth = item.vars.get('penwidth', 1)\n    }\n  }\n\n  /**\n   * Converts a color value (string, number of rgb to a numeric value for use in PIXI.\n   * @param {String|Number|Object} color - The color to convert.\n   * @return {Number} - The color value.\n   */\n\n  _convertColorValue (color) {\n    var convertedColor = 0\n    // Check if the color definition is a number or a string value.\n    if (typeof (color) === 'string') {\n      // Check if the string is a hex string.\n      if (/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(color) === true) {\n        // Check if hex string is 3 of 6 character based.\n        if (color.length === 4) {\n          // Expand the color to 6 characters.\n          convertedColor = parseInt('0x' + color[1] + color[1] + color[2] + color[2] + color[3] + color[3], 16)\n        } else {\n          convertedColor = parseInt('0x' + color[1] + color[2] + color[3] + color[4] + color[5] + color[6], 16)\n        }\n      } else if (typeof this._DEFAULT_COLOURS[color.toLowerCase()] !== 'undefined') {\n        // Value is a constant color name, convert it.\n        convertedColor = parseInt(this._DEFAULT_COLOURS[color.toLowerCase()], 16)\n      } else if (color.slice(0, 3).toLowerCase() === 'rgb') {\n        // Value is a rgb string number, convert it.\n        var a = color.split('(')[1].split(')')[0]\n        a = a.split(',')\n        var b = a.map(function (x) {\n          // For each array element\n          if (/^\\d+(\\.\\d+)?%$/.test(x)) {\n            // pass\n            x = x.slice(0, -1)\n            x = Math.round((parseInt(x) / 100) * 255)\n            x = x.toString(16)\n          } else {\n            // fail\n            x = parseInt(x).toString(16) // Convert to a base16 string\n          }\n          return (x.length === 1) ? '0' + x : x // Add zero if we get only one character\n        })\n        convertedColor = parseInt('0x' + b.join(''))\n      }\n    } else if (this._isInt(color) === true) {\n      if (color < 256) {\n        // Luminant value, so convert it to gray scale.\n        convertedColor = (256 * 256 * color) + (256 * color) + color\n      } else {\n        // Luminant values above 255 are not supported, return white.\n        convertedColor = 16843008\n      }\n    }\n    // Return the converted color as nubmer value.\n    return convertedColor\n  }\n\n  _convertColorValueToRGB (color) {\n    // Convert the color to numeric values.\n    var convertedColor = this._convertColorValue(color)\n    // Convert colors to rgb format.\n    return {\n      r: convertedColor >> 16,\n      g: convertedColor >> 8 & 0xFF,\n      b: convertedColor & 0xFF\n    }\n  }\n\n  get rgb () {\n    return {\n      r: this._background_color >> 16,\n      g: this._background_color >> 8 & 0xFF,\n      b: this._background_color & 0xFF\n    }\n  }\n\n  set rgb (val) {\n  }\n\n  /**\n   * Checks if the passed value is an integer.\n   * @param {Number} value -  The value to check.\n   * @return {Boolean} - True if passed value is an integer.\n   */\n  _isInt (value) {\n    return isInteger(value)\n  }\n\n  /**\n   * Checks if value is possibly specified as 'yes'/'no' or 1/0 instead of\n   * true or false (as is done in OS script). Convert 'yes' and 'no' values\n   * to booleans\n   * @param {Number|String} value - The value to check.\n   * @return {Boolean} - The original boolean, or true if value was 'yes'.\n   */\n  _checkVal (value) {\n    return [true, 'yes', 1, '1'].indexOf(value) !== -1\n  }\n\n  /**\n   * Get the background_color value.\n   * @return {String} The background_color value.\n   */\n  get background_color () {\n    return this._background_color\n  }\n\n  /**\n   * Set the background_color value.\n   * @param {Number|String} val - The background_color value to set.\n   */\n  set background_color (val) {\n    this._background_color = this._convertColorValue(val, 'number')\n  }\n\n  /**\n   * Get the bidi value.\n   * @return {Boolean} The bidi value.\n   */\n  get bidi () {\n    return this._bidi\n  }\n\n  /**\n   * Set the bidi value.\n   * @param {Boolean} val - The bidi value to set.\n   */\n  set bidi (val) {\n    this._bidi = this._checkVal(val)\n  }\n\n  /**\n   * Get the color value.\n   * @return {String} The color value.\n   */\n  get color () {\n    return this._color\n  }\n\n  /**\n   * Set the color value.\n   * @param {Number|String} val - The color value to set.\n   */\n  set color (val) {\n    this._color = this._convertColorValue(val, 'number')\n  }\n\n  /**\n   * Get the fill value.\n   * @return {Boolean} The fill value.\n   */\n  get fill () {\n    return this._fill\n  }\n\n  /**\n   * Set the fill value.\n   * @param {Boolean} val - The fill value to set.\n   */\n  set fill (val) {\n    this._fill = ([1, '1', true, 'yes'].indexOf(val) !== -1)\n  }\n\n  /**\n   * Get the font_bold value.\n   * @return {Boolean} The font_bold value.\n   */\n  get font_bold () {\n    return this._font_bold\n  }\n\n  /**\n   * Set the font_bold value.\n   * @param {Boolean} val - The font_bold value to set.\n   */\n  set font_bold (val) {\n    this._font_bold = this._checkVal(val)\n  }\n\n  /**\n   * Get the font_family value.\n   * @return {String} The font_family value.\n   */\n  get font_family () {\n    return this._font_family\n  }\n\n  /**\n   * Set the font_family value.\n   * @param {String} val - The font_family value to set.\n   */\n  set font_family (val) {\n    if (val in this._DEFAULT_FONTS) {\n      this._font_family = this._DEFAULT_FONTS[val]\n    } else {\n      this._font_family = val\n    }\n  }\n\n  /**\n   * Get the font_italic value.\n   * @return {Boolean} The font_italic value.\n   */\n  get font_italic () {\n    return this._font_italic\n  }\n\n  /**\n   * Set the font_italic value.\n   * @param {Boolean} val - The font_bold value to set.\n   */\n  set font_italic (val) {\n    this._font_italic = this._checkVal(val)\n  }\n\n  /**\n   * Get the font_size value.\n   * @return {Number} The font_size value.\n   */\n  get font_size () {\n    return this._font_size\n  }\n\n  /**\n   * Set the font_size value.\n   * @param {Number} val - The font_size value to set.\n   */\n  set font_size (val) {\n    if (!this._isInt(val)) {\n      // remove px part\n      this._font_size = Number(val.slice(0, -2))\n    } else {\n      this._font_size = val\n    }\n  }\n\n  /**\n   * Get the font_underline value.\n   * @return {Boolean} The font_underline value.\n   */\n  get font_underline () {\n    return this._font_underline\n  }\n\n  /**\n   * Set the font_underline value.\n   * @param {Boolean} val - The font_underline value to set.\n   */\n  set font_underline (val) {\n    this._font_underline = this._checkVal(val)\n  }\n\n  /**\n   * Get the html value.\n   * @return {Boolean} The html value.\n   */\n  get html () {\n    return this._html\n  }\n\n  /**\n   * Set the html value.\n   * @param {Boolean} val - The html value to set.\n   */\n  set html (val) {\n    this._html = this._checkVal(val)\n  }\n\n  /**\n   * Get the penwidth value.\n   * @return {Boolean} The penwidth value.\n   */\n  get penwidth () {\n    return this._penwidth\n  }\n\n  /**\n   * Set the penwidth value.\n   * @param {Boolean} val - The penwidth value to set.\n   */\n  set penwidth (val) {\n    if (!this._isInt(val)) {\n      this._penwidth = 1\n    }\n    this._penwidth = val\n  }\n\n  _initConstants () {\n    // Set constant default colors.\n    this._DEFAULT_COLOURS = {\n      aliceblue: '0xf0f8ff',\n      antiquewhite: '0xfaebd7',\n      aqua: '0x00ffff',\n      aquamarine: '0x7fffd4',\n      azure: '0xf0ffff',\n      beige: '0xf5f5dc',\n      bisque: '0xffe4c4',\n      black: '0x000000',\n      blanchedalmond: '0xffebcd',\n      blue: '0x0000ff',\n      blueviolet: '0x8a2be2',\n      brown: '0xa52a2a',\n      burlywood: '0xdeb887',\n      cadetblue: '0x5f9ea0',\n      chartreuse: '0x7fff00',\n      chocolate: '0xd2691e',\n      coral: '0xff7f50',\n      cornflowerblue: '0x6495ed',\n      cornsilk: '0xfff8dc',\n      crimson: '0xdc143c',\n      cyan: '0x00ffff',\n      darkblue: '0x00008b',\n      darkcyan: '0x008b8b',\n      darkgoldenrod: '0xb8860b',\n      darkgray: '0xa9a9a9',\n      darkgreen: '0x006400',\n      darkgrey: '0xa9a9a9',\n      darkkhaki: '0xbdb76b',\n      darkmagenta: '0x8b008b',\n      darkolivegreen: '0x556b2f',\n      darkorange: '0xff8c00',\n      darkorchid: '0x9932cc',\n      darkred: '0x8b0000',\n      darksalmon: '0xe9967a',\n      darkseagreen: '0x8fbc8f',\n      darkslateblue: '0x483d8b',\n      darkslategray: '0x2f4f4f',\n      darkslategrey: '0x2f4f4f',\n      darkturquoise: '0x00ced1',\n      darkviolet: '0x9400d3',\n      deeppink: '0xff1493',\n      deepskyblue: '0x00bfff',\n      dimgray: '0x696969',\n      dimgrey: '0x696969',\n      dodgerblue: '0x1e90ff',\n      firebrick: '0xb22222',\n      floralwhite: '0xfffaf0',\n      forestgreen: '0x228b22',\n      fuchsia: '0xff00ff',\n      gainsboro: '0xdcdcdc',\n      ghostwhite: '0xf8f8ff',\n      gold: '0xffd700',\n      goldenrod: '0xdaa520',\n      gray: '0x808080',\n      grey: '0x808080',\n      green: '0x008000',\n      greenyellow: '0xadff2f',\n      honeydew: '0xf0fff0',\n      hotpink: '0xff69b4',\n      'indianred ': '0xcd5c5c',\n      indigo: '0x4b0082',\n      ivory: '0xfffff0',\n      khaki: '0xf0e68c',\n      lavender: '0xe6e6fa',\n      lavenderblush: '0xfff0f5',\n      lawngreen: '0x7cfc00',\n      lemonchiffon: '0xfffacd',\n      lightblue: '0xadd8e6',\n      lightcoral: '0xf08080',\n      lightcyan: '0xe0ffff',\n      lightgoldenrodyellow: '0xfafad2',\n      lightgray: '0xd3d3d3',\n      lightgrey: '0xd3d3d3',\n      lightgreen: '0x90ee90',\n      lightpink: '0xffb6c1',\n      lightsalmon: '0xffa07a',\n      lightseagreen: '0x20b2aa',\n      lightskyblue: '0x87cefa',\n      lightslategray: '0x778899',\n      lightslategrey: '0x778899',\n      lightsteelblue: '0xb0c4de',\n      lightyellow: '0xffffe0',\n      lime: '0x00ff00',\n      limegreen: '0x32cd32',\n      linen: '0xfaf0e6',\n      magenta: '0xff00ff',\n      maroon: '0x800000',\n      mediumaquamarine: '0x66cdaa',\n      mediumblue: '0x0000cd',\n      mediumorchid: '0xba55d3',\n      mediumpurple: '0x9370d8',\n      mediumseagreen: '0x3cb371',\n      mediumslateblue: '0x7b68ee',\n      mediumspringgreen: '0x00fa9a',\n      mediumturquoise: '0x48d1cc',\n      mediumvioletred: '0xc71585',\n      midnightblue: '0x191970',\n      mintcream: '0xf5fffa',\n      mistyrose: '0xffe4e1',\n      moccasin: '0xffe4b5',\n      navajowhite: '0xffdead',\n      navy: '0x000080',\n      oldlace: '0xfdf5e6',\n      olive: '0x808000',\n      olivedrab: '0x6b8e23',\n      orange: '0xffa500',\n      orangered: '0xff4500',\n      orchid: '0xda70d6',\n      palegoldenrod: '0xeee8aa',\n      palegreen: '0x98fb98',\n      paleturquoise: '0xafeeee',\n      palevioletred: '0xd87093',\n      papayawhip: '0xffefd5',\n      peachpuff: '0xffdab9',\n      peru: '0xcd853f',\n      pink: '0xffc0cb',\n      plum: '0xdda0dd',\n      powderblue: '0xb0e0e6',\n      purple: '0x800080',\n      red: '0xff0000',\n      rosybrown: '0xbc8f8f',\n      royalblue: '0x4169e1',\n      saddlebrown: '0x8b4513',\n      salmon: '0xfa8072',\n      sandybrown: '0xf4a460',\n      seagreen: '0x2e8b57',\n      seashell: '0xfff5ee',\n      sienna: '0xa0522d',\n      silver: '0xc0c0c0',\n      skyblue: '0x87ceeb',\n      slateblue: '0x6a5acd',\n      slategray: '0x708090',\n      slategrey: '0x708090',\n      snow: '0xfffafa',\n      springgreen: '0x00ff7f',\n      steelblue: '0x4682b4',\n      tan: '0xd2b48c',\n      teal: '0x008080',\n      thistle: '0xd8bfd8',\n      tomato: '0xff6347',\n      turquoise: '0x40e0d0',\n      violet: '0xee82ee',\n      wheat: '0xf5deb3',\n      white: '0xffffff',\n      whitesmoke: '0xf5f5f5',\n      yellow: '0xffff00',\n      yellowgreen: '0x9acd32'\n    }\n\n    // Set constant default fonts.\n    this._DEFAULT_FONTS = {\n      sans: 'Droid Sans',\n      serif: 'Droid Serif',\n      mono: 'Droid Sans Mono',\n      'chinese-japanese-korean': 'WenQuanYi Micro Hei',\n      arabic: 'Droid Arabic Naskh',\n      hebrew: 'Droid Sans Hebrew',\n      hindi: 'Lohit Hindi'\n    }\n  }\n}\n","import CanvasClass from '../backends/canvas'\n\n/**\n * A proxy handler for the VarStore that maps properties onto calls to\n * VarStore.get(), so that variables are automatically evaluated, just like\n * in the OpenSesame `var` API.\n */\nclass VarStoreHandler {\n  get (target, prop) {\n    // The VarStore sets a property on itself to bypass this proxy. This\n    // avoids feedback loops when the VarStore tries to get a variable without\n    // evaluating it.\n    if (target._bypass_proxy === true) {\n      return target[prop]\n    }\n    return typeof target[prop] === 'string'\n      ? target.get(prop, null, true, null, false)\n      : target[prop]\n  }\n}\n\n/**\n * A workspace for executing inline JavaScript code. For now, the workspace is\n * not persistent, and only exposes the vars object.\n */\nexport default class JavaScriptWorkspace {\n  /**\n     * Create a JavaScript workspace.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     */\n  constructor (experiment) {\n    this.experiment = experiment\n    this.vars_proxy = new Proxy(this.experiment.vars, new VarStoreHandler())\n  }\n\n  /**\n     * Executes JavaScript code in the workspace.\n     * @param {String} js - JavaScript code to execute\n     */\n  _eval (js) {\n    // eslint-disable-next-line no-unused-vars\n    const vars = this.vars_proxy\n    // eslint-disable-next-line no-unused-vars\n    const Canvas = () => new CanvasClass(this.experiment)\n    // eslint-disable-next-line no-eval\n    eval(js)\n  }\n}\n","import {\r\n  isBoolean\r\n} from 'lodash'\r\n\r\n/** Class representing a python workspace. */\r\nexport default class PythonWorkspace {\r\n  /**\r\n   * Create a python workspace object.\r\n   * @param {Object} runner - The runner to which the python workspace belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the python workspace class.\r\n  }\r\n\r\n  /**\r\n   * Evaluate an expression within osweb.\r\n   * @param {Boolean|Object|String} bytecode - The expression to evaluate.\r\n   * @return {Boolean|Number|Object|String} - The result of the evaluated expression.\r\n   */\r\n  _eval (bytecode) {\r\n    // Check wich type of expression must be evaled.\r\n    if (isBoolean(bytecode)) {\r\n      return bytecode\r\n    } else if (typeof bytecode === 'string') {\r\n      // Open sesame script, first check for parameter values.\r\n      bytecode = this._runner._syntax.eval_text(bytecode, null, true)\r\n\r\n      // Evaluate the expression.\r\n      var evalString = this._runner._syntax.remove_quotes(bytecode)\r\n      if (evalString === 'always') {\r\n        return true\r\n      } else if (evalString === 'never') {\r\n        return false\r\n      } else {\r\n        // eslint-disable-next-line no-eval\r\n        return eval(evalString)\r\n      }\r\n    } else {\r\n      // Python script, run the internal Python interpreter.\r\n      return this._runner._pythonParser._run_statement(bytecode)\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}